/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Label;
import java.awt.print.PageFormat;
import java.awt.print.Pageable;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RepaintManager;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Emmanuel
 */
public class FieldPrint extends javax.swing.JFrame implements Printable,Pageable{
    //private Component jPanelFPrint;
   private PageFormat format;
   private int numPages;
   private int lastPage = 0;
        private double yOffset;

        //public MultiPagePrintable(JComponent component) {
        //    this.component = component;
        //}
@Override
      public int print(Graphics g, PageFormat pf,int pageIndex) throws PrinterException { 
       if ((pageIndex < 0) | (pageIndex >= numPages)) {
      return(NO_SUCH_PAGE);
   } 
      int result = NO_SUCH_PAGE; 
        double height = pf.getImageableHeight();
            jPanelFPrint.setSize(jPanelFPrint.getPreferredSize());

            if (lastPage != pageIndex) {
                lastPage = pageIndex;
                yOffset = height * pageIndex;
                if (yOffset > jPanelFPrint.getHeight()) {
                    yOffset = -1;
                }
            }

            if (yOffset >= 0) {
                Graphics2D g2d = (Graphics2D) g;

                g2d.translate((int) pf.getImageableX(),
                                (int) pf.getImageableY());
                 g2d.scale(0.8, 0.8);

                g2d.translate(0, -yOffset);
                jPanelFPrint.printAll(g2d);
                
                g2d.scale(0.8, 0.8);//controls the size of the output
                
                result = PAGE_EXISTS;
            }
            

            //Graphics2D g2d = (Graphics2D)g;
           // int x=(int)format.getImageableX();
     
        //int y=(int)format.getImageableY();
        //g2d.scale(0.8, 0.8);//controls the size of the output
       //g2d.translate(x, y+40);//control margins. Reduce by adding valu
     //g2d.translate(pf.getImageableX(), pf.getImageableY()- pageIndex*jPanelFPrint.getPreferredSize().height);
     //disableDoubleBuffering(jPanelFPrint);
     return result;
     //jPanelFPrint.paint(g2d);
        
     //enableDoubleBuffering(jPanelFPrint);
     //return(PAGE_EXISTS);
       //Graphics2D g2d=(Graphics2D)g;
        // AffineTransform old = g2d.getTransform();
         
        //int x=(int)pf.getImageableX();
        //int y=(int)pf.getImageableY();
        //g2d.scale(0.8, 0.8);//controls the size of the output
        //g2d.translate(x, y+40);//control margins. Reduce by adding valu
      
     //jPanelFPrint.paintAll(g);//does the actual printing
       // return PAGE_EXISTS; 
    
      }
      public static void disableDoubleBuffering(Component c) {
   RepaintManager currentManager = RepaintManager.currentManager(c);
   currentManager.setDoubleBufferingEnabled(false);
}

   public static void enableDoubleBuffering(Component c) {
       RepaintManager currentManager = RepaintManager.currentManager(c);
       currentManager.setDoubleBufferingEnabled(true);
   }

   @Override
   public int getNumberOfPages() {
    
      return numPages;
   }

 @Override
 public PageFormat getPageFormat(int arg0) throws IndexOutOfBoundsException {
      return format;
 }

 @Override
    public Printable getPrintable(int arg0) throws IndexOutOfBoundsException {
      // TODO Auto-generated method stub
      return this;
    }
    /**
     * Creates new form TrialBalance
     */
    public FieldPrint() {
initComponents();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFPrint = new javax.swing.JPanel();
        jLabeltitle = new javax.swing.JLabel();
        jLabeltitle1 = new javax.swing.JLabel();
        jLabeltitle2 = new javax.swing.JLabel();
        jLabeltitle3 = new javax.swing.JLabel();
        jLabeltitle4 = new javax.swing.JLabel();
        jTableAnalysis = new javax.swing.JTable();
        jLabeltitle5 = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxUnion = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButtonPrint = new javax.swing.JButton();
        jComboBoxCSO = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Field collection sheet");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelFPrint.setBackground(new java.awt.Color(255, 255, 255));
        jPanelFPrint.setAutoscrolls(true);
        jPanelFPrint.setMaximumSize(new java.awt.Dimension(10000, 10000));
        jPanelFPrint.setName(""); // NOI18N
        jPanelFPrint.setPreferredSize(new java.awt.Dimension(100, 200));

        jLabeltitle.setBackground(new java.awt.Color(0, 51, 255));
        jLabeltitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabeltitle.setForeground(new java.awt.Color(102, 0, 255));
        jLabeltitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabeltitle.setToolTipText("");

        jLabeltitle1.setBackground(new java.awt.Color(0, 51, 255));
        jLabeltitle1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabeltitle1.setForeground(new java.awt.Color(102, 102, 0));
        jLabeltitle1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabeltitle2.setBackground(new java.awt.Color(0, 51, 255));
        jLabeltitle2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabeltitle2.setForeground(new java.awt.Color(255, 0, 0));
        jLabeltitle2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabeltitle2.setToolTipText("");

        jLabeltitle3.setBackground(new java.awt.Color(0, 51, 255));
        jLabeltitle3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabeltitle3.setForeground(new java.awt.Color(102, 0, 255));
        jLabeltitle3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabeltitle3.setToolTipText("");

        jLabeltitle4.setBackground(new java.awt.Color(0, 51, 255));
        jLabeltitle4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabeltitle4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabeltitle4.setToolTipText("");

        jTableAnalysis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jTableAnalysis.setFont(new java.awt.Font("Courier New", 1, 9)); // NOI18N
        jTableAnalysis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, "0.00", "0.00", "0.00", "0.00", "0.00", null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Client's Name", "Disbursement", "Repayment", "IntRepaid", "Savings Deposit", "Savings Withdrawal", "Other"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAnalysis.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableAnalysis.setColumnSelectionAllowed(true);
        jTableAnalysis.setGridColor(new java.awt.Color(0, 0, 204));
        jTableAnalysis.setShowHorizontalLines(isEnabled());
        jTableAnalysis.setShowVerticalLines(isEnabled());
        jTableAnalysis.setSurrendersFocusOnKeystroke(true);

        jLabeltitle5.setBackground(new java.awt.Color(0, 51, 255));
        jLabeltitle5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabeltitle5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabeltitle5.setToolTipText("");

        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel4.setText("Total Collection:");

        jLabel5.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel5.setText("CSO SIGN:_________________DATE:________________");

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel6.setText("MANAGER SIGN:________________________");

        javax.swing.GroupLayout jPanelFPrintLayout = new javax.swing.GroupLayout(jPanelFPrint);
        jPanelFPrint.setLayout(jPanelFPrintLayout);
        jPanelFPrintLayout.setHorizontalGroup(
            jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFPrintLayout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(jLabeltitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabeltitle4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanelFPrintLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabeltitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabeltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeltitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFPrintLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTableAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, 978, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelFPrintLayout.createSequentialGroup()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFPrintLayout.createSequentialGroup()
                        .addGap(516, 516, 516)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFPrintLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111))))
            .addGroup(jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFPrintLayout.createSequentialGroup()
                    .addContainerGap(701, Short.MAX_VALUE)
                    .addComponent(jLabeltitle5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(38, 38, 38)))
        );
        jPanelFPrintLayout.setVerticalGroup(
            jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFPrintLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabeltitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeltitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabeltitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeltitle4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTableAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFPrintLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167))
                    .addGroup(jPanelFPrintLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(19, 19, 19)
                        .addGroup(jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanelFPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelFPrintLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jLabeltitle5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(722, Short.MAX_VALUE)))
        );

        jTableAnalysis.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTableAnalysis.getColumnModel().getColumnCount() > 0) {
            jTableAnalysis.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTableAnalysis.getColumnModel().getColumn(0).setHeaderValue("ID");
            jTableAnalysis.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTableAnalysis.getColumnModel().getColumn(1).setHeaderValue("Client's Name");
            jTableAnalysis.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTableAnalysis.getColumnModel().getColumn(2).setHeaderValue("Disbursement");
            jTableAnalysis.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTableAnalysis.getColumnModel().getColumn(3).setHeaderValue("Repayment");
            jTableAnalysis.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTableAnalysis.getColumnModel().getColumn(4).setHeaderValue("IntRepaid");
            jTableAnalysis.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTableAnalysis.getColumnModel().getColumn(5).setHeaderValue("Savings Deposit");
            jTableAnalysis.getColumnModel().getColumn(6).setPreferredWidth(120);
            jTableAnalysis.getColumnModel().getColumn(6).setHeaderValue("Savings Withdrawal");
            jTableAnalysis.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTableAnalysis.getColumnModel().getColumn(7).setHeaderValue("Other");
        }

        jComboBoxUnion.setAutoscrolls(true);
        jComboBoxUnion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUnionActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Select Union");

        jButtonPrint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonPrint.setForeground(new java.awt.Color(0, 0, 255));
        jButtonPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/HP LaserJet 400 M401.gif"))); // NOI18N
        jButtonPrint.setText("Print");
        jButtonPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Select CSO");

        jButton1.setText("print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Download");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("duplictae");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxCSO, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxUnion, 0, 92, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(169, 169, 169))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelFPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 978, Short.MAX_VALUE)
                .addGap(0, 234, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxCSO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxUnion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jButton2)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(jButton3)))
                .addGap(19, 19, 19)
                .addComponent(jPanelFPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
                .addContainerGap(2168, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
/*Image icon=null;
        try {
            icon = ImageIO.read(getClass().getResource("/exam/school.jpg"));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
   this.setIconImage(icon); */
    
   Calendar now=Calendar.getInstance();
        now.getTime();
        int year=now.get(Calendar.YEAR);
        String Smonth,Sday;
        int Omonth=now.get(Calendar.MONTH);//opening as january=0 not 1
        int day=now.get(Calendar.DAY_OF_MONTH);
         int month=Omonth+1;//note month start with january=0 in java
        Smonth=month+"";
        Sday=day+"";
       if(month<10){Smonth="0"+month;}// let it appear as two digit e.g 02
        if(day<10){Sday="0"+day;}
JTextField text= new javax.swing.JTextField();
text.setText(year+"-"+Smonth+"-"+Sday+" 00:00:00.000");
  //startdate=JOptionPane.showInputDialog("Start Date",text.getText());
  //enddate=JOptionPane.showInputDialog("End Date",text.getText());
  //JOptionPane.showMessageDialog(this,startdate+","+enddate);
JComboBox jComboDepartment= new javax.swing.JComboBox();

        now.getTime();
 Global glob = new Global();
 Connection    conn = glob.getConnect();
String query3="select * from schoolinfo";
     String  SQL ="select * from groups" ; 
BigDecimal TotalSaving=BigDecimal.ZERO,TotalLoan=BigDecimal.ZERO,TotalExpected=BigDecimal.ZERO,TotalDeposit=BigDecimal.ZERO,
        TotalWithdr=BigDecimal.ZERO,TotalOther=BigDecimal.ZERO;       
  try{  
       Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);

   ResultSet result = stmt.executeQuery(SQL);
  int i=0;
        while(result.next()){
         
     
         
          String  Group=result.getString("groupid");
         jComboDepartment.addItem(Group);
         jComboBoxUnion.addItem(Group);
 
        }  
             result.close();
            stmt.close();
         // groupid=JOptionPane.showInputDialog("GroupID", jComboDepartment.getModel().getElementAt(0) ); 
  }catch(Exception e){
   JOptionPane.showMessageDialog(this, e.getMessage());
  }

    }//GEN-LAST:event_formWindowOpened

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
String printData=jLabeltitle.getText()+"( CSO "+jComboBoxCSO.getSelectedItem().toString()+")-"+jComboBoxUnion.getSelectedItem().toString();
String printData2=jComboBoxUnion.getSelectedItem().toString();
   
MessageFormat header = new MessageFormat(printData) ;
MessageFormat footer =new MessageFormat(printData2+" PAGE  {0}");

 try
 {
 PrintRequestAttributeSet Set= new HashPrintRequestAttributeSet();
         Set.add(OrientationRequested.LANDSCAPE);
 jTableAnalysis.setFont(new Font("Courier",Font.BOLD,9));
 //jPanelFPrint.
 jTableAnalysis.print(JTable.PrintMode.FIT_WIDTH,header,footer,true,Set,false);
 }
 catch(PrinterException | HeadlessException e){JOptionPane.showMessageDialog(this, e.getMessage());
     //print job did not complete
 }
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jComboBoxUnionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUnionActionPerformed
     // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxUnionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
PrinterJob job = PrinterJob.getPrinterJob();
jPanelFPrint.setSize(jPanelFPrint.getPreferredSize());
     
        format=job.defaultPage();
       format.setOrientation(PageFormat.LANDSCAPE);
       
        Dimension page = this.jPanelFPrint.getPreferredSize();
        //JOptionPane.showMessageDialog(rootPane, page.height+" "+format.getImageableX());
        numPages = (int) Math.ceil(page.height/format.getImageableY());
          //numPages = (int) Math.ceil(page.height/778);
       job.setPrintable(this);
        job.setPageable(this);
        
        Paper paper =new Paper(); //to set paper margin
        double margin=4.5;
        paper.setImageableArea(margin, margin, paper.getWidth()-margin*1, paper.getHeight()-margin*1);
        format.setPaper(paper);
        
       
        
      
            boolean ok =job.printDialog();
            
            if(ok){
        try {
           
            job.print();// TODO add your handling code here:
        } catch (PrinterException ex) {
         JOptionPane.showMessageDialog(this, ex.getMessage());
        }
            }         // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Calendar now=Calendar.getInstance();
        now.getTime();
        int year=now.get(Calendar.YEAR);
        String Smonth,Sday;
        int Omonth=now.get(Calendar.MONTH);//opening as january=0 not 1
        int day=now.get(Calendar.DAY_OF_MONTH);
         int month=Omonth+1;//note month start with january=0 in java
        Smonth=month+"";
        Sday=day+"";
       if(month<10){Smonth="0"+month;}// let it appear as two digit e.g 02
        if(day<10){Sday="0"+day;}
JTextField text= new javax.swing.JTextField();
text.setText(year+"-"+Smonth+"-"+Sday+" 00:00:00.000");
  //startdate=JOptionPane.showInputDialog("Start Date",text.getText());
  //enddate=JOptionPane.showInputDialog("End Date",text.getText());
  //JOptionPane.showMessageDialog(this,startdate+","+enddate);
JComboBox jComboDepartment= new javax.swing.JComboBox();

        now.getTime();
 Global glob = new Global();
 Connection    conn = glob.getConnect();
String query3="select * from schoolinfo";
     String  SQL ="select * from groups" ; 
BigDecimal TotalSaving=BigDecimal.ZERO,TotalLoan=BigDecimal.ZERO,TotalExpected=BigDecimal.ZERO,TotalDeposit=BigDecimal.ZERO,
        TotalWithdr=BigDecimal.ZERO,TotalOther=BigDecimal.ZERO;       
  
          groupid=jComboBoxUnion.getSelectedItem().toString();
String SQLview="Alter VIEW [dbo].[Expected] AS " +
" SELECT     ls.LoanID,SUM(RepayWithInt) - lo.prin AS expected"+
" FROM  dbo.Loanschedule AS ls  INNER JOIN"+
" (SELECT    LoanID, SUM(servicedPrin) + SUM(servicedInt) AS prin FROM dbo.Loanschedule GROUP BY LoanID) AS lo ON ls.LoanID = lo.LoanID"+
" WHERE     (ls.Date <= '"+year+"-"+Smonth+"-"+Sday+"')"+
" GROUP BY ls.LoanID, lo.prin "+
" HAVING (SUM(ls.RepayWithInt) > lo.prin)";
          
  String query2="select distinct d.Custno,AccountName,'  ' Reg,'  ' Vol,Sum(RunningBal) as Savingbal,LoanProduct,Disburseddate,outstandingBal,expected,' ', l.instalment  from deposit d" +
" inner join (select l.Custno,loanid,LoanProduct,instalment,Disburseddate,outstandingBal*interestpercent as outstandingBal from loans l where status='Active') l" +
" on d.custno=l.custno left outer join dbo.expected  e on  e.loanid=l.loanid " +
" where groupid='"+groupid+"'" +
" group by d.custno,AccountName,LoanProduct,Disburseddate,outstandingBal,expected,l.instalment";
   jLabeltitle.setText(companyname);
    jLabeltitle2.setText("DAILY  FIELD  COLLECTION");
  jLabeltitle1.setText(groupid+"    UNION");
 jLabeltitle3.setText("CSO:  "+jComboBoxCSO.getSelectedItem().toString());
  jLabeltitle5.setText("DATE: "+year+"-"+Smonth+"-"+Sday);
     SimpleDateFormat sdfDate = new SimpleDateFormat("hh:mm:ss aa");
 Date cdate = new Date();
  String strnow=sdfDate.format(cdate);
  PreparedStatement pstmt=null;  ///////////////////////////////PreparedStatement 
  jLabeltitle4.setText("TIME: "+strnow);
        try{
     pstmt=conn.prepareStatement(SQLview);
           pstmt.executeUpdate();

 Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
           
     


            ResultSet current = stmt.executeQuery(query2);
             
            //to eliminate empty rows
    
            DefaultTableModel tmp =new DefaultTableModel(){
                @Override
      public boolean isCellEditable(int row, int column) {
        return false;
         // return (column == 5) ;
                }
            };
           
            jTableAnalysis.setModel(tmp);
            //adding columns
         jTableAnalysis.setAutoResizeMode(jTableAnalysis.AUTO_RESIZE_OFF);
             tmp.addColumn("ID");
             
             tmp.addColumn("Client's Name");
             
             tmp.addColumn("RegDep");
            
             
             tmp.addColumn("VolDep");
             tmp.addColumn("DailyDep");
             tmp.addColumn("SavingBal");
             tmp.addColumn("Reg");
             tmp.addColumn("Vol");
             
             tmp.addColumn("LoanProduct");
            
             tmp.addColumn("DisbursedDate");
             tmp.addColumn("WklyAmt");
             
             tmp.addColumn("LoanBal");
             
             tmp.addColumn("Expected");
              
             tmp.addColumn("Overdue");
               
             tmp.addColumn("RepayAmt");
             
             
             //setting column size
             jTableAnalysis.getColumnModel().getColumn(0).setPreferredWidth(60);
             jTableAnalysis.getColumnModel().getColumn(1).setPreferredWidth(120);
             jTableAnalysis.getColumnModel().getColumn(2).setPreferredWidth(80);
             jTableAnalysis.getColumnModel().getColumn(3).setPreferredWidth(80);
             jTableAnalysis.getColumnModel().getColumn(4).setPreferredWidth(80);
             jTableAnalysis.getColumnModel().getColumn(5).setPreferredWidth(80);
              jTableAnalysis.getColumnModel().getColumn(6).setPreferredWidth(60);
               jTableAnalysis.getColumnModel().getColumn(7).setPreferredWidth(80);
             jTableAnalysis.getColumnModel().getColumn(8).setPreferredWidth(80);
             jTableAnalysis.getColumnModel().getColumn(9).setPreferredWidth(80);
             jTableAnalysis.getColumnModel().getColumn(10).setPreferredWidth(60);
             jTableAnalysis.getColumnModel().getColumn(11).setPreferredWidth(80);
             jTableAnalysis.getColumnModel().getColumn(12).setPreferredWidth(70);
             jTableAnalysis.getColumnModel().getColumn(13).setPreferredWidth(70);
             jTableAnalysis.getColumnModel().getColumn(14).setPreferredWidth(70);
             
           String Pcustno="",Ccustno="";    
            int i=1;
            int Height=524;
          String exp="";
          //set header manually
           tmp.addRow(new String[1]);
           jTableAnalysis.getModel().setValueAt("ID",0,0);
               jTableAnalysis.getModel().setValueAt("Client's Name",0,1);
               jTableAnalysis.getModel().setValueAt("RegSav",0,2);
               jTableAnalysis.getModel().setValueAt("VolSav",0,3);//set others to zero
               jTableAnalysis.getModel().setValueAt("DailySav",0,4);
               jTableAnalysis.getModel().setValueAt("TotalSav",0,5);
                jTableAnalysis.getModel().setValueAt("Reg",0,6);
                     jTableAnalysis.getModel().setValueAt("Vol",0,7);
               jTableAnalysis.getModel().setValueAt("LoanProduct",0,8);
               jTableAnalysis.getModel().setValueAt("DisbursedDate",0,9);
               jTableAnalysis.getModel().setValueAt("WklyAmt",0,10);
               jTableAnalysis.getModel().setValueAt("LoanBal",0,11);
               jTableAnalysis.getModel().setValueAt("Expected",0,12);
               jTableAnalysis.getModel().setValueAt("Overdue",0,13);
               jTableAnalysis.getModel().setValueAt("RepayAmt",0,14);
             
             
                 
          //end of setting header
              while(current.next()){
       Ccustno=current.getString("custno");
        tmp.addRow(new String[i+1]); 
        Height=Height+40;
       
               //JOptionPane.showMessageDialog(this, current.getString("tranid"));  
               jTableAnalysis.getModel().setValueAt(current.getString("custno"),i,0);
               jTableAnalysis.getModel().setValueAt(current.getString("Accountname"),i,1);
               jTableAnalysis.getModel().setValueAt("  ",i,2);
               jTableAnalysis.getModel().setValueAt(" ",i,3);//set others to zero
               jTableAnalysis.getModel().setValueAt(" ",i,4);
             String   repay=current.getString("instalment")+"zero";
             if(repay.equalsIgnoreCase("nullzero")){
                   jTableAnalysis.getModel().setValueAt("0.00",i,10);    
                  }
             else{
               jTableAnalysis.getModel().setValueAt(current.getBigDecimal("instalment").setScale(2, RoundingMode.HALF_UP),i,10);
             }
              //JOptionPane.showMessageDialog(this,Pcustno+","+Ccustno);
               if(!Pcustno.equalsIgnoreCase(Ccustno)){
                jTableAnalysis.getModel().setValueAt(current.getBigDecimal("SavingBal").setScale(2, RoundingMode.HALF_UP),i,5);
               }
             
               
                jTableAnalysis.getModel().setValueAt("   ",i,6);
                jTableAnalysis.getModel().setValueAt("   ",i,7);
                         

                jTableAnalysis.getModel().setValueAt(current.getString("LoanProduct"),i,8);
                jTableAnalysis.getModel().setValueAt(current.getString("DisbursedDate").substring(0, 10),i,9);
                jTableAnalysis.getModel().setValueAt(current.getBigDecimal("outstandingBal").setScale(2, RoundingMode.HALF_UP).negate(),i,11);
                exp=current.getString("expected")+"zero";
                if(exp.equalsIgnoreCase("nullzero")){//to avoid null values
                 jTableAnalysis.getModel().setValueAt("0.00",i,12);    
                }else{
                jTableAnalysis.getModel().setValueAt(current.getBigDecimal("expected").setScale(2, RoundingMode.HALF_UP),i,12);
                 TotalExpected=TotalExpected.add(current.getBigDecimal("expected"));
                }
                jTableAnalysis.getModel().setValueAt("  ",i,14);
               if(!Pcustno.equalsIgnoreCase(Ccustno)){
                TotalSaving=TotalSaving.add(current.getBigDecimal("SavingBal"));
               }   
             
                TotalLoan=TotalLoan.add(current.getBigDecimal("outstandingBal"));
                if(current.getDouble("expected")<current.getDouble("instalment")){ //to avoid overdue column higher than expected column
                    jTableAnalysis.getModel().setValueAt(current.getBigDecimal("expected").setScale(2, RoundingMode.HALF_UP),i,13);
                }else{
            double ovdu=Double.parseDouble(jTableAnalysis.getModel().getValueAt(i,12).toString())-Double.parseDouble(jTableAnalysis.getModel().getValueAt(i,10).toString()); 
            jTableAnalysis.getModel().setValueAt(Math.abs(ovdu),i,13);
                }
                i=i+1;
                Pcustno=jTableAnalysis.getModel().getValueAt(i-1,0).toString();
            }
               jPanelFPrint.setPreferredSize(new Dimension(1024,i*40));
             ////adding client without loans
               ////get last id of client with loans
               int ii=i;//the last cust id of client with loans
               String Sql4="select distinct(d.custno),d.accountname from deposit d left outer join loans l" +
" on d.custno=l.custno" +
" where l.outstandingbal is null and d.groupid='"+jComboBoxUnion.getSelectedItem().toString()+"' and d.status='Active'";
BigDecimal  RegVolDailyTotal=BigDecimal.ZERO;

current = stmt.executeQuery(Sql4);
 tmp.addRow(new String[i+1]);
while(current.next()){
 
     Ccustno=current.getString("custno");
    i=i+1;
     tmp.addRow(new String[i]);
    jTableAnalysis.getModel().setValueAt(Ccustno,i-1,0);
    jTableAnalysis.getModel().setValueAt( current.getString("AccountName"),i-1,1); //for names
 
            }
for(int n=ii;n<i;n++){//next id after client with loans
    RegVolDailyTotal= BigDecimal.ZERO;
   String Sql="Select Runningbal,Productid from deposit where  "
            + "custno='"+jTableAnalysis.getModel().getValueAt(n, 0)+"' and status='Active'" ;
 current = stmt.executeQuery(Sql);
 while(current.next()){//to track each savings
     if(current.getString("Productid").contains("Regular Savings")){
 jTableAnalysis.getModel().setValueAt( current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP),n,2);
 RegVolDailyTotal=RegVolDailyTotal.add(current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP));
     }
 else if(current.getString("Productid").equalsIgnoreCase("RegSavgs")){
 jTableAnalysis.getModel().setValueAt( current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP),n,2);
 RegVolDailyTotal=RegVolDailyTotal.add(current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP));
                                                                  }
    else if(current.getString("Productid").equalsIgnoreCase("Voluntary Savings")){
 jTableAnalysis.getModel().setValueAt( current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP),n,3); 
 RegVolDailyTotal=RegVolDailyTotal.add(current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP));
    }
 else if(current.getString("Productid").equalsIgnoreCase("VolSavgs")){
 jTableAnalysis.getModel().setValueAt( current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP),n,3); 
 RegVolDailyTotal=RegVolDailyTotal.add(current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP));

                                                                        }
       else if(current.getString("Productid").contains("Daily")){
 jTableAnalysis.getModel().setValueAt( current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP),n,4); 
 RegVolDailyTotal=RegVolDailyTotal.add(current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP));

                                                                        }
                     }//end of while stmt
 
 jTableAnalysis.getModel().setValueAt( RegVolDailyTotal.setScale(2, RoundingMode.HALF_UP),n,5); 
  TotalSaving=TotalSaving.add( RegVolDailyTotal.setScale(2, RoundingMode.HALF_UP));
 
             }
///////end of adding client without loans

                                    for(int n=1;n<i;n++){
    try{
    String Sql="Select Runningbal,accountname from deposit where productid='Regular Savings' "
            + "and custno='"+jTableAnalysis.getModel().getValueAt(n, 0)+"'";
    String Sql2="Select Runningbal,accountname from deposit where productid='Voluntary Savings' "
            + "and custno='"+jTableAnalysis.getModel().getValueAt(n, 0)+"'";
    String Sql3="Select Runningbal,accountname from deposit where productid='Daily Savings' "
            + "and custno='"+jTableAnalysis.getModel().getValueAt(n, 0)+"'";
   
  current = stmt.executeQuery(Sql);

if(current.next()){
jTableAnalysis.getModel().setValueAt( current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP),n,2); 
    }
current = stmt.executeQuery(Sql2);

if(current.next()){
jTableAnalysis.getModel().setValueAt( current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP),n,3); 
}
current = stmt.executeQuery(Sql3);

if(current.next())
{jTableAnalysis.getModel().setValueAt( current.getBigDecimal("Runningbal").setScale(2, RoundingMode.HALF_UP),n,4); }



    }
    
     catch(Exception e){  JOptionPane.showMessageDialog(text, e.getMessage());}                    
                         }//end of for stmt

   tmp.addRow(new String[i]); 
       jTableAnalysis.getModel().setValueAt("Total:",i,2);
       jTableAnalysis.getModel().setValueAt( TotalSaving.setScale(2, RoundingMode.HALF_UP),i,5); 
       jTableAnalysis.getModel().setValueAt( TotalLoan.setScale(2, RoundingMode.HALF_UP).negate(),i,11); 
       jTableAnalysis.getModel().setValueAt( TotalExpected.setScale(2, RoundingMode.HALF_UP),i,12); 
       //jTableAnalysis.getModel().setValueAt( TotalDeposit.setScale(2, RoundingMode.HALF_UP),i,5); 
       //jTableAnalysis.getModel().setValueAt( TotalWithdr.setScale(2, RoundingMode.HALF_UP),i,6); 
       //jTableAnalysis.getModel().setValueAt( TotalOther.setScale(2, RoundingMode.HALF_UP),i,7); 
       
        tmp.addRow(new String[i+1]);
        tmp.addRow(new String[i+4]);
   ///////////////////////////////////////////////////////////////////////////////////////////get the savings
    
            current.close();
           int h= jPanelFPrint.getHeight();
            Label Csosign= new Label("CSO Sign:................");
            Label BMsign= new Label("Manager Sign:................");
            Label Dessign= new Label("DES Sign:................");
           jPanelFPrint.add(Csosign);
           jPanelFPrint.add(BMsign);
           jPanelFPrint.add(Dessign);
            jTableAnalysis.getModel().setValueAt("CSO Sign:................",i+1,1);
             jTableAnalysis.getModel().setValueAt("Manager Sign:................",i+1,6);
             jTableAnalysis.getModel().setValueAt("................",i+1,7);
             jTableAnalysis.getModel().setValueAt("Collection Date:",i+2,7);

dayth TH = new dayth();
MonthToWords MMspell = new MonthToWords();
 String  th=TH.dayth(Integer.parseInt(Sday));
   Smonth=MMspell.MonthToWords(Integer.parseInt(Smonth));
   jTableAnalysis.getModel().setValueAt(day+th+" "+Smonth+" ,"+year,i+2,8);
  
   
            
  
}
catch(Exception e){
   
if(e.getMessage().contains("RepayWithInt")){
  
     SQLview="Alter VIEW [dbo].[Expected] AS " +
" SELECT     ls.LoanID,SUM(RepayWithInt) - lo.prin AS expected"+
" FROM  dbo.Loanschedule AS ls  INNER JOIN"+
" (SELECT    LoanID, SUM(servicedPrin) + SUM(servicedInt) AS prin FROM dbo.Loanschedule GROUP BY LoanID) AS lo ON ls.LoanID = lo.LoanID"+
" WHERE     (ls.Date <= '"+year+"-"+Smonth+"-"+Sday+"')"+
" GROUP BY ls.LoanID, lo.prin "+
" HAVING (SUM(ls.RepayWithInt) > lo.prin)";
     try{
      pstmt=conn.prepareStatement(SQLview);
            pstmt.executeUpdate();
     }
     catch(Exception ex){JOptionPane.showMessageDialog(rootPane, ex.getMessage());}
}else{
    
    JOptionPane.showMessageDialog(this, e.getCause()+e.getMessage());
    
}
}            // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
Global glob = new Global();
 Connection    conn = glob.getConnect();
String SQL="select userid from Usertable where userrole='CSO'";
  
  try{  
       Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);

   ResultSet result = stmt.executeQuery(SQL);
  
        while(result.next()){
         jComboBoxCSO.addItem(result.getString("userid"));
        }
  }
  catch(Exception e){}
        
    }//GEN-LAST:event_formComponentShown

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
Global glob= new Global();
Connection conn= glob.getConnect();
String q="select loanid from Loans";

PreparedStatement pstmt=null;
try{
 Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
          ResultSet current = stmt.executeQuery(q);
           String id; 
          while(current.next()){
           id=current.getString("loanid");   
         String q2="update loans set instalment=(select Max(RepayWithInt) from Loanschedule where loanid='"+id+"') where loanid='"+id+"'"; 
           pstmt=conn.prepareStatement(q2);
           pstmt.executeUpdate();
          }
          JOptionPane.showMessageDialog(rootPane, "Completed Successfully");
}
catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FieldPrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FieldPrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FieldPrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FieldPrint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FieldPrint().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JComboBox jComboBoxCSO;
    private javax.swing.JComboBox jComboBoxUnion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabeltitle;
    private javax.swing.JLabel jLabeltitle1;
    private javax.swing.JLabel jLabeltitle2;
    private javax.swing.JLabel jLabeltitle3;
    private javax.swing.JLabel jLabeltitle4;
    private javax.swing.JLabel jLabeltitle5;
    private javax.swing.JPanel jPanelFPrint;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable jTableAnalysis;
    // End of variables declaration//GEN-END:variables
String startdate,enddate,groupid;
String ses_date,companyname,compshortname;
}
