/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author LAPO MFB
 */
public class Disburse extends javax.swing.JFrame {

    /**
     * Creates new form Disburse
     */
    public Disburse() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jLabelPix = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabelname = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldClientID = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldAmount = new javax.swing.JTextField();
        jComboBoxAmount = new javax.swing.JComboBox();
        jComboProduct = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButtonok = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaSched = new javax.swing.JTextArea();
        jLabelAccount = new javax.swing.JLabel();
        jComboBoxinstalcount = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabelP = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Disbursement Module");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(102, 0, 255));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelMain.setBackground(new java.awt.Color(153, 153, 255));
        jPanelMain.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Disbursement Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Andalus", 1, 12), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabelPix.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Schedule disbursement on:");

        jDateChooser1.setBackground(new java.awt.Color(153, 204, 0));
        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.setOpaque(false);

        jLabelname.setEditable(false);
        jLabelname.setBackground(new java.awt.Color(153, 153, 255));
        jLabelname.setColumns(20);
        jLabelname.setRows(5);
        jLabelname.setOpaque(false);
        jScrollPane1.setViewportView(jLabelname);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 167, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("ClientID");

        jTextFieldClientID.setBackground(new java.awt.Color(153, 204, 0));
        jTextFieldClientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldClientIDActionPerformed(evt);
            }
        });
        jTextFieldClientID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldClientIDKeyPressed(evt);
            }
        });

        jButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/iconsearchsmall.png"))); // NOI18N
        jButtonSearch.setContentAreaFilled(false);
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Amount");

        jTextFieldAmount.setBackground(new java.awt.Color(153, 204, 0));
        jTextFieldAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAmountActionPerformed(evt);
            }
        });

        jComboBoxAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAmountActionPerformed(evt);
            }
        });

        jComboProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboProductActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Product");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextFieldClientID)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        jButtonok.setBackground(new java.awt.Color(0, 204, 204));
        jButtonok.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonok.setText("Submit");
        jButtonok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonokActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 204, 204));
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("Schedule");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setIconTextGap(0);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextAreaSched.setEditable(false);
        jTextAreaSched.setColumns(20);
        jTextAreaSched.setFont(new java.awt.Font("Monospaced", 1, 10)); // NOI18N
        jTextAreaSched.setRows(5);
        jScrollPane2.setViewportView(jTextAreaSched);

        jLabelAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/accountsmall.jpg"))); // NOI18N
        jLabelAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAccountMouseClicked(evt);
            }
        });

        jComboBoxinstalcount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "all" }));
        jComboBoxinstalcount.setSelectedIndex(3);
        jComboBoxinstalcount.setEnabled(false);
        jComboBoxinstalcount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxinstalcountActionPerformed(evt);
            }
        });

        jLabel4.setText("Instalment Count");

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelPix, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jLabelAccount)
                        .addGap(106, 106, 106)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxinstalcount, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMainLayout.createSequentialGroup()
                                .addGap(269, 269, 269)
                                .addComponent(jButtonok))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2))))
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPix, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelMainLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(jComboBoxinstalcount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonok, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelMainLayout.createSequentialGroup()
                        .addGap(0, 21, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );

        jLabelP.setBackground(new java.awt.Color(0, 204, 204));
        jLabelP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/DISBURSE.jpg"))); // NOI18N
        jLabelP.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelP, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Global glob = new Global();
            Connection conn=glob.getConnect();
            String query;
            query="select productid from Product "
                    + " where productID like'%LN%' order by productID";
             String SQL="Select * from company";
            try{
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                ResultSet current = stmt.executeQuery(query);
               
                   
                while(current.next()){
                 jComboProduct.addItem(current.getString("productid"));
                  
                }
             current = stmt.executeQuery(SQL);
             current.next();
             ses_date=current.getString("ses_date");
             companyname=current.getString("fullname");
             compshortname=current.getString("shortname");
                current.close();
                conn.close();
            }
            catch(Exception e){ JOptionPane.showMessageDialog(this,e.getMessage());}
           
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

  
 Global glob = new Global();
 
        Connection conn=glob.getConnect();
        jComboBoxAmount.addItem(",000");
        jComboBoxAmount.addItem("0,000");
        jComboBoxAmount.addItem("00,000");
        jComboBoxAmount.addItem(",000,000");
        String SQL="Select Amount from RememberDisbursed";
        try{
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet current = stmt.executeQuery(SQL);
            while(current.next())
            {
              jComboBoxAmount.addItem(current.getString("Amount"));
            }
             current.close();
            conn.close();
        }
        catch(Exception e){ JOptionPane.showMessageDialog(this,e.getMessage());}

    }//GEN-LAST:event_formComponentShown

    private void jComboBoxAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAmountActionPerformed
        jTextFieldAmount.setText(jComboBoxAmount.getSelectedItem().toString()); 
        jTextFieldAmount.setSelectionStart(0);
        jTextFieldAmount.requestFocusInWindow();
        jTextFieldAmount.setSelectionEnd(0);
    }//GEN-LAST:event_jComboBoxAmountActionPerformed

    private void jTextFieldAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAmountActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
if(jTextFieldClientID.getText().equalsIgnoreCase("")){JOptionPane.showMessageDialog(this, "Please enter Customer ID");}
else{
        Global glob = new Global();
        Connection conn=glob.getConnect();
        byte[] fileBytes;
        String SQL2="Select count(loanid) as stage from loans where custno='"+jTextFieldClientID.getText()+"' and LoanProduct like'REGLN%'";
        String SQL="Select * from Clients where custno='"+jTextFieldClientID.getText()+"'";
        String SQL3="  Select outstandingbal,LoanProduct,status from loans where custno='"+jTextFieldClientID.getText()+"'";
        String SQL4="  Select runningBal,ProductID,status from deposit where custno='"+jTextFieldClientID.getText()+"' and status='Active'";

        try{
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet current = stmt.executeQuery(SQL);
            current.next();
            group=current.getString("GroupID");
            name=current.getString("lastname")+" "+current.getString("firstname")+" "+current.getString("middlename");
            jTextFieldClientID.setText(current.getString("Custno"));
            jLabelname.setText("The name is "+name+" and belongs to "+current.getString("GroupID")+" Group");

            fileBytes =current.getBytes("pix");
            ImageIcon pic=new ImageIcon(fileBytes);
            Image resizpic =pic.getImage().getScaledInstance(120,100,Image.SCALE_DEFAULT);
            ImageIcon resizIcon = new ImageIcon(resizpic);
            jLabelPix.setIcon(resizIcon);
                //get the loan stage
          current = stmt.executeQuery(SQL2);
          current.next();
          jLabelname.setText(jLabelname.getText()+" \n Loan Stage: "+current.getInt("stage")+"");
         //getting total loans
         current = stmt.executeQuery(SQL3);
        jLabelname.setText(jLabelname.getText()+" \n With the following loan Balance(s): ");
       BigDecimal TotalOutstanding=BigDecimal.ZERO;
        while(current.next()){
             jLabelname.setText(jLabelname.getText()+" \n"+current.getString("LoanProduct")+
                     "   "+current.getBigDecimal("outstandingBal").setScale(2, ICONIFIED)+"   "+current.getString("Status"));
TotalOutstanding=TotalOutstanding.add(current.getBigDecimal("outstandingBal").setScale(2, ICONIFIED));
        }
                     jLabelname.setText(jLabelname.getText()+" \n"+"Total Outstanding  = "+TotalOutstanding);
                     //getting total Savings
 current = stmt.executeQuery(SQL4);
        jLabelname.setText(jLabelname.getText()+" \n \n    With the following Savings Balance(s): ");
       BigDecimal TotalSavings=BigDecimal.ZERO;
        while(current.next()){
             jLabelname.setText(jLabelname.getText()+" \n"+current.getString("ProductID")+
                     "   "+current.getBigDecimal("runningBal").setScale(2, ICONIFIED)+"   "+current.getString("Status"));
TotalSavings=TotalSavings.add(current.getBigDecimal("runningBal").setScale(2, ICONIFIED));
        }
                     jLabelname.setText(jLabelname.getText()+" \n"+"Total Savings  = "+TotalSavings);

            current.close();
            conn.close();
        }
        catch(Exception e){ JOptionPane.showMessageDialog(this,e.getMessage());}

        Calendar now=Calendar.getInstance();
        now.getTime();
        int year=now.get(Calendar.YEAR);
        String Smonth,Sday;
        int Omonth=now.get(Calendar.MONTH);//opening as january=0 not 1
        int day=now.get(Calendar.DAY_OF_MONTH);
        int month=Omonth+1;//note month start with january=0 in java
        Smonth=month+"";
        Sday=day+"";
        if(month<10){Smonth="0"+month;}// let it appear as two digit e.g 02
        if(day<10){Sday="0"+day;}
        SimpleDateFormat sdf = new SimpleDateFormat("yyy-MM-dd");
        Date dt =new Date(year+"-"+Smonth+"-"+Sday);
        jDateChooser1.setDate(dt);
                        }
        
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldClientIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldClientIDKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
            jButtonSearch.doClick();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldClientIDKeyPressed

    private void jTextFieldClientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldClientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldClientIDActionPerformed

    private void jButtonokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonokActionPerformed
       if(jLabelname.getText().length()==0){
           JOptionPane.showMessageDialog(this, "Please click the search button first \n "
                   + "and verify the client before submitting");
       }else{
        boolean err=false;
        Global glob = new Global();
        String query,query1,query2,query3,query4,query5;

        PreparedStatement pstmt;

        Connection conn=glob.getConnect();//from global setting
        query2="Select max(count) as count from loans";
        query1="select count(Custno) as no from loans where Status not in ('closed','cancel' ) and Custno='"+jTextFieldClientID.getText()+"'"
                + " and loanProduct='"+jComboProduct.getSelectedItem().toString()+"'";
        query=("insert into Loans VALUES (?,?,?,?,?,?,?,?,?,?,?)");
        query3=("insert into Rememberdisbursed VALUES (?,?)");
        try{
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            //check for existing loan of thesame product
            ResultSet current = stmt.executeQuery(query1);
            current.next();
            if(current.getInt("no")>0){
                JOptionPane.showMessageDialog(this, "The user is still having running loan"+"\n"+
                        "of thesame product."+"\n loan cannot be disbursed");
            }else{
            //get last client id
             current = stmt.executeQuery(query2);
            current.next();
            String IDD;
             String dd=jDateChooser1.getDate().toString();
        String m="";
        if(dd.contains("Jan")){m="01";}
        else if(dd.contains("Feb")){m="02";}
         else if(dd.contains("Mar")){m="03";}
         else if(dd.contains("Apr")){m="04";}
         else if(dd.contains("May")){m="05";}
         else if(dd.contains("Jun")){m="06";}
        else if(dd.contains("Jul")){m="07";}
        else if(dd.contains("Aug")){m="08";}
        else if(dd.contains("Sep")){m="09";}
        else if(dd.contains("Oct")){m="10";}
        else if(dd.contains("Nov")){m="11";}
        else if(dd.contains("Dec")){m="12";}
String dt= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);

            
            if(dt.length()<10){dt=dt.substring(0,5)+"0"+dt.substring(5);};// to take care of 01/03/2018
            int id= current.getInt("count")+1;
            IDD=glob.getIDFormat(id);
            IDD="300"+IDD;
            current.close();
            pstmt=conn.prepareStatement(query);

            pstmt.setString(1,jTextFieldClientID.getText());
            pstmt.setString(2,name);
            pstmt.setString(3,IDD);
            pstmt.setString(4,jComboProduct.getSelectedItem().toString());
              
            pstmt.setString(5,dt);
            pstmt.setString(6,"-"+jTextFieldAmount.getText().replaceAll(",", ""));
            pstmt.setString(7,"Pending");
            pstmt.setString(8,group);
            pstmt.setString(9,"1");
            pstmt.setString(10,"none");
             pstmt.setString(11,"0.00");
            pstmt.executeUpdate();
            String RuntimeProdAdjinstal="1";
           
            if(!jComboBoxinstalcount.getSelectedItem().toString().contains("A") && jComboProduct.getSelectedItem().toString().contains("IND")){
                  
                RuntimeProdAdjinstal=jComboBoxinstalcount.getSelectedItem().toString();
               
                pstmt=conn.prepareStatement("update loans set instalment='"+Double.parseDouble(RuntimeProdAdjinstal)+"' where loanid='"+IDD+"'");
            pstmt.executeUpdate();
            }
            else if(jComboBoxinstalcount.getSelectedItem().toString().contains("BI") && jComboProduct.getSelectedItem().toString().contains("REGLN")){
                  
                pstmt=conn.prepareStatement("update loans set instalment='12' where loanid='"+IDD+"'");
            pstmt.executeUpdate();
            }
              
            
            JOptionPane.showMessageDialog(this,"Loan Disbursed but inactive,Boss");

            jDateChooser1.cleanup();
            jTextFieldAmount.setText("");
            jTextFieldClientID.setText("");
            jComboProduct.setSelectedItem("");
            jLabelname.setText("");
            jLabelPix.setIcon(null);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
  try
  {
        pstmt=conn.prepareStatement(query3);
         pstmt.setString(1,jTextFieldAmount.getText().replaceAll(",", ""));
            pstmt.setString(2,jTextFieldAmount.getText());
            pstmt.executeUpdate();
          }
  catch(Exception ex){}
  
       }     
    }//GEN-LAST:event_jButtonokActionPerformed

    private void jLabelAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAccountMouseClicked
        if (jTextFieldClientID.getText().equalsIgnoreCase(" ")){JOptionPane.showMessageDialog(this, "No ClientID found!!");}
        else {Global glob = new Global();
            Connection conn=glob.getConnect();
            String query,query2,query3,query4,query5;
            query="select Custno,AccountID,AccountName,ProductID,RunningBal,status  from Deposit where custNo='"+jTextFieldClientID.getText()+"' union all select Custno,LoanID,AccountName,LoanProduct,OutstandingBal,status from loans" +
            " where custNo='"+jTextFieldClientID.getText()+"'";

            Account acc = new Account();
            try{
                Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
                ResultSet current = stmt.executeQuery(query);
                acc.jTextFieldGroup.setText((group) );

                //acc.jTextFieldClientID.setText(current.getString("Custno"));
                //acc.jTextFieldName.setText((current.getString("accountName")));
                int i=0;
                while(current.next()){
                    acc.jTextFieldClientID.setText(current.getString("Custno"));
                    acc.jTextFieldName.setText((current.getString("accountName")));

                    acc.jTableAccount.getModel().setValueAt(current.getString("AccountID"),i,0);
                    acc.jTableAccount.getModel().setValueAt(current.getString("ProductID"),i,1);
                    acc.jTableAccount.getModel().setValueAt(current.getInt("RunningBal"),i,2);
                    acc.jTableAccount.getModel().setValueAt(current.getString("status"),i,3);

                    i=i+1;
                }
                acc.jLabelPix.setIcon(jLabelPix.getIcon());
                current.close();
                conn.close();
            }
            catch(Exception e){ JOptionPane.showMessageDialog(this,e.getMessage());}
            acc.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelAccountMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//if(jTextFieldClientID.getText().equalsIgnoreCase("")){JOptionPane.showMessageDialog(this,"No CLient ID");}
 if(jTextFieldAmount.getText().startsWith(",")){JOptionPane.showMessageDialog(this,"Amount to be disbursed must be enterd");}
 else if(jDateChooser1.isValid()){JOptionPane.showMessageDialog(this,"Invalid Date or Date not entered");}
 else{ //begining of coding if
    Calendar now=Calendar.getInstance();
    
double InterestRate=0; int term=0,moratorium=1;
int instalcount=0,noOfmonths=0;
 String dd=jDateChooser1.getDate().toString();
        String m="";
        if(dd.contains("Jan")){m="0";} //0 is equal to January (0-11)
        else if(dd.contains("Feb")){m="01";}
         else if(dd.contains("Mar")){m="02";}
         else if(dd.contains("Apr")){m="03";}
         else if(dd.contains("May")){m="04";}
         else if(dd.contains("Jun")){m="05";}
        else if(dd.contains("Jul")){m="06";}
        else if(dd.contains("Aug")){m="07";}
        else if(dd.contains("Sep")){m="08";}
        else if(dd.contains("Oct")){m="09";}
        else if(dd.contains("Nov")){m="10";}
        else if(dd.contains("Dec")){m="11";}// 11 is equal to December (0-11)
String dtt= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);
now.set(Integer.parseInt(dd.substring(dd.length()-4)), Integer.parseInt(m), Integer.parseInt(dd.substring(8,10)));
//JOptionPane.showMessageDialog(rootPane, now);
if(dtt.length()<10){dtt=dtt.substring(0,5)+"0"+dtt.substring(5);};// to take care of 01/03/2018
//set the date to user selected date

  int count=1;

String frqncy="";
double Amount=Double.parseDouble(jTextFieldAmount.getText().replaceAll(",", ""));
String SQL="Select * from Product where ProductID='"+ jComboProduct.getSelectedItem()+"'";
      
Global glob = new Global();
glob.getHolidays();//this is a function to fetch holiday
//JOptionPane.showMessageDialog(this, glob.holidays[1]);//////////////////////////////////////////
 int repaygap=1;//to determine Bi-weekly,monthly,bi-monthly and quarterly payment
Connection conn = glob.getConnect();
try{
Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet current = stmt.executeQuery(SQL);
            current.next();
 term = current.getInt("term");
 moratorium= current.getInt("moratorium");
 InterestRate=current.getDouble("InterestRate");
 frqncy=current.getString("paymentfrequency");
 noOfmonths=current.getInt("monthduration");
 instalcount=term-moratorium;

 String adjInstalcount="all";
 adjInstalcount=jComboBoxinstalcount.getSelectedItem().toString();
 if(    !adjInstalcount.equalsIgnoreCase("all") && jComboProduct.getSelectedItem().toString().contains("IND")){
     repaygap=instalcount/(Integer.parseInt(adjInstalcount));
     instalcount=Integer.parseInt(adjInstalcount);
   
     now.add(Calendar.MONTH,(repaygap-1)) ;
 }else if(adjInstalcount.equalsIgnoreCase("BI-Weekly")&& jComboProduct.getSelectedItem().toString().contains("REGLN") ) 
 {
     repaygap=0;  //Bi-weekly installment
     instalcount=12; //Bi-weekly installment 
      Biweekly=true;
 }
 else{
     Biweekly=false;
     
 }
current.close();
}
catch(Exception e){ JOptionPane.showMessageDialog(this,e.getMessage());}
double totalInt=Amount*InterestRate/12*noOfmonths/100;
JOptionPane.showMessageDialog(this,"Total interest on loan is "+totalInt);
double Intpercent=(InterestRate/12*noOfmonths/100)+1;
double AmountWithint=totalInt+Amount;
double repayment=AmountWithint/instalcount;
double Intrepay=totalInt/instalcount;
            SimpleDateFormat sdf= new SimpleDateFormat("yyyy-MM-dd");
            String ddd="";
    
         if(moratorium==1){
         now.add(Calendar.DATE,14);//to week of grace
         ddd=sdf.format(now.getTime()).toString().substring(8,10)+sdf.format(now.getTime()).toString().substring(4,7);
        
        }
        
  
            //now.getTime();
      BigDecimal intrepay=BigDecimal.valueOf(Intrepay);
           BigDecimal repaymnt=BigDecimal.valueOf(repayment);
       
      //Creating space variables as sp1 and sp2
      String sp2="       ",sp1="        ";
             
    try {
      
    int lastschedEven=term-moratorium;//to get last schedule for fractional differences
   BigDecimal RunningPrin = BigDecimal.ONE;
   BigDecimal RunningInt = BigDecimal.ONE;
   BigDecimal RunningPrinWithInt = BigDecimal.ONE;
          jTextAreaSched.setText("                                                          "+compshortname+" \n"+"                     "
                  + "                                Proposed Loan schedule "+
                  "\n"+"No"+sp1+"   Date"+sp1+"    Balance"+sp1+" Repay+Int"+sp1+"PrinRepay"+sp1+"Int"+sp1+"  Status"+sp1+"  ClientID");
          if(frqncy.equalsIgnoreCase("monthly")){
               now.add(Calendar.MONTH,1) ; //to give one month grace for monthly loans and adds to two or three months grace
                     }
         
        while(AmountWithint>0 && count<=(term-moratorium)){
   ddd=sdf.format(now.getTime()).toString().substring(8,10)+sdf.format(now.getTime()).toString().substring(4,7);
//the above shows the correct holiday format with the note pad
            if(glob.checkHoliday(ddd)){//this will skip public holidays
                if(frqncy.equalsIgnoreCase("weekly")){now.add(Calendar.DATE,7);//to increase date
            // JOptionPane.showMessageDialog(this,ddd);
             }else if(frqncy.equalsIgnoreCase("monthly")){
              now.add(Calendar.DATE,1) ;  //to calculate one day extra for Monthly and Bi-Monthly and Quarterly payment
             }
              
             continue;   
            }//end of if check holiday is true
         //Creating Schedule of loans
        ///////////////////////////////////////////////
        BigDecimal AmountWithintt = new BigDecimal(AmountWithint).setScale(2, RoundingMode.HALF_EVEN);
       
        BigDecimal CumulaPrin=repaymnt.setScale(2, RoundingMode.HALF_UP).subtract(intrepay.setScale(2, RoundingMode.HALF_UP)).multiply(BigDecimal.valueOf(lastschedEven-1));

         String lastbal=BigDecimal.valueOf(Amount).setScale(2, RoundingMode.HALF_UP).subtract(CumulaPrin).setScale(2, RoundingMode.HALF_UP).add(intrepay.setScale(2, RoundingMode.HALF_UP)).toString();
     
        if(count==lastschedEven){ 
              jTextAreaSched.setText(jTextAreaSched.getText()+"\n("+count+")"+sp2+sdf.format(now.getTime())+sp1+String.format("%1$10s", lastbal)
                +sp1+BigDecimal.valueOf(Amount).setScale(2, RoundingMode.HALF_UP).subtract(CumulaPrin).setScale(2, RoundingMode.HALF_UP).add(intrepay.setScale(2, RoundingMode.HALF_UP)).toString()+sp1+BigDecimal.valueOf(Amount).setScale(2, RoundingMode.HALF_UP).subtract(CumulaPrin).setScale(2, RoundingMode.HALF_UP).toString()+sp1+intrepay.setScale(2, RoundingMode.HALF_UP).setScale(2, RoundingMode.HALF_UP).toString()+sp1+"Not Serviced"
        +sp1+jTextFieldClientID.getText());
      
        } 
             
        else{
           if(count>9){jTextAreaSched.setText(jTextAreaSched.getText()+"\n("+count+")"+sp2+sdf.format(now.getTime())+sp1+String.format("%1$10s",AmountWithintt)+sp1+repaymnt.setScale(2, RoundingMode.HALF_UP).toString()
                +sp1+repaymnt.setScale(2, RoundingMode.HALF_UP).subtract(intrepay.setScale(2, RoundingMode.HALF_UP)).toString()
+sp1+intrepay.setScale(2, RoundingMode.HALF_UP).toString()+sp1+"Not Serviced"+sp1+jTextFieldClientID.getText());
  } else{
         jTextAreaSched.setText(jTextAreaSched.getText()+"\n("+count+")"+sp1+sdf.format(now.getTime())+sp1+String.format("%1$10s",AmountWithintt)+sp1+repaymnt.setScale(2, RoundingMode.HALF_UP).toString()
                +sp1+repaymnt.setScale(2, RoundingMode.HALF_UP).subtract(intrepay.setScale(2, RoundingMode.HALF_UP)).toString()
+sp1+intrepay.setScale(2, RoundingMode.HALF_UP).toString()+sp1+"Not Serviced"+sp1+jTextFieldClientID.getText());
           }
             }

       
        
          
         
       

         
             //JOptionPane.showMessageDialog(this,totalInt+" "+ AmountWithint+"----"+repaymnt.setScale(2, RoundingMode.HALF_UP)+"int on repay"+ intrepay.setScale(2, RoundingMode.HALF_UP)+ " and term is "+term+" and moratorium is "+moratorium);
             if(frqncy.equalsIgnoreCase("weekly") && Biweekly==false){now.add(Calendar.DATE,7);//to increase date
             
             }else if(frqncy.equalsIgnoreCase("monthly")){
              now.add(Calendar.MONTH,repaygap) ;  //to calculate for Monthly and Bi-Monthly and Quarterly payment  
             }
               else if(frqncy.equalsIgnoreCase("weekly") && Biweekly==true){
              now.add(Calendar.DATE,14) ;  //to calculate for Monthly and Bi-Monthly and Quarterly payment
             }
            count=count+1;
           AmountWithint=AmountWithint-repayment;
           RunningInt =RunningInt.add(intrepay);
           RunningPrin =RunningPrin.add(repaymnt).subtract(intrepay);
          RunningPrinWithInt =RunningPrinWithInt.add(repaymnt);
    }     
        
   
} catch(Exception e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
}
 }// end of if coding
   
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBoxinstalcountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxinstalcountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxinstalcountActionPerformed

    private void jComboProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboProductActionPerformed
if(jComboProduct.getSelectedItem().toString().contains("IND")){
     jComboBoxinstalcount.removeAllItems();  
 jComboBoxinstalcount.setEnabled(true);
   jComboBoxinstalcount.addItem("1"); 
    jComboBoxinstalcount.addItem("2"); 
    jComboBoxinstalcount.addItem("3"); 
    jComboBoxinstalcount.addItem("All"); 
    jComboBoxinstalcount.getModel().setSelectedItem("All"); 
    jComboBoxinstalcount.setSize(15, 10);
}
else if (jComboProduct.getSelectedItem().toString().contains("REGLN")){
    jComboBoxinstalcount.setEnabled(true);
   jComboBoxinstalcount.removeAllItems();  
    jComboBoxinstalcount.addItem("Weekly"); 
    jComboBoxinstalcount.addItem("BI-Weekly"); 
    jComboBoxinstalcount.getModel().setSelectedItem("Weekly");
    jComboBoxinstalcount.setSize(45, 20);
}
    }//GEN-LAST:event_jComboProductActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Disburse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Disburse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Disburse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Disburse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Disburse().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonok;
    private javax.swing.JComboBox jComboBoxAmount;
    private javax.swing.JComboBox jComboBoxinstalcount;
    private javax.swing.JComboBox jComboProduct;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelAccount;
    private javax.swing.JLabel jLabelP;
    private javax.swing.JLabel jLabelPix;
    private javax.swing.JTextArea jLabelname;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaSched;
    private javax.swing.JTextField jTextFieldAmount;
    public javax.swing.JTextField jTextFieldClientID;
    // End of variables declaration//GEN-END:variables
String name,group;
String userid;
String ses_date,companyname,compshortname;
boolean Biweekly=false;
}
