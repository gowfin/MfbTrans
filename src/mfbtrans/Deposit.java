/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author Emmanuel
 */
public class Deposit extends javax.swing.JFrame {

    /**
     * Creates new form Payment
     */
    public Deposit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonPost = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldDescription = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldAmount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPayID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldReference = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldBalance = new javax.swing.JTextField();
        jComboBoxBank = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCount = new javax.swing.JTextField();
        jButtonupgrade = new javax.swing.JButton();
        jLabelR = new javax.swing.JLabel();
        jCheckBoxIgnore = new javax.swing.JCheckBox();
        jComboBoxPayType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldChequeno = new javax.swing.JTextField();
        jLabelChequeNo = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Deposit Details");
        setAlwaysOnTop(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButtonPost.setMnemonic('P');
        jButtonPost.setText("Post");
        jButtonPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPostActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jTextFieldDescription.setEditable(false);
        jTextFieldDescription.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jTextFieldDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDescriptionFocusLost(evt);
            }
        });

        jLabel1.setText("Actual Balance");

        jLabel2.setText("Bank");

        jTextFieldAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAmountKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAmountKeyTyped(evt);
            }
        });

        jLabel3.setText("Description");

        jTextFieldPayID.setEditable(false);

        jLabel4.setText("Payment Reference");

        jTextFieldReference.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NGN" }));

        jLabel6.setText("AccountID");

        jTextFieldBalance.setEditable(false);

        jComboBoxBank.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jComboBoxBank.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Zenith Bank", "First Bank", "FCMB", "Diamond", "Standard Chartered Bank", "ECOBank", "Sterling", "Skye", "Fidelity Bank", "Wema", "UBA", "Interconnectal", "Unity" }));

        jLabel7.setText("Deposit Amount");

        jLabel8.setText("Count");

        jTextFieldCount.setText("1");
        jTextFieldCount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCountKeyReleased(evt);
            }
        });

        jButtonupgrade.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jButtonupgrade.setText("upgrade");
        jButtonupgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupgradeActionPerformed(evt);
            }
        });

        jLabelR.setForeground(new java.awt.Color(153, 0, 0));

        jCheckBoxIgnore.setText("Ignore Check");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDescription)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPayID, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel8))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabelR, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButtonupgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldCount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(46, 46, 46))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldReference, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 26, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBoxBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBoxIgnore)
                                .addGap(15, 15, 15)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPayID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonupgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxBank))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxIgnore)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jComboBoxPayType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Cheque" }));
        jComboBoxPayType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPayTypeActionPerformed(evt);
            }
        });

        jLabel5.setText("Payment Type");

        jTextFieldChequeno.setVisible(false);
        jTextFieldChequeno.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jLabelChequeNo.setVisible(false);
        jLabelChequeNo.setText("Cheque No:");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabelChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldChequeno, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxPayType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPost, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonPost, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxPayType, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldChequeno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPostActionPerformed

        String dd=jDateChooser1.getDate().toString();
        String m="";
        if(dd.contains("Jan")){m="01";}
        else if(dd.contains("Feb")){m="02";}
         else if(dd.contains("Mar")){m="03";}
         else if(dd.contains("Apr")){m="04";}
         else if(dd.contains("May")){m="05";}
         else if(dd.contains("Jun")){m="06";}
        else if(dd.contains("Jul")){m="07";}
        else if(dd.contains("Aug")){m="08";}
        else if(dd.contains("Sep")){m="09";}
        else if(dd.contains("Oct")){m="10";}
        else if(dd.contains("Nov")){m="11";}
        else if(dd.contains("Dec")){m="12";}
String SelectedDate= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);

String SavingGL="13101",IntExpGL="31300"; 
 Global glob = new Global();
Connection conn= glob.getConnect();
String Q2="Select smscount,Branchname from branchcode";
String StrQuery="select GLCode,intGL from Product where productid like'"+jTextFieldDescription.getText().toString().substring(0,3)+"%Sav%'";
int SMScount=0;
String Bankname="Gowfin";
try{
   Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet cur = stmt.executeQuery(Q2);
            cur.next();
            SMScount=cur.getInt("smscount");
            Bankname=cur.getString("Branchname");
             cur = stmt.executeQuery(StrQuery);
                 
        cur.next();
 SavingGL=cur.getString("GLCode")+"-"+BranchCode;
 IntExpGL=cur.getString("intGL")+"-"+BranchCode;;
// JOptionPane.showMessageDialog(rootPane, SavingGL+","+IntExpGL);
    
 cur.close();
}
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
}
       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss.SSS aa");
// Date cdate = new Date();
  //String strnow=sdf.format(cdate);
String strnow=SelectedDate;

  
       //Beginning of Daily Savings
     
       int DailyAmount=1, count=1, i=1;
       if(!jTextFieldPayID.getText().startsWith("2")){JOptionPane.showMessageDialog(rootPane, "Invalid Transaction");this.dispose();}
       else if(jTextFieldDescription.getText().equalsIgnoreCase("Daily Savings")){
     try {
         Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);

 ResultSet   current = stmt.executeQuery("select Lasttrans from deposit where accountid='"+jTextFieldPayID.getText()+"'");
        if(current.next()){
         DailyAmount=current.getInt("lasttrans");
                          }
        //JOptionPane.showMessageDialog(this, DailyAmount);
         if(degradeamount>1){DailyAmount=degradeamount; }
       current.close();
     } catch (SQLException ex) {
      JOptionPane.showMessageDialog(this, ex.getMessage());
     }
      count=Integer.parseInt(jTextFieldCount.getText());
String Depositamount=jTextFieldAmount.getText();
  if(Double.parseDouble(Depositamount)/count!=DailyAmount && !withdrFlag && !jCheckBoxIgnore.isSelected())
  {
  JOptionPane.showMessageDialog(this,  "Error: Deposit amount inconsistent with regular amount"+"\n"
          +"Kindly Update or degrade account");
  }
  else if(depositStopped && !withdrFlag){JOptionPane.showMessageDialog(this, "Deposit not allowed on deativated account"+"\n"+"Pls activate first");}
  ////////////////////////////////////////////
  
  else{
     int r=1;
   for (i=count;i>0;i--){
      
 PreparedStatement pstmt;
 String Smonth,Sday,ID,amount,bal,remark="Paid",tranid="002";
 String year=ses_date.substring(0,4);
        Smonth=ses_date.substring(5,7);
         Sday=ses_date.substring(8,10);
         ID=jTextFieldPayID.getText();
   amount=jTextFieldAmount.getText();
    
   if(jTextFieldDescription.getText().equalsIgnoreCase("Daily Savings") && count>1){amount=DailyAmount+"";}
   bal=jTextFieldBalance.getText();
  Double ovapaid=Double.parseDouble(amount)+Double.parseDouble(bal);
   //check for full or partial payment or over payment
   if(Double.parseDouble(amount)>Double.parseDouble(bal) && withdrFlag==true){
      JOptionPane.showMessageDialog(this,"Transaction cancelled" +"\n"+"This Account cannot be Over-Withdrawn by "+ovapaid);
   } 
   else{
       //if(Integer.parseInt(amount)==Integer.parseInt(bal)){
       // remark="Serviced";   
       //}else{remark="Partially Serviced"; }
//JOptionPane.showMessageDialog(rootPane, SavingGL);
String query1="update glbal set GlbCredit=GlbCredit+"+Double.parseDouble(amount)+" where CoaNbr='"+SavingGL+"' and GlbFinyear='C'"
        + " and glbPeriod='"+ses_date.substring(5,7)+"'";
String query2="update glbal set Glbdebit=Glbdebit+"+Double.parseDouble(amount)+" where CoaNbr='"+tellerControlGl+"' and GlbFinyear='C'"
  + " and glbPeriod='"+ses_date.substring(5,7)+"'";
  //convert amount to negative because you are lessing as below:
Double amnt=Double.parseDouble(amount);
if(withdrFlag==true){amnt=-amnt;tranid="005";}
String query3="update Deposit  set RunningBal=RunningBal+"+amnt+" where AccountID='"+ID+"'";
String query4=("insert into transactn (AccountID,tranid,Amount,DebitGL,CreditGL,Runningbal,ValueDate,DateEffective,CustNO,StmtRef,BranchID,ChequeNbr,CreatedBy,transactionNbr)"
        + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

  //String PayBal=jTablePayment.getModel().getValueAt(jTablePayment.getSelectedRow(),2).toString();
       
     
        try{
            
   //generating transaction number
    Timestamp timestamp = new Timestamp(System.currentTimeMillis());    
        Random rand = new Random(timestamp.getTime());
        int Rnum=rand.nextInt(999999);
String tranctno=strnow.substring(2, 4)+strnow.substring(5, 7)+strnow.substring(8)+Rnum+"CDP";
 conn.setAutoCommit(false);//for transaction posting
 
pstmt=conn.prepareStatement(query1);
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query2);
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query3);
pstmt.executeUpdate();
 
pstmt=conn.prepareStatement(query4);
pstmt.setString(1,ID);
pstmt.setString(2,tranid);
pstmt.setString(3,amnt+"");
pstmt.setString(4,tellerControlGl);
pstmt.setString(5,SavingGL);
Double curbal=Double.parseDouble(bal)+amnt;

pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
//pstmt.setString(8,strnow);
pstmt.setString(8,ses_date);
pstmt.setString(9,jTextFieldPayID.getToolTipText());
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,jTextFieldDescription.getToolTipText());
pstmt.setString(12,jComboBoxBank.getSelectedItem().toString());
pstmt.setString(13,userid);
pstmt.setString(14,tranctno);
pstmt.executeUpdate();
         conn.commit();//transaction saved
 JOptionPane.showMessageDialog(this,"Done "+r);
 r=r+1;
}
   
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
try{conn.rollback();}catch(SQLException sqx){//throw new Exception.("Roll back failed: "+sqx.getMessage();)
JOptionPane.showMessageDialog(this, e.getMessage());
}
}
   }

  
  //////////////////////////////////////
        }
   this.setVisible(false); 
  }
       } //end of Daily Savings
        else { //posting   other deposit
      
    for (i=count;i>0;i--){
      
 PreparedStatement pstmt;
 String Smonth,Sday,ID,amount,bal,remark="Paid",tranid="002";

  
       String year=ses_date.substring(0,4);
        Smonth=ses_date.substring(5,7);
         Sday=ses_date.substring(8,10);   ID=jTextFieldPayID.getText();
   amount=jTextFieldAmount.getText().toString();
   if(jTextFieldDescription.getText().equalsIgnoreCase("Daily Savings") && count>1){amount=DailyAmount+"";};
   bal=jTextFieldBalance.getText();
  Double ovapaid=Double.parseDouble(amount)+Double.parseDouble(bal);
   //check for full or partial payment or over payment
   if(Double.parseDouble(amount)>Double.parseDouble(bal) && withdrFlag==true){
      JOptionPane.showMessageDialog(this,"Transaction cancelled" +"\n"+"This Account cannot be Over-Withdrawn by "+ovapaid);
   } 
   else{
       
//JOptionPane.showMessageDialog(rootPane,SavingGL);
String query1="update glbal set GlbCredit=GlbCredit+"+Double.parseDouble(amount)+" where CoaNbr='"+SavingGL+"' and GlbFinyear='C'"
        + " and glbPeriod='"+ses_date.substring(5,7)+"'";
String query2="update glbal set Glbdebit=Glbdebit+"+Double.parseDouble(amount)+" where CoaNbr='"+tellerControlGl+"' and GlbFinyear='C'"
  + " and glbPeriod='"+ses_date.substring(5,7)+"'";
  //convert amount to negative because you are lessing as below:
Double amnt=Double.parseDouble(amount);
if(withdrFlag==true){amnt=-amnt;tranid="005";}
String query3="update Deposit  set RunningBal=RunningBal+"+amnt+" where AccountID='"+ID+"'";
String query4=("insert into transactn (AccountID,tranid,Amount,DebitGL,CreditGL,Runningbal,ValueDate,DateEffective,CustNO,StmtRef,BranchID,ChequeNbr,CreatedBy,transactionNbr)"
        + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

  //String PayBal=jTablePayment.getModel().getValueAt(jTablePayment.getSelectedRow(),2).toString();
       
     
        try{
 //generating transaction number
    Timestamp timestamp = new Timestamp(System.currentTimeMillis());    
        Random rand = new Random(timestamp.getTime());
        int Rnum=rand.nextInt(999999);
String tranctno=strnow.substring(2, 4)+strnow.substring(5, 7)+strnow.substring(8,10)+Rnum+"CDP";
  
 conn.setAutoCommit(false);//for transaction posting
 
pstmt=conn.prepareStatement(query1);
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query2);
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query3);
pstmt.executeUpdate();
 
pstmt=conn.prepareStatement(query4);
pstmt.setString(1,ID);
pstmt.setString(2,tranid);
pstmt.setString(3,amnt+"");
pstmt.setString(4,tellerControlGl);
pstmt.setString(5,SavingGL);
Double curbal=Double.parseDouble(bal)+amnt;
pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
//pstmt.setString(8,strnow);
pstmt.setString(9,jTextFieldPayID.getToolTipText());
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,jTextFieldDescription.getToolTipText());
pstmt.setString(12,jComboBoxBank.getSelectedItem().toString());
pstmt.setString(13,userid);
pstmt.setString(14,tranctno);
pstmt.executeUpdate();
         conn.commit();//transaction saved
         DepositFlag=true;
         //saving sms to smshist
          String[] pid=null;
         String glno;
   // conn.commit();//transaction saved
    if(jTextFieldDescription.getText().contains(" ")){
       pid=  jTextFieldDescription.getText().split("\\s+");
       glno=pid[0].substring(0,3);
       //JOptionPane.showMessageDialog(rootPane, glno);
    }else
    {
     glno=  jTextFieldDescription.getText().substring(0,3);    
    }
         sendSMS send = new sendSMS();
     send.getAcc( "Credit",jTextFieldPayID.getText(), glno,Double.parseDouble(amount), jTextFieldDescription.getText(), year+"-"+Smonth+"-"+Sday+" 00:00:00.000");//getAcc(String trxtype,String acc,String gl, double amount,String text,String sesdate)
   
 JOptionPane.showMessageDialog(this,"Done");
 //if(SMScount>=1){
 //Sms sms= new Sms();
 //String Msg=" "+TranType+" Alert \n AC name:"+jTextFieldDescription.getToolTipText()+"\n AC#: **"+jTextFieldPayID.getText().substring(4)+"\n Desc: "+Desc
 //        + "\n Date:"+strnow.substring(0, 19)+strnow.substring(24, 26)+"\n Amount: "+amnt+"\n Bal:NGN"+bal;
//sms.sendSms(Phone.substring(1), Bankname, Msg);

//SMScount=SMScount-1;
//String QQ="update branchcode set smscount='"+SMScount+"' , SMSused=SMSused+1";
//pstmt=conn.prepareStatement(QQ);
//pstmt.setString(1,userid);
//pstmt.executeUpdate();
//conn.commit();//sms count saved
 //JOptionPane.showMessageDialog(this,"0"+Phone.substring(4)+" "+Bankname+" "+Msg);
// }//end of sms function


}
   
catch(      HeadlessException | NumberFormatException | SQLException e){
    JOptionPane.showMessageDialog(this, e.getMessage());
try{conn.rollback();}catch(SQLException sqx){//throw new Exception.("Roll back failed: "+sqx.getMessage();)
JOptionPane.showMessageDialog(this, e.getMessage());
}
}
   }
   this.setVisible(false);//finally {conn.close();}   
        }
        }
  
       
    }//GEN-LAST:event_jButtonPostActionPerformed

    private void jComboBoxPayTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPayTypeActionPerformed
if (jComboBoxPayType.getSelectedItem().toString().equalsIgnoreCase("Cheque")) {
jTextFieldChequeno.setVisible(true); 
jLabelChequeNo.setVisible(true);
jTextFieldReference.setText(jTextFieldReference.getText().toString().replace("cash", "Cheque"));
}
else{
jTextFieldChequeno.setVisible(false); 
jLabelChequeNo.setVisible(false);
jTextFieldReference.setText(jTextFieldReference.getText().toString().replace("Cheque", "Cash"));
}// TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPayTypeActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//JOptionPane.showMessageDialog(this, ses_date);
try
{
         Date cdate = new SimpleDateFormat("yyyy-MM-dd").parse( ses_date);
        //Date cdate =new Date((Date).parse(ses_date)); 

           jDateChooser1.setDate(cdate); 
}
catch(ParseException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
    }//GEN-LAST:event_formWindowOpened

    private void jTextFieldAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAmountKeyTyped
if(jTextFieldAmount.getText().startsWith("-")){
    jLabelR.setText("Format error");
       jLabelR.setVisible(true);
       jButtonPost.setEnabled(false);
}else{
     jLabelR.setVisible(false);
     jButtonPost.setEnabled(true);
}
    }//GEN-LAST:event_jTextFieldAmountKeyTyped

    private void jTextFieldDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDescriptionFocusLost
if(jTextFieldDescription.getText().equalsIgnoreCase("Daily savings")){
    jTextFieldCount.setEnabled(true);
}
    }//GEN-LAST:event_jTextFieldDescriptionFocusLost

    private void jButtonupgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupgradeActionPerformed
Global glob = new Global();
Connection conn= glob.getConnect();
String amnt;
amnt=JOptionPane.showInputDialog("Upgrade/degrade daily amount to:");
 String ID=jTextFieldPayID.getText();
 String query1="Update deposit set lasttrans='"+amnt+"' where accountid='"+ID+"'";
        try{
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);

 ResultSet   current = stmt.executeQuery("select Lasttrans from deposit where accountid='"+jTextFieldPayID.getText()+"'");
        current.next();
     int    DailyAmount=current.getInt("lasttrans");
     if(DailyAmount>Integer.parseInt(amnt)){degradeamount=Integer.parseInt(amnt);}
     else{
   PreparedStatement pstmt;
 conn.setAutoCommit(false);//for transaction posting
 
pstmt=conn.prepareStatement(query1);
pstmt.executeUpdate();
conn.commit();
     } 
 } 
        catch(Exception e){JOptionPane.showMessageDialog(this, e.getMessage());}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonupgradeActionPerformed

    private void jTextFieldAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAmountKeyPressed
if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
    jButtonPost.doClick();
}           // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAmountKeyPressed

    private void jTextFieldCountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCountKeyReleased
if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
    jButtonPost.doClick();
}           // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCountKeyReleased

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
    jButtonPost.doClick();
}           // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new Deposit().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPost;
    private javax.swing.JButton jButtonupgrade;
    private javax.swing.JCheckBox jCheckBoxIgnore;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBoxBank;
    private javax.swing.JComboBox jComboBoxPayType;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelChequeNo;
    private javax.swing.JLabel jLabelR;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField jTextFieldAmount;
    public javax.swing.JTextField jTextFieldBalance;
    public javax.swing.JTextField jTextFieldChequeno;
    private javax.swing.JTextField jTextFieldCount;
    public javax.swing.JTextField jTextFieldDescription;
    public javax.swing.JTextField jTextFieldPayID;
    public javax.swing.JTextField jTextFieldReference;
    // End of variables declaration//GEN-END:variables

boolean withdrFlag=false;
boolean DepositFlag=false;
String userid,BranchCode;
boolean depositStopped;
int degradeamount=1;
String Phone,Desc,TranType;
String tellerControlGl;
String ses_date,companyname,compshortname;
}
