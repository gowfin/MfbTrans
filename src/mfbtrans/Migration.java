/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.awt.print.PrinterJob;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author LAPO MFB
 */
public class Migration extends javax.swing.JFrame {

    /**
     * Creates new form Schedule
     */
    public Migration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFielddate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextFieldClientID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonfind = new javax.swing.JButton();
        jLabelunion = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldint = new javax.swing.JTextField();
        jTextFieldprin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldRepay = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldfamount = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldamount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAnalysis = new javax.swing.JTable();
        jButtonupdate = new javax.swing.JButton();
        jButtonupdate1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mi9gration");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Client Detail"));

        jTextFieldname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldnameActionPerformed(evt);
            }
        });

        jLabel1.setText("Client's Name");

        jTextFielddate.setText("16-02-2016");

        jLabel3.setText("First Repaid Date");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/calandar.jpeg"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextFieldClientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldClientIDActionPerformed(evt);
            }
        });
        jTextFieldClientID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldClientIDKeyPressed(evt);
            }
        });

        jLabel4.setText("Customer ID");

        jButtonfind.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jButtonfind.setText("<(())>");
        jButtonfind.setIconTextGap(1);
        jButtonfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonfindActionPerformed(evt);
            }
        });

        jLabelunion.setText("Union Name");

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Repayment analysis"));

        jLabel7.setText("Interest Element");

        jLabel8.setText("Principal Element");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldprin, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldint, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldprin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)))
        );

        jButton5.setText("GET");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel6.setText("Regular AMount");

        jTextFieldfamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldfamountActionPerformed(evt);
            }
        });
        jTextFieldfamount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldfamountKeyReleased(evt);
            }
        });

        jLabel5.setText("First Amount");

        jLabel2.setText("Total Amount");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(jTextFieldRepay, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldfamount, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldamount, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldfamount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldRepay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonfind)
                        .addGap(78, 78, 78)
                        .addComponent(jLabelunion, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldname, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFielddate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButtonfind)
                    .addComponent(jLabelunion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFielddate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTableAnalysis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Count", "Date", "Weekly Payment", "Outstanding Balance", "Customer's Sign", "Comment", "Officer's Sign"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAnalysis.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableAnalysis.setAutoscrolls(false);
        jTableAnalysis.setColumnSelectionAllowed(true);
        jTableAnalysis.setGridColor(new java.awt.Color(255, 51, 51));
        jTableAnalysis.setShowHorizontalLines(isEnabled());
        jTableAnalysis.setShowVerticalLines(isEnabled());
        jScrollPane1.setViewportView(jTableAnalysis);

        jButtonupdate.setText("Update");
        jButtonupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupdateActionPerformed(evt);
            }
        });

        jButtonupdate1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonupdate1.setText("clear");
        jButtonupdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupdate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButtonupdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonupdate))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonupdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
String printData="Repayment Schedule for "+jTextFieldname.getText();
       
MessageFormat header = new MessageFormat(printData) ;
MessageFormat footer =new MessageFormat(printData);
//Graphics2D g=image.createGraphics();
PrinterJob job =PrinterJob.getPrinterJob();
job.setPrintable(new OutputPrinter(""));
job.setPrintable(new OutputPrinter(""));
boolean doPrint=job.printDialog();
if (doPrint)
{
 try
 {
   
 //job.print();
 jTableAnalysis.print(JTable.PrintMode.FIT_WIDTH,header,footer,true,null,false);
 }
 catch(Exception e){JOptionPane.showMessageDialog(this, e.getMessage());
     //print job did not complete
 }
}       // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

                
 

		
		
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldnameActionPerformed

    private void jTextFieldClientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldClientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldClientIDActionPerformed

    private void jButtonfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonfindActionPerformed
String query2="select lastname+' '+Middlename+' '+firstname as name,groupid from Clients where custno='"+jTextFieldClientID.getText()+"'";
Global glob = new Global();
        
        
        try{
    
 Connection    conn = glob.getConnect();
 Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet current = stmt.executeQuery(query2);
            int i=0;
            int Tunit=0;
         current.next();
               
     jTextFieldname.setText(current.getString("name"));
     Groupname=current.getString("groupid");
     jLabelunion.setText(Groupname+" Union");
               //current.next();
            current.close();
            conn.close();
}
catch(Exception e){JOptionPane.showMessageDialog(this, e.getMessage());}        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonfindActionPerformed

    private void jTextFieldfamountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldfamountKeyReleased
double interest=Double.parseDouble(jTextFieldfamount.getText())*480/2480;
jTextFieldRepay.setText(jTextFieldfamount.getText()); 
BigDecimal intrt= BigDecimal.valueOf(interest);
jTextFieldint.setText(intrt.setScale(2, RoundingMode.HALF_UP)+"");
intelement=intrt.setScale(2, RoundingMode.HALF_UP).doubleValue();
jTextFieldprin.setText(Double.parseDouble(jTextFieldfamount.getText())-Double.parseDouble(jTextFieldint.getText())+"");
prinelement=Double.parseDouble(jTextFieldprin.getText());// TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldfamountKeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Calendar now=Calendar.getInstance();
        String nextwk,forthnit;
        String dt=jTextFielddate.getText();

        int repayment=Integer.parseInt(jTextFieldRepay.getText());
        SimpleDateFormat sdf= new SimpleDateFormat("dd-MM-yyyy");
        try {
            now.setTime(sdf.parse(dt));
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        //check for user mistakenly picking a holiday as repay start day
        now.add(Calendar.DATE,7);//use now.add(Calendar.DATE,7);to store next week date in a variable
        nextwk=(sdf.format(now.getTime())).substring(0, 5);
        //now.add(Calendar.DATE,7);//use now.add(Calendar.DATE,7);to store two weeks ahead(forthnight) date in a variable
        //forthnit=(sdf.format(now.getTime())).substring(0, 5);
        now.add(Calendar.DATE,-7);//use -7 to reduce it back to the former date
        for(int t=0;t<numberOfLines;t++){
            if(dt.substring(0, 5).equalsIgnoreCase(holidays[t])){

                JOptionPane.showMessageDialog(this, dt+" is a public holiday"+"\n"+"It will be skipped to next week");
                now.add(Calendar.DATE,7);
                jTextFielddate.setText(sdf.format(now.getTime()));
                for(int tt=0;tt<numberOfLines;tt++){
                    if(nextwk.equalsIgnoreCase(holidays[tt])){
                        JOptionPane.showMessageDialog(this, sdf.format(now.getTime())+" is also a public holiday"+"\n"+"It will be skipped a week ahead");

                        now.add(Calendar.DATE,7);
                        jTextFielddate.setText(sdf.format(now.getTime()));
                        break;
                    }                                          }
                    break;}
            }
            try{

                //to eliminate empty rows

                DefaultTableModel tmp =new DefaultTableModel();

                jTableAnalysis.setModel(tmp);
                //adding columns
                jTableAnalysis.setAutoResizeMode(jTableAnalysis.AUTO_RESIZE_OFF);
                tmp.addColumn("Count");

                tmp.addColumn("Date");

                tmp.addColumn("Weekly Payment");
                tmp.addColumn("PrinRepay");
                 tmp.addColumn("Interest");
                tmp.addColumn("<HTML>Outstanding<BR> Balance</HTML>");
                tmp.addColumn("<HTML>Customer's<BR> Sign</HTML>");
                tmp.addColumn("Comment");
                tmp.addColumn("Officer's Sign");

                //setting column size
                jTableAnalysis.getColumnModel().getColumn(0).setPreferredWidth(50);
                jTableAnalysis.getColumnModel().getColumn(1).setPreferredWidth(100);
                jTableAnalysis.getColumnModel().getColumn(2).setPreferredWidth(100);
                jTableAnalysis.getColumnModel().getColumn(3).setPreferredWidth(100);
                jTableAnalysis.getColumnModel().getColumn(4).setPreferredWidth(100);
                jTableAnalysis.getColumnModel().getColumn(5).setPreferredWidth(100);
                jTableAnalysis.getColumnModel().getColumn(6).setPreferredWidth(140);
                
               
                int paid =Integer.parseInt(jTextFieldfamount.getText());
                //initialisaction
                int Totalbal=Integer.parseInt(jTextFieldamount.getText());
                int Actualbal=Totalbal-paid;
                int CurrentBal=0;
                int i=0;
                int interval=7;

                tmp.addRow(new String[i]);
                jTableAnalysis.getModel().setValueAt("",i,0);
                jTableAnalysis.getModel().setValueAt("",i,1);
                jTableAnalysis.getModel().setValueAt("",i,2);
                jTableAnalysis.getModel().setValueAt(Totalbal,i,5);
                jTableAnalysis.getModel().setValueAt("",i,4);
                jTableAnalysis.getModel().setValueAt("Disbursed",i,3);

                jTableAnalysis.getModel().setValueAt("",i,6);

                i=i+1;
                //set first instalment
                tmp.addRow(new String[i]);
                jTableAnalysis.getModel().setValueAt(i,i,0);
                jTableAnalysis.getModel().setValueAt(sdf.format(now.getTime()),i,1);
                jTableAnalysis.getModel().setValueAt(paid,i,2);
                jTableAnalysis.getModel().setValueAt(jTextFieldprin.getText(),i,3);
                jTableAnalysis.getModel().setValueAt(jTextFieldint.getText(),i,4);
                jTableAnalysis.getModel().setValueAt(Actualbal,i,5);
                jTableAnalysis.getModel().setValueAt("First Repayment",i,6);

             
                i=i+1;
                interval=0;
                String nextweek="",forthnight="";
                Actualbal=Actualbal-repayment;//to get correct balance for next instalment
                while(CurrentBal<=Actualbal){

                    now.add(Calendar.DATE,7);//use now.add(Calendar.DATE,7);to store next week date in a variable
                    nextweek=(sdf.format(now.getTime())).substring(0, 5);
                    now.add(Calendar.DATE,7);//use now.add(Calendar.DATE,7);to store two weeks ahead(forthnight) date in a variable
                    forthnight=(sdf.format(now.getTime())).substring(0, 5);
                    now.add(Calendar.DATE,-14);//use -14 to reduce it back to the former date
                    for(int d=0;d<numberOfLines;d++){
                        if(nextweek.equalsIgnoreCase(holidays[d])){ interval=14;
                            //JOptionPane.showMessageDialog(this, nextweek+" skipped for "+holidays[d]);
                            for(int dd=0;dd<numberOfLines;dd++){
                                if(forthnight.equalsIgnoreCase(holidays[dd])){
                                    // JOptionPane.showMessageDialog(this, forthnight+" skipped for "+holidays[dd]);
                                    interval=21;//nested if to handle double holiday like 25 Dec and 1 Jan
                                    break;
                                }                                          }
                                break;}
                            else{
                                // JOptionPane.showMessageDialog(this, nextweek+" holiday="+holidays[d]);
                                interval=7;
                            }
                        }
                        now.add(Calendar.DATE,interval);//to increase date by interval of 7 or 14.
                        tmp.addRow(new String[i+1]);
                        jTableAnalysis.getModel().setValueAt(i,i,0);//here i is 2
                        jTableAnalysis.getModel().setValueAt(sdf.format(now.getTime()),i,1);
                        jTableAnalysis.getModel().setValueAt(repayment,i,2);
                        jTableAnalysis.getModel().setValueAt(jTextFieldprin.getText(),i,3);
                        jTableAnalysis.getModel().setValueAt(jTextFieldint.getText(),i,4);
                        jTableAnalysis.getModel().setValueAt(Actualbal,i,5);
                        jTableAnalysis.getModel().setValueAt("Repayment",i,6);

                       

                        paid=paid+repayment;
                        i=i+1;//increase i

                        Actualbal=Actualbal-repayment;

                    }
                    if(Totalbal>paid){
                        now.add(Calendar.DATE,7);//use now.add(Calendar.DATE,7);to store next week date in a variable
                        nextweek=(sdf.format(now.getTime())).substring(0, 5);
                        now.add(Calendar.DATE,-7);//use -7 to reduce it back to the former date for last instalment
                        tmp.addRow(new String[i]);
                        for(int dd=0;dd<numberOfLines;dd++){
                            if(nextweek.equalsIgnoreCase(holidays[dd])){
                                // JOptionPane.showMessageDialog(this, forthnight+" skipped for "+holidays[dd]);
                                interval=7;//nested if to handle double holiday like 25 Dec and 1 Jan
                                break;
                            }
                        }
                        now.add(Calendar.DATE,interval);
                        jTableAnalysis.getModel().setValueAt(i+1,i,0);
                        jTableAnalysis.getModel().setValueAt(sdf.format(now.getTime()),i,1);
                        jTableAnalysis.getModel().setValueAt(Totalbal-paid,i,2);
                        double calculatedint=(Totalbal-paid)*intelement/repayment;
                        double calculatedPrin=(Totalbal-paid)-calculatedint;
                        jTableAnalysis.getModel().setValueAt(BigDecimal.valueOf(calculatedPrin).setScale(2, RoundingMode.HALF_UP),i,3);
                        jTableAnalysis.getModel().setValueAt(BigDecimal.valueOf(calculatedint).setScale(2, RoundingMode.HALF_UP),i,4);
                
                        jTableAnalysis.getModel().setValueAt(0,i,5);
                        
                        jTableAnalysis.getModel().setValueAt("Last Repayment",i,6);

                        

                    }

                }
                catch(Exception e){JOptionPane.showMessageDialog(this, e.getMessage());
                }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
String path="holidays.txt",aline;
numberOfLines=0;
Calendar now=Calendar.getInstance();
        now.getTime();
        int year=now.get(Calendar.YEAR);
       
        String Smonth,Sday;
        int Omonth=now.get(Calendar.MONTH);//opening as january=0 not 1
        int day=now.get(Calendar.DAY_OF_MONTH);
         int month=Omonth+1;//note month start with january=0 in java
        Smonth=month+"";
        Sday=day+"";
       if(month<10){Smonth="0"+month;}// let it appear as two digit e.g 02
        if(day<10){Sday="0"+day;}
       
        Smonth=month+"";
        Sday=day+"";
       if(month<10){Smonth="0"+month;}// let it appear as two digit e.g 02
        if(day<10){Sday="0"+day;} 
    
        
jTextFielddate.setText(Sday+"-"+Smonth+"-"+year);

        try{
            File file=new File(path);
        FileReader file_to_read=new FileReader(file);
        BufferedReader bf=new BufferedReader(file_to_read);
        
       
        while((aline=bf.readLine())!=null){
            
           
          holidays[numberOfLines]=aline;
          //JOptionPane.showMessageDialog(this,holidays);
            
          numberOfLines++; 
        }
        
         bf.close(); 
        }catch(Exception ex){
        JOptionPane.showMessageDialog(this,ex.getMessage());
       
        }    
                                    

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jTextFieldClientIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldClientIDKeyPressed
 if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
     jButtonfind.doClick();
 }// TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldClientIDKeyPressed

    private void jButtonupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupdateActionPerformed
Global glob = new Global();
Connection conn=glob.getConnect();
   
  String query="insert into loanschedule VALUES (?,?,?,?,?,?,?,?,?,?,?)";
  String query1=("insert into Loans VALUES (?,?,?,?,?,?,?,?)"); 
  String query2="Select max(count) as count from loans";

try{
    Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
         //get last client id   
  ResultSet current = stmt.executeQuery(query2);
            current.next();
             //IDD is the global variable for loan number
int id= current.getInt("count")+1;
IDD=glob.getIDFormat(id);
IDD="300"+IDD;//IDD is the public variable for loan number.Declared at the bottom
String dd=jTextFielddate.getText().substring(0, 2);
String mm=jTextFielddate.getText().substring(3, 5);
String yyyy=jTextFielddate.getText().substring(6, 10);
JOptionPane.showMessageDialog(this, jTableAnalysis.getRowCount()+"");
current.close();
conn.setAutoCommit(false);
 PreparedStatement   pstmt=conn.prepareStatement(query1);///disbursing the loan
   
    pstmt.setString(1,jTextFieldClientID.getText());
    pstmt.setString(2,jTextFieldname.getText());
    pstmt.setString(3,IDD);
    pstmt.setString(4,"REGLN");
    pstmt.setString(5,yyyy+"-"+mm+"-"+dd);
    pstmt.setString(6,"-"+Double.parseDouble(jTextFieldamount.getText())/1.24);
    pstmt.setString(7,"Active");
    pstmt.setString(8,Groupname);
    pstmt.executeUpdate(); 
    
/////creating schedule
    int i=1;
     PreparedStatement pstmt1;
    for(i=1;i<jTableAnalysis.getRowCount();i++){
     pstmt1=conn.prepareStatement(query);
      pstmt1.setString(1,IDD);
      dd=jTableAnalysis.getModel().getValueAt(i, 1).toString().substring(0, 2);
      mm=jTableAnalysis.getModel().getValueAt(i, 1).toString().substring(3, 5);
      yyyy=jTableAnalysis.getModel().getValueAt(i,1).toString().substring(6, 10);
    pstmt1.setString(2,yyyy+"-"+mm+"-"+dd);
    pstmt1.setString(3,jTableAnalysis.getModel().getValueAt(i,5).toString());
    pstmt1.setString(4,jTableAnalysis.getModel().getValueAt(i,2).toString());
    pstmt1.setString(5,jTableAnalysis.getModel().getValueAt(i,3).toString());
    pstmt1.setString(6,jTableAnalysis.getModel().getValueAt(i,4).toString());
    pstmt1.setString(7,"Not Serviced");
    pstmt1.setString(8,jTextFieldClientID.getText());
    pstmt1.setString(9,jTableAnalysis.getModel().getValueAt(i,0).toString());
    pstmt1.setString(10,"0.00");
    pstmt1.setString(11,"0.00");
    pstmt1.executeUpdate(); 
    }
    conn.commit();
    JOptionPane.showMessageDialog(this,"Loan Disbursed and schedule created,Boss");

///lock the value for editting
jTextFieldClientID.setEditable(true);
jTextFieldname.setEditable(false);
jTextFieldamount.setEditable(false);
jTextFieldprin.setEditable(false);
jTextFieldint.setEditable(false);
jTextFielddate.setEditable(false);
jTextFieldRepay.setEditable(false);


}catch(Exception e){
   JOptionPane.showMessageDialog(this, e.getMessage());
}

    }//GEN-LAST:event_jButtonupdateActionPerformed

    private void jTextFieldfamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldfamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldfamountActionPerformed

    private void jButtonupdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupdate1ActionPerformed
     jTextFielddate.setText("");
jTextFieldRepay.setText("");
jTextFieldprin.setText("");
jTextFieldint.setText("");
jTextFieldClientID.setText("");
jTextFieldname.setText("");
jTextFieldamount.setText("");
///lock the value for editting
jTextFieldClientID.setEditable(true);
jTextFieldname.setEditable(true);
jTextFieldamount.setEditable(true);
jTextFieldprin.setEditable(true);
jTextFieldint.setEditable(true);
jTextFielddate.setEditable(true);
jTextFieldRepay.setEditable(true);
for(int i=0;i<=jTableAnalysis.getRowCount();i++){
                jTableAnalysis.getModel().setValueAt("",i,0);
                jTableAnalysis.getModel().setValueAt("",i,1);
                jTableAnalysis.getModel().setValueAt("",i,2);
                jTableAnalysis.getModel().setValueAt("",i,3);
                jTableAnalysis.getModel().setValueAt("",i,4);
                jTableAnalysis.getModel().setValueAt("",i,5);
                jTableAnalysis.getModel().setValueAt("",i,6);
}
    }//GEN-LAST:event_jButtonupdate1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Migration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Migration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Migration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Migration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Migration().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonfind;
    private javax.swing.JButton jButtonupdate;
    private javax.swing.JButton jButtonupdate1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelunion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAnalysis;
    private javax.swing.JTextField jTextFieldClientID;
    private javax.swing.JTextField jTextFieldRepay;
    private javax.swing.JTextField jTextFieldamount;
    private javax.swing.JTextField jTextFielddate;
    private javax.swing.JTextField jTextFieldfamount;
    private javax.swing.JTextField jTextFieldint;
    private javax.swing.JTextField jTextFieldname;
    private javax.swing.JTextField jTextFieldprin;
    // End of variables declaration//GEN-END:variables
int numberOfLines;
double intelement,prinelement;
String Groupname,IDD;
String[] holidays=new String[100];
String ses_date,companyname,compshortname;
}
