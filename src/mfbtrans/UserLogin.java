/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;



/**
 *
 * @author Emmanuel
 */
public class UserLogin extends javax.swing.JFrame {
//private static final String DRIVER="org.apache.derby.jdbc.EmbeddedDriver";
    /**
     * Creates new form UserLogin
     */
    public UserLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldUser = new javax.swing.JTextField();
        jTextFieldPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonLogin = new javax.swing.JButton();
        jLabelcompname = new javax.swing.JLabel();
        jButtonautopay = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabelIP = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User's Authentication");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setAutoscrolls(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("UserName");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Password");

        jTextFieldUser.setText("Admin");

        jTextFieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPasswordActionPerformed(evt);
            }
        });
        jTextFieldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPasswordKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/micro1.jpeg"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/gowfin.png"))); // NOI18N

        jButtonLogin.setBackground(new java.awt.Color(255, 255, 255));
        jButtonLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/Login button.jpeg"))); // NOI18N
        jButtonLogin.setBorder(null);
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });

        jLabelcompname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelcompname.setForeground(new java.awt.Color(153, 0, 153));
        jLabelcompname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelcompname.setText("Gowfin Solutions");

        jButtonautopay.setText("post");
        jButtonautopay.setEnabled(false);
        jButtonautopay.setOpaque(false);
        jButtonautopay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonautopayActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("(C) GOWFIN SOFTWARES-07033314962 ");

        jLabelIP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelIP.setForeground(new java.awt.Color(0, 0, 204));
        jLabelIP.setText("(C) GOWFIN SOFTWARES-07033314962 ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jButtonLogin)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButtonautopay, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelcompname, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelIP, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabelcompname)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jButtonautopay)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(jButtonLogin)
                        .addGap(58, 58, 58)
                        .addComponent(jLabelIP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPasswordKeyPressed
 if (evt.getKeyCode()==KeyEvent.VK_ENTER ||evt.getKeyCode()==KeyEvent.VK_HOME){jButtonLogin.doClick();}        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPasswordKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
jTextFieldUser.selectAll();
Image icon=null;
        try {
            icon = ImageIO.read(getClass().getResource("/mfbtrans/micro1.jpeg"));
             Connection con = glob.getConnect();
              Statement select = con.createStatement();
            ResultSet result = select.executeQuery("SELECT *  FROM company");
           if( result.next()){
               companyname=result.getString("fullname");
               compshortname=result.getString("shortname");
               ses_date=result.getString("ses_date");
               
               jLabelcompname.setText(companyname);
           }
           result = select.executeQuery("SELECT branchcode  FROM branchcode");
            if( result.next()){
               BranchCode=result.getString("branchcode");
              
               
               
           }
           result.close();
           con.close();
                   
        } catch (IOException|SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        try { 
           InetAddress ip = InetAddress.getLocalHost();
            String hostname = ip.getHostName();
            jLabelIP.setText(ip.toString());
           
 
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(jLabelcompname, ex.getMessage());
        }
   this.setIconImage(icon);  
 // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
IP=jButtonLogin.getToolTipText();

      String test = "Connection Succeeded";

            boolean login=false;
        
       Global glob=new Global();

         String NoUsermsg = "No username Entered";
        String NoPasswdmsg = "No Password Entered";
        String UsrIncorMsg = "Incorrect User Name";
        String PasswdIncorMsg = "Incorrect Password or UserID";
        String logintime="";




        if (jTextFieldUser.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, NoUsermsg, "Enter Your User Name", WIDTH);
        } 
        else if (jTextFieldPassword.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, NoPasswdmsg, "Enter Your  Password", WIDTH);
                
        }
        
        else {



        try {
            
            Connection con = glob.getConnect();
            Statement select = con.createStatement();
            ResultSet result = select.executeQuery("SELECT UserID,Password,userRole,getdate() logtime FROM Usertable"
                    + " where userid='"+jTextFieldUser.getText()+"'");
            String  user=jTextFieldUser.getText();
            String passwd=jTextFieldPassword.getText();
            
            String usID,pwd;
          while (result.next()){
           usID=result.getString("Userid");
           //JOptionPane.showMessageDialog(this,user);
           pwd=result.getString("Password");
           userRole=result.getString("userRole");
          if (user.equalsIgnoreCase(usID)&& pwd.equalsIgnoreCase(passwd)){
              logintime=result.getString("logtime");
              // update user log tables
     PreparedStatement psmst= con.prepareStatement("insert into userlog(username,logedin)  values ('"+usID+"','"+logintime+"')");
  psmst.executeUpdate();
            glob.license();  
            //jButtonautopay.doClick(); //for auto repay of loan
          //if (passwd.equalsIgnoreCase(pwd)){
         
     Config CurConfig= new Config();
        
   
     CurConfig.jLabelOfficer.setText("Logged in as: "+result.getString("userRole"));
     CurConfig.userid=jTextFieldUser.getText();
     CurConfig.ses_date=ses_date;
     CurConfig.compshortname=compshortname;
     CurConfig.companyname=companyname;
     CurConfig.userRole=userRole;
     tellerControlGl="11102"+"-"+BranchCode;
     CurConfig.tellerControlGl= tellerControlGl;
     CurConfig.BranchCode=BranchCode;
     File tempFile = new File("logo.jpg");
     boolean exists = tempFile.exists();
   ;
     if(exists){
          
         try {
          Image  icon = ImageIO.read(new File("logo.jpg"));
          CurConfig.jLabelMFBLogo.setIcon(new ImageIcon(icon.getScaledInstance(120, 100, 100)));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
     
     }
     if(result.getString("userRole").contains("Teller")){
         
     String  Glquery="select CoaNbr from Glcoa where CoaName='"+result.getString("userRole")+"'";
     result = select.executeQuery(Glquery);
      result.next();
    CurConfig.tellerControlGl= result.getString("CoaNbr");
  
    //JOptionPane.showMessageDialog(rootPane, CurConfig.tellerControlGl);
     }
     // if(result.getString("UserRole").equalsIgnoreCase("Exam Cordinator")){CurConfig.jButtonUser.setVisible(false);
      //CurConfig.jComboBoxDbtask.setVisible(false);
      //CurConfig.jLabelDbtask.setVisible(false);
      //CurConfig.jButtonFin.setVisible(false);
      /*    }
      else if(result.getString("UserRole").equalsIgnoreCase("Exam Supervisor")){
          CurConfig.jButtonQuestion.setVisible(true);
          CurConfig.jButtonUser.setVisible(false);
          CurConfig.jButtonSchedule.setVisible(false);
          CurConfig.jButtonStudent.setVisible(false);
          CurConfig.jButtonFin.setVisible(false);
          CurConfig.jButtonUnits.setVisible(false);
          CurConfig.jComboBoxDbtask.setVisible(false);
          CurConfig.jLabelDbtask.setVisible(false);
          CurConfig.jButtonKeyGen.setVisible(true);
      }
      else if(result.getString("UserRole").equalsIgnoreCase("Secretary")){
          CurConfig.jButtonQuestion.setVisible(true);
          CurConfig.jButtonUser.setVisible(false);
          CurConfig.jButtonSchedule.setVisible(false);
          CurConfig.jButtonResult.setVisible(true);
          CurConfig.jButtonUnits.setVisible(false);
          CurConfig.jComboBoxDbtask.setVisible(false);
          CurConfig.jLabelDbtask.setVisible(false);
          CurConfig.jButtonKeyGen.setVisible(false);
      }
      else if(result.getString("UserRole").equalsIgnoreCase("Exam Typist")){
           CurConfig.jButtonQuestion.setVisible(true);
          CurConfig.jButtonUser.setVisible(false);
          CurConfig.jButtonSchedule.setVisible(false);
          CurConfig.jButtonResult.setVisible(false);
          CurConfig.jButtonUnits.setVisible(false);
          CurConfig.jComboBoxDbtask.setVisible(false);
          CurConfig.jLabelDbtask.setVisible(false);
          CurConfig.jButtonKeyGen.setVisible(false);
      }
      this.setVisible(false);
      CurConfig.jButtonExit.setToolTipText(jButtonLogin.getToolTipText());
if (IP==null){IP="localhost";}//to set null to server
 CurConfig.setVisible(true);
  
        login=true;
       */
  
         CurConfig.setVisible(true);
     this.setVisible(false);
           }
          else if (!user.equalsIgnoreCase(usID) ){
              
         JOptionPane.showMessageDialog(this,"User does not exist in the system.");
         break;
                 }else if (!pwd.equalsIgnoreCase(passwd) ){
              JOptionPane.showMessageDialog(this,"Sorry!!!"+"\n"+"You entered incorrect Password");
        
          } 
          }
           result.close();
            select.close();
            con.close();
         
        }
catch (  SQLException | HeadlessException e) {
  
        JOptionPane.showMessageDialog(this,e.getMessage(), "Authentication Failed",WIDTH);   
          
        
        
}          
        }
     
                                               
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLoginActionPerformed

    private void jTextFieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPasswordActionPerformed

    private void jButtonautopayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonautopayActionPerformed
Calendar now=Calendar.getInstance();
        now.getTime();
        int year=now.get(Calendar.YEAR);
        String Smonth,Sday;
        int Omonth=now.get(Calendar.MONTH);//opening as january=0 not 1
        int day=now.get(Calendar.DAY_OF_MONTH);
         int month=Omonth+1;//note month start with january=0 in java
        Smonth=month+"";
        Sday=day+"";
       if(month<10){Smonth="0"+month;}// let it appear as two digit e.g 02
        if(day<10){Sday="0"+day;}
JTextField text= new javax.swing.JTextField();
text.setText(year+"-"+Smonth+"-"+Sday+" 00:00:00.000");
  
        now.getTime();
 Global glob = new Global();
String query3="select * from schoolinfo";

  String query=



"ALTER VIEW [dbo].[Overdue] AS " +
"select ls.custno as id,ls.loanid as loanid,firstName+' '+middlename+' '+lastname as Clientnames,max(cs.GroupID) as groupid,disamnt,sum(prinrepay)-l.prin as overdue,outstandingbal as BOD from loanschedule ls " +
"inner join clients  cs on cs.custno=ls.custno inner join loans lo on lo.loanid=ls.loanid inner join (select loanid,sum(servicedprin) as prin from loanschedule  " +
"group by loanid) l  on l.loanid=ls.loanid inner join (select accountid,Amount as disamnt from transactn where Tranid='010') tx on tx.accountId=lo.loanid " +
"where ls.date<='"+text.getText()+"' and loanProduct like'%INDLN%'" +
" group by ls.loanid,l.prin,ls.custno,firstName+' '+middlename+' '+lastname,outstandingbal,disamnt";

//JOptionPane.showMessageDialog(this, query);
 String query2="select * from dbo.overdue ov inner join Productrate pr on ov.loanid=pr.loanid where ov.overdue>4";
        
        try{
    
 Connection    conn = glob.getConnect();
 PreparedStatement pstmt;
 pstmt=conn.prepareStatement(query);//
pstmt.executeUpdate();
 Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);

            ResultSet current = stmt.executeQuery(query2);
            //to eliminate empty rows
       
               
             
           String BOD[][]= new String[500][13];  
           String SBAL[][]= new String[500][10];  
             
                
            int i=0;
          
            while(current.next()){
       
             BOD[i][0]= current.getString("id");
             BOD[i][1]=current.getString("loanid");
             BOD[i][2]= current.getString("Clientnames");
             BOD[i][3]=current.getString("Groupid");
             BOD[i][4]=current.getInt("disamnt")+"";//set others to zero
             //BOD[i][5]=current.getBigDecimal("OverdueInt").setScale(2, RoundingMode.HALF_UP)+"";
             BOD[i][5]=current.getString("OverdueInt");
             double overdueint=Double.parseDouble(BOD[i][5]);//to solve decimal overflow
             BOD[i][5]=BigDecimal.valueOf(overdueint).setScale(2, RoundingMode.HALF_UP)+"";
             
             BOD[i][6]=current.getBigDecimal("BOD").negate().setScale(2, RoundingMode.HALF_UP)+"";
      
                i=i+1;
              
            }
            
            int ii=i;//to get the maximum no of loan in overdue
            
           
            
            for(int n=0;n<=ii;n++){
                String custno=BOD[n][0];
            String Overdueint=BOD[n][5];
               
                 BOD[n][7]= "0.00";
                 BOD[n][8]="0.00";
                 BOD[n][9]="0.00";
                 BOD[n][10]="0.00";
                 BOD[n][11]="0.00";
                 BOD[n][12]="0.00";
            
            String query6="select accountid,ProductID,Runningbal from Deposit where custno='"+custno +"' ";// do not set "and Runningbal>0"
            current = stmt.executeQuery(query6);
                
           while(current.next()){
               
             if(current.getString("ProductID").equalsIgnoreCase("Regular Savings")){
                 BOD[n][7]= current.getString("RunningBal");
                 
             BOD[n][10]=current.getString("accountid");//different acc no
             }
            
            else if(current.getString("ProductID").equalsIgnoreCase("Voluntary Savings")){
                BOD[n][8]= current.getString("RunningBal");
                
                BOD[n][11]=current.getString("accountid");}////different acc no
             
              else if(current.getString("ProductID").equalsIgnoreCase("Current")){
                  BOD[n][9]= current.getString("RunningBal");
                  
                  BOD[n][12]=current.getString("accountid");}//different acc no
              
            }  
           //JOptionPane.showMessageDialog(text, BOD[n][7]+"-"+BOD[n][8]);
          // JOptionPane.showMessageDialog(this,+n+"-"+custno+" "+BOD[n][10]+" "+BOD[n][5]+""+ BOD[n][7]+" "+BOD[n][8]+" "+BOD[n][9]);
        
            
            }
          
               for(int r=0;r<ii;r++){
                   //check for null values
                  
                   // JOptionPane.showMessageDialog(this,"OK1"+"-"+r+" "+BOD[r][5]+"/"+BOD[r][7]+"-"+BOD[r][10]);
                   if(Double.parseDouble(BOD[r][5])<=Double.parseDouble(BOD[r][7])){
                  glob.withdrawDeposit(Double.parseDouble(BOD[r][5]),BOD[r][7],BOD[r][10],BOD[r][2]); 
                   
                   //JOptionPane.showMessageDialog(this,BOD[r][5]+" "+BOD[r][7]+" "+BOD[r][1]);
                   glob.autorepay(Double.parseDouble(BOD[r][5]),BOD[r][6],BOD[r][1],BOD[r][2]);
                   }
                   else if(Double.parseDouble(BOD[r][5])<=Double.parseDouble(BOD[r][8])){
                   glob.withdrawDeposit(Double.parseDouble(BOD[r][5]),BOD[r][8],BOD[r][11],BOD[r][2]); 
                   glob.autorepay(Double.parseDouble(BOD[r][5]),BOD[r][6],BOD[r][1],BOD[r][2]);   
                //JOptionPane.showMessageDialog(this,BOD[r][5]+" "+BOD[r][8]+" "+BOD[r][1]);
                   }
                   else if(Double.parseDouble(BOD[r][5])<=Double.parseDouble(BOD[r][9])){
                    glob.withdrawDeposit(Double.parseDouble(BOD[r][5]),BOD[r][8],BOD[r][12],BOD[r][2]); 
                   glob.autorepay(Double.parseDouble(BOD[r][5]),BOD[r][6],BOD[r][1],BOD[r][2]);   
                   //JOptionPane.showMessageDialog(this,BOD[r][5]+" "+BOD[r][9]+" "+BOD[r][1]);
                   }
                   
               }
                          
     conn.close();
}
catch(Exception e){JOptionPane.showMessageDialog(this, e.getCause()+e.getMessage()+" "+e.fillInStackTrace());
}     
    }//GEN-LAST:event_jButtonautopayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserLogin().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLogin;
    public javax.swing.JButton jButtonautopay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelIP;
    private javax.swing.JLabel jLabelcompname;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jTextFieldPassword;
    private javax.swing.JTextField jTextFieldUser;
    // End of variables declaration//GEN-END:variables
String IP;
String userRole;
 String tellerControlGl="11102-002";
 String ses_date,companyname,compshortname; 
 String BranchCode;
 Global glob=new Global();
 
}
