/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
//import org.apache.commons.digester.Digester;


/**
 *
 * @author LAPO MFB
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxRpt = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jButtonReports = new javax.swing.JButton();
        jTextFieldgroupid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Report Control");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setForeground(new java.awt.Color(0, 204, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/imagesreport.png"))); // NOI18N

        jLabel2.setText("Select Report Type");

        jComboBoxRpt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Balance", "Loan Balance By LoanOfficer", "Loan Balance", "Members and Borrowers", "Full Loan Payment", "Savings Balance by LoanOfficer", "Savings Balance by Product", "New and Closed Clients Detail", "New and Closed Clients Summary", "DailyTransaction", "DailyTransaction-Summary", "Defaulters", "Disbursement-Summary", "Disbursement-Detail", "Cash Balance", "Client not assigned to union", "Client Without Accounts Details", "Receipt", "Repayment Tracker", "TrialBalance", "Income and Expenditure", "Bank Withdrawal", "FieldPrint", "FieldPrintnew", "FieldPrint2", "FieldPrintDaily", "Suspicious Disbursement", "FieldPrintSimple", "Bank Deposit", "Union By Loan Officer", "Income Report", "Expense Report", "Loan Classification Report", "Loan Aging Report" }));
        jComboBoxRpt.setAutoscrolls(true);
        jComboBoxRpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRptActionPerformed(evt);
            }
        });

        jLabel3.setText("Start Date");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setEnabled(false);

        jDateChooser2.setDateFormatString("yyyy-MM-dd");
        jDateChooser2.setEnabled(false);

        jLabel4.setText("End Date");

        jButtonReports.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonReports.setText("Display");
        jButtonReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReportsActionPerformed(evt);
            }
        });

        jTextFieldgroupid.setEnabled(false);
        jTextFieldgroupid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldgroupidActionPerformed(evt);
            }
        });

        jLabel5.setText("GroupID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldgroupid, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(143, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxRpt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jButtonReports, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxRpt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldgroupid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButtonReports, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
Global glob = new Global();
    private void jComboBoxRptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRptActionPerformed

        Date cdate= new Date();
        jDateChooser1.setDate(cdate);
        jDateChooser2.setDate(cdate);
        jDateChooser1.setEnabled(true);
            
        if(jComboBoxRpt.getSelectedItem().toString().contains("New and Closed Clients"))
        {
          jDateChooser2.setEnabled(true);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Defaulters"))
        {
           jTextFieldgroupid.setEnabled(false);
            jDateChooser2.setEnabled(false); 
        }
       else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Union by Loan Officer"))
        {
           jTextFieldgroupid.setEnabled(false);
            jDateChooser1.setEnabled(false); 
            jDateChooser2.setEnabled(false); 
        }
        else if(jComboBoxRpt.getSelectedItem().toString().startsWith("FieldPrint"))
        {
        jTextFieldgroupid.setEnabled(true);
            
            
        }
        else if(jComboBoxRpt.getSelectedItem().toString().startsWith("Repayment Tracker"))
        {
        jTextFieldgroupid.setEnabled(true);
            
            
        }        
        else if(jComboBoxRpt.getSelectedItem().toString().contains("DailyTransaction"))
        {
           jDateChooser2.setEnabled(true);   
           jTextFieldgroupid.setEnabled(false);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().contains("Full Loan Payment"))
        {
           jDateChooser2.setEnabled(true);   
           jTextFieldgroupid.setEnabled(false);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().contains("Disbursement"))
        {
           jDateChooser2.setEnabled(true);   
           jTextFieldgroupid.setEnabled(false);
        }
         else if(jComboBoxRpt.getSelectedItem().toString().contains("Aging Report"))
        {
           jDateChooser2.setEnabled(false);   
           jTextFieldgroupid.setEnabled(false);
        }
         else if(jComboBoxRpt.getSelectedItem().toString().contains("Loan Classification Report"))
        {
           jDateChooser2.setEnabled(false);   
           jTextFieldgroupid.setEnabled(false);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().contains("Income Report"))
        {
           jDateChooser2.setEnabled(true);   
           jTextFieldgroupid.setEnabled(false);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().contains("Expense Report"))
        {
           jDateChooser2.setEnabled(true);   
           jTextFieldgroupid.setEnabled(false);
        }
        else{
               jDateChooser2.setEnabled(false); 
        }
       

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxRptActionPerformed

    private void jButtonReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReportsActionPerformed
String dd=jDateChooser1.getDate().toString();
        String m="";
        if(dd.contains("Jan")){m="01";}
        else if(dd.contains("Feb")){m="02";}
         else if(dd.contains("Mar")){m="03";}
         else if(dd.contains("Apr")){m="04";}
         else if(dd.contains("May")){m="05";}
         else if(dd.contains("Jun")){m="06";}
        else if(dd.contains("Jul")){m="07";}
        else if(dd.contains("Aug")){m="08";}
        else if(dd.contains("Sep")){m="09";}
        else if(dd.contains("Oct")){m="10";}
        else if(dd.contains("Nov")){m="11";}
        else if(dd.contains("Dec")){m="12";}
String SelectedDate= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);
SelectedDate=SelectedDate+" 00:00:00.000";
//JOptionPane.showMessageDialog(rootPane, SelectedDate);
/////////////////getting end date 
 dd=jDateChooser2.getDate().toString();
         m="";
        if(dd.contains("Jan")){m="01";}
        else if(dd.contains("Feb")){m="02";}
         else if(dd.contains("Mar")){m="03";}
         else if(dd.contains("Apr")){m="04";}
         else if(dd.contains("May")){m="05";}
         else if(dd.contains("Jun")){m="06";}
        else if(dd.contains("Jul")){m="07";}
        else if(dd.contains("Aug")){m="08";}
        else if(dd.contains("Sep")){m="09";}
        else if(dd.contains("Oct")){m="10";}
        else if(dd.contains("Nov")){m="11";}
        else if(dd.contains("Dec")){m="12";}
String SelectedDate2= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);
SelectedDate2=SelectedDate2+" 00:00:00.000";
        if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("TrialBalance"))
        {
        
            try
            {
            jDateChooser2.setEnabled(false);
                      InputStream in = new FileInputStream(new File("C:\\Reports\\TrialBalance.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            //SelectedDate="2019-07-21";
                      String sql="select CoaNbr,CoaName,coalesce(openningDebit,0)-coalesce(openningCredit,0) Openning,isnull(Credit,0) Credit,isnull(Debit,0)Debit,CoaHeader from glcoa A " +
" left outer join" +
" (select DebitGL openDebit,SUM(amount) openningDebit from Transactn " +
" where (DebitGL is not null )and month(DateEffective)<month('"+SelectedDate+"') and YEAR(DateEffective)=YEAR('"+SelectedDate+"') group by debitGL )Ba " +
" on CoaNbr=openDebit left outer join " +
" (select Creditgl openCredit,SUM(amount) openningCredit from Transactn " +
" where ( CreditGL is not null )and month(DateEffective)<month('"+SelectedDate+"') and YEAR(DateEffective)=YEAR('"+SelectedDate+"') group by CreditGL )Bb " +
"  on CoaNbr=openCredit left outer join " +
" (select creditgl,SUM(amount) Credit from Transactn " +
" where CreditGL is not null and month(DateEffective)=month('"+SelectedDate+"')and YEAR(DateEffective)=YEAR('"+SelectedDate+"') group by CreditGL) C " +
" on  coanbr=C.CreditGL left outer join (select Debitgl,SUM(amount)Debit from Transactn " +
" where DebitGL is not null and month(DateEffective)=month('"+SelectedDate+"')and YEAR(DateEffective)=YEAR('"+SelectedDate+"') group by DebitGL) D  " +
"on  A.coanbr=D.DebitGL ";

// JOptionPane.showMessageDialog(rootPane, sql);
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
            }
            catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}

        }
        /////////////
        if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Income and Expenditure"))
        {
          
            try
            {
            jDateChooser2.setEnabled(false);
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Income and Expenses.jrxml"));
           String sql=" select CoaNbr,CoaName,CoaType,CoaHeader,coalesce(isnull(monthlyDebit,0)-isnull(monthlyCredit,0),0) Monthly,coalesce(isnull(YearlyDebit,0)-isnull(YearlyCredit,0),0) Yearly from glcoa A " +
" left outer join " +
" (select DebitGL openDebit,SUM(amount) monthlyDebit from Transactn  " +
" where (DebitGL is not null )and month(DateEffective)=month('"+SelectedDate+"') and YEAR(DateEffective)=YEAR('"+SelectedDate+"') group by debitGL ) Ba " +
" on CoaNbr=openDebit left outer join " +
" (select Creditgl openCredit,SUM(amount) monthlyCredit from Transactn  " +
" where ( DebitGL is not null )and month(DateEffective)=month('"+SelectedDate+"') and YEAR(DateEffective)=YEAR('"+SelectedDate+"') group by CreditGL ) Bb " +
"  on CoaNbr=openCredit left outer join   " +
" (select creditgl,SUM(amount) YearlyCredit from Transactn " +
" where CreditGL is not null and YEAR(DateEffective)=YEAR('"+SelectedDate+"') group by CreditGL) C " +
" on  coanbr=C.CreditGL left outer join (select Debitgl,SUM(amount)YearlyDebit from Transactn " +
" where DebitGL is not null and YEAR(DateEffective)=YEAR('"+SelectedDate+"') group by DebitGL ) D " +
" on  A.coanbr=D.DebitGL where CoaType='I' or  CoaType='E'";
             

// JOptionPane.showMessageDialog(rootPane, sql);
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
            }
            catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}

        }
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Cash Balance"))
        {
            CashBalance rpt= new CashBalance();
                rpt.companyname=companyname;
           rpt.compshortname=compshortname;
           rpt.ses_date=ses_date;
            rpt.setVisible(true);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("New and Closed Clients Detail"))
        {

           //NewClient rpt= new   NewClient();
           //rpt.setVisible(true);
             try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\New and Closed Clients Detail.jrxml"));
            

            
String sql="select Custno,lastname+' '+middlename+' '+firstname as 'Client Name',Gender,Phone,DateCreated, " +
"Status,groupname,PrimaryOfficerID from clients c inner join Groups g on g.GroupID=c.GroupID " +
"where  DateCreated BETWEEN  '"+SelectedDate+"' and '"+SelectedDate2+"' " +
"order by status,PrimaryOfficerID";
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }//income report
         else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Income Report"))
        {

           //NewClient rpt= new   NewClient();
           //rpt.setVisible(true);
             try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\Income Report.jrxml"));
            
String sql="SELECT " +
"     DateEffective,TranID,stmtref,Amount,COATYPE " +
" FROM " +
"      transactn T   INNER JOIN GLCOA G " +
" ON  G.COANBR=T.CREDITGL " +
" WHERE" +
"    TRANID='020' AND COATYPE ='I'  AND valuedate BETWEEN '"+SelectedDate+"' and '"+SelectedDate2+"'" +
" ORDER BY valuedate ";
            
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
          else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Expense Report"))
        {

           //NewClient rpt= new   NewClient();
           //rpt.setVisible(true);
             try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\Expense Report.jrxml"));
            

            
String sql="SELECT " +
"     DateEffective,TranID,stmtref,Amount,COATYPE " +
" FROM " +
"      transactn T   INNER JOIN GLCOA G " +
" ON  G.COANBR=T.DEBITGL " +
" WHERE" +
"    TRANID='020' AND COATYPE ='E'  AND valuedate BETWEEN '"+SelectedDate+"' and '"+SelectedDate2+"'" +
" ORDER BY valuedate ";
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
           else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Loan Aging Report"))
        {

           //NewClient rpt= new   NewClient();
           //rpt.setVisible(true);
             try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\Loan Aging Report.jrxml"));
            

            

                      String sql="select ls.CustNo,ls.LoanID,Max(RunningBal/interestpercent) as DisbPrin,outstandingbal,disburseddate,accountname,sum(RepayWithInt)-SUM(servicedInt+ServicedPrin)  " +
" as OVAPLusInt,sum(PrinRepay-ServicedPrin) as OVAprinOnly,SUM(ServicedPrin) PrinRepaid,loanproduct,g.Groupid,lastPayDate,DATEDIFF(day,lastPayDate,getdate()) daysDue,primaryofficerID CSO from Loanschedule ls inner join Loans l on l.LoanID=ls.LoanID inner join " +
"(select groupid,primaryofficerID from Groups)G on g.GroupID=l.groupid inner join (select LoanID,min(date) as lastPayDate from Loanschedule " +
" where Status ='not serviced' or Status ='Partial' group by custno,LoanID)  d  on d.LoanID=ls.LoanID " +
" where l.status= 'Active' and date<='"+SelectedDate+"'" +
" group by g.PrimaryOfficerID,ls.CustNo,ls.LoanID,outstandingbal,accountname,disburseddate,lastPayDate,g.Groupid,loanproduct " +
" having sum(PrinRepay-ServicedPrin)>1  and DATEDIFF(day,lastPayDate,getdate())>1";
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate","","","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
           else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Loan Classification Report"))
        {

           //NewClient rpt= new   NewClient();
           //rpt.setVisible(true);
             try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\Loan Aging Report2.jrxml"));
            

            

                      String sql="select ls.CustNo,ls.LoanID,Max(RunningBal/interestpercent) as DisbPrin,outstandingbal,disburseddate,accountname,sum(RepayWithInt)-SUM(servicedInt+ServicedPrin)  " +
" as OVAPLusInt,sum(PrinRepay-ServicedPrin) as OVAprinOnly,SUM(ServicedPrin) PrinRepaid,loanproduct,g.Groupid,lastPayDate,DATEDIFF(day,lastPayDate,getdate()) daysDue,primaryofficerID CSO from Loanschedule ls inner join Loans l on l.LoanID=ls.LoanID inner join " +
"(select groupid,primaryofficerID from Groups)G on g.GroupID=l.groupid inner join (select LoanID,min(date) as lastPayDate from Loanschedule " +
" where Status ='not serviced' or Status ='Partial' group by custno,LoanID)  d  on d.LoanID=ls.LoanID " +
" where l.status= 'Active' and date<='"+SelectedDate+"'" +
" group by g.PrimaryOfficerID,ls.CustNo,ls.LoanID,outstandingbal,accountname,disburseddate,lastPayDate,g.Groupid,loanproduct " +
" having sum(PrinRepay-ServicedPrin)>1  and DATEDIFF(day,lastPayDate,getdate())>1";
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate","","","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
        //1
      
      
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("New and Closed Clients Summary"))
        {

           //NewClient rpt= new   NewClient();
           //rpt.setVisible(true);
             try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\New and Closed Clients Summary.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
            String sql="select count(Custno) 'Client Count', " +
"Status,PrimaryOfficerID from clients c inner join Groups g on g.GroupID=c.GroupID"
                    + " where datecreated between '"+SelectedDate+"' and  '"+SelectedDate2+"' " +
"group by PrimaryOfficerID,status ";

 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
        
  else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Union by Loan Officer"))
   {
          try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\Union by Loan Officer.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
            String sql="select GroupID,GroupName,PrimaryOfficerID, MeetingDay,case meetingday\n" +
"    WHEN 'Monday' THEN '1' " +
"    WHEN 'Tuesday' THEN '2' " +
"    WHEN 'Wednesday' THEN '3' " +
"    WHEN 'Thursday' THEN '4' " +
"    WHEN 'Friday' THEN '5' " +
"    ELSE 'Weekend' " +
"END  as Uniondays from groups  order by Uniondays ";

 
        this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
   }
   
        
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Defaulters"))
        {
           try
                      {
                          jDateChooser2.setEnabled(false);
                      //InputStream in = new FileInputStream(new File(getClass().getResource("C:\\Reports\\Overdue report.jrxml").getFile()));
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Overdue report.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
                      String sql="select ls.CustNo,ls.LoanID,Max(RunningBal/interestpercent) as DisbPrin,outstandingbal,disburseddate,accountname,sum(RepayWithInt)-SUM(servicedInt+ServicedPrin)  " +
" as OVAPLusInt,sum(PrinRepay-ServicedPrin) as OVAprinOnly,SUM(ServicedPrin) PrinRepaid,loanproduct,g.Groupid,lastPayDate,DATEDIFF(day,lastPayDate,getdate()) daysDue,primaryofficerID CSO from Loanschedule ls inner join Loans l on l.LoanID=ls.LoanID inner join " +
" (select groupid,primaryofficerID from Groups)G on g.GroupID=l.groupid inner join (select LoanID,min(date) as lastPayDate from Loanschedule " +
" where Status ='not serviced' or Status ='Partial' group by custno,LoanID)  d  on d.LoanID=ls.LoanID " +
" where l.status= 'Active' and date<=$P{fromdate}" +
" group by g.PrimaryOfficerID,ls.CustNo,ls.LoanID,outstandingbal,accountname,disburseddate,lastPayDate,g.Groupid,loanproduct " +
" having sum(PrinRepay-ServicedPrin)>1  and DATEDIFF(day,lastPayDate,getdate())>1";
  //JOptionPane.showMessageDialog(rootPane, sql);
 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        
        }////////////
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Repayment Tracker"))
        {
           try
                      {
                          jDateChooser2.setEnabled(false);
                      //InputStream in = new FileInputStream(new File(getClass().getResource("C:\\Reports\\Overdue report.jrxml").getFile()));
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Repayment Tracker.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
                      String sql="select ls.CustNo,ls.LoanID,Max(RunningBal/interestpercent) as DisbPrin,outstandingbal,disburseddate,accountname,sum(RepayWithInt)-SUM(servicedInt+ServicedPrin)  " +
" as OVAPLusInt,sum(PrinRepay-ServicedPrin) as OVAprinOnly,SUM(ServicedPrin) PrinRepaid,loanproduct,Groupid,lastPayDate,DATEDIFF(day,lastPayDate,getdate()) daysDue from Loanschedule ls inner join Loans l on l.LoanID=ls.LoanID inner join " +
" (select LoanID,min(date) as lastPayDate from Loanschedule " +
" where Status ='not serviced' or Status ='Partial' group by custno,LoanID)  d  on d.LoanID=ls.LoanID " +
" where l.status= 'Active' and date<='"+SelectedDate+"'" +
" group by ls.CustNo,ls.LoanID,outstandingbal,accountname,disburseddate,lastPayDate,Groupid,loanproduct " +
" having sum(PrinRepay-ServicedPrin)>1";
                      sql="select ls.CustNo,ls.LoanID,Max(RunningBal/interestpercent) as DisbPrin,outstandingbal,disburseddate,accountname,sum(RepayWithInt)-SUM(servicedInt+ServicedPrin)  " +
" as OVAPLusInt,sum(PrinRepay-ServicedPrin) as OVAprinOnly,SUM(ServicedPrin) PrinRepaid,loanproduct,Groupid,lastPayDate,DATEDIFF(day,lastPayDate,getdate()) daysDue from Loanschedule ls inner join Loans l on l.LoanID=ls.LoanID inner join " +
" (select LoanID,min(date) as lastPayDate from Loanschedule " +
" where Status <>'serviced' and Status<>'cancel' and remark <>'C' and loanid in (select loanid from Loanschedule " +
" where DATE='"+SelectedDate+"')  group by custno,LoanID)  d  on d.LoanID=ls.LoanID \n" +
" where l.status= 'Active' and outstandingbal<0 and date<='"+SelectedDate+"' and ls.status<>'serviced' " +
" group by ls.CustNo,ls.LoanID,outstandingbal,accountname,disburseddate,lastPayDate,Groupid,loanproduct ";
  //JOptionPane.showMessageDialog(rootPane, sql);
 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        
        }
         else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Client not assigned to union"))
        {
           try
                      {
                          jDateChooser2.setEnabled(false);
                      //InputStream in = new FileInputStream(new File(getClass().getResource("C:\\Reports\\Overdue report.jrxml").getFile()));
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Client not assigned to union.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
                      String sql="select Custno,AccountID,AccountName,productID,DateCreated,RunningBal,LastTrans,Status from Deposit\n" +
"where GroupID='' and Status='Active'" +
"  union all" +
"select Custno,loanID as AccountID,AccountName,LoanProduct as productID,DisbursedDate,OutstandingBal as RunningBal,interestPercent,status from loans\n" +
"where GroupID='' and Status='Active'";

 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        
        }//////////////
          else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Client Without Accounts Details"))
        {
           try
                      {
                          jDateChooser2.setEnabled(false);
                      //InputStream in = new FileInputStream(new File(getClass().getResource("C:\\Reports\\Overdue report.jrxml").getFile()));
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Client Without Accounts Details.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
                      String sql="select c.Custno,lastname+' '+middlename+' '+firstname as 'Client Name',Gender,Phone,c.DateCreated,\n" +
"c.Status,groupname,PrimaryOfficerID,COUNT(d.CustNo) deposit,COUNT(l.CustNo) loans from clients c left outer join Groups g on g.GroupID=c.GroupID left outer  join \n" +
"Deposit d on d.CustNo=c.Custno left outer  join Loans l on l.CustNo=c.Custno\n" +
"group by  c.Custno,Gender,Phone,c.DateCreated,lastname,middlename,firstname,c.Status,groupname,PrimaryOfficerID\n" +
"having COUNT(d.CustNo)=0 and COUNT(l.CustNo)=0 \n" +
"order by status,PrimaryOfficerID";

 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        
        }
   
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Receipt"))
        {
            ReceiptPara rpt= new   ReceiptPara();
            rpt.setVisible(true);
        }  //getting field print
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("FieldPrint")){
             try
            {
              Connection conn=  glob.getConnect();
            String query="Select PrimaryOfficerID,MeetingDay from groups where groupid='"+jTextFieldgroupid.getText()+"'";
          String loanofficer="Anonymous";
           String MeetingDay="None";
            Statement select;
                try {
                  
                    select = conn.createStatement();
                     ResultSet result= select.executeQuery(query);
                     if(result.next()){
                         loanofficer=result.getString("PrimaryOfficerID");
                         MeetingDay=result.getString("MeetingDay");
                     }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }
           
          InputStream in = new FileInputStream(new File("C:\\Reports\\FieldPrintMFI.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            String sql="select * from fieldprintview "+
" where groupid='"+jTextFieldgroupid.getText()+"' order by custno";
            this.displayReport(in,sql,"Groupname",jTextFieldgroupid.getText().toUpperCase(),"LoanOfficer",loanofficer,"MeetingDay",MeetingDay);
             }
            catch(FileNotFoundException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
          ///getting Field Print FieldPrintnew
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("FieldPrintnew"))
        {
            
          //JRCViewReport.REPORT_NAME="FieldPrint.rpt";
        //JRCViewReport.launchApplication();
            jTextFieldgroupid.setEnabled(true);
            try
            {
              Connection conn=  glob.getConnect();
          //String GroupID= JOptionPane.showInputDialog( "Please, enter the UnionID or GroupID");
          String query="Select PrimaryOfficerID,MeetingDay from groups where groupid='"+jTextFieldgroupid.getText()+"'";
          String loanofficer="Anonymous";
            Statement select;
                try {
                    select = conn.createStatement();
                     ResultSet result= select.executeQuery(query);
                     if(result.next()){
                         loanofficer=result.getString("PrimaryOfficerID");
                     }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }
           
          InputStream in = new FileInputStream(new File("C:\\Reports\\FieldPrintnew.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            String sql="select * from fieldprintview "+
" where groupid='"+jTextFieldgroupid.getText()+"' order by custno";
            this.displayReport(in,sql,"Groupname",jTextFieldgroupid.getText(),"LoanOfficer",loanofficer,"","");
            

            
            }
            catch(FileNotFoundException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
          else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("FieldPrintSimple"))
        {
            
          //JRCViewReport.REPORT_NAME="FieldPrint.rpt";
        //JRCViewReport.launchApplication();
            jTextFieldgroupid.setEnabled(true);
            try
            {
              Connection conn=  glob.getConnect();
          //String GroupID= JOptionPane.showInputDialog( "Please, enter the UnionID or GroupID");
          String query="Select PrimaryOfficerID from groups where groupid='"+jTextFieldgroupid.getText()+"'";
          String loanofficer="Anonymous";
            Statement select;
                try {
                    select = conn.createStatement();
                     ResultSet result= select.executeQuery(query);
                     if(result.next()){
                         loanofficer=result.getString("PrimaryOfficerID");
                     }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }
           
          InputStream in = new FileInputStream(new File("C:\\Reports\\FieldPrintSimple.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            String sql="select * from fieldprintview "+
" where groupid='"+jTextFieldgroupid.getText()+"' order by custno";
            this.displayReport(in,sql,"Groupname",jTextFieldgroupid.getText().toUpperCase(),"LoanOfficer",loanofficer,"","");
            

            
            }
            catch(FileNotFoundException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }///////////////END SIMPLE field print

            else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("FieldPrint2"))
        {
            
          //JRCViewReport.REPORT_NAME="FieldPrint.rpt";
        //JRCViewReport.launchApplication();
            jTextFieldgroupid.setEnabled(true);
            try
            {
              Connection conn=  glob.getConnect();
          //String GroupID= JOptionPane.showInputDialog( "Please, enter the UnionID or GroupID");
          String query="Select PrimaryOfficerID from groups where groupid='"+jTextFieldgroupid.getText()+"'";
          String loanofficer="Anonymous";
            Statement select;
                try {
                    select = conn.createStatement();
                     ResultSet result= select.executeQuery(query);
                     if(result.next()){
                         loanofficer=result.getString("PrimaryOfficerID");
                     }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }
           
          InputStream in = new FileInputStream(new File("C:\\Reports\\FieldPrint.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            String sql="select * from fieldprintview "+
" where groupid='"+jTextFieldgroupid.getText()+"' order by custno";
            this.displayReport(in,sql,"Groupname",jTextFieldgroupid.getText().toUpperCase(),"LoanOfficer",loanofficer,"","");
            

            
            }
            catch(FileNotFoundException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }///////////////Daily field print
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("FieldPrintDaily"))
        {
            
          //JRCViewReport.REPORT_NAME="FieldPrint.rpt";
        //JRCViewReport.launchApplication();
            jTextFieldgroupid.setEnabled(true);
            try
            {
              Connection conn=  glob.getConnect();
          //String GroupID= JOptionPane.showInputDialog( "Please, enter the UnionID or GroupID");
          String query="Select PrimaryOfficerID from groups where groupid='"+jTextFieldgroupid.getText()+"'";
          String loanofficer="Anonymous";
            Statement select;
                try {
                    select = conn.createStatement();
                     ResultSet result= select.executeQuery(query);
                     if(result.next()){
                         loanofficer=result.getString("PrimaryOfficerID");
                     }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                }
           
          InputStream in = new FileInputStream(new File("C:\\Reports\\FieldPrintDaily.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            String sql="select * from fieldprintviewDaily "+
" where groupid='"+jTextFieldgroupid.getText()+"'";
            this.displayReport(in,sql,"Groupname",jTextFieldgroupid.getText().toUpperCase(),"LoanOfficer",loanofficer,"","");
            

            
            }
            catch(FileNotFoundException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
                 else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Disbursement-Summary"))
        {
           try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\Disbursement-Summary.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            String sql="SELECT TranID,GroupID,sum(Amount) Amount FROM" +
"      transactn INNER JOIN clients  on clients.custno=transactn.custno" +
" WHERE valuedate BETWEEN '"+SelectedDate+"' and '"+SelectedDate2+"' and (TranID='010' or TranID='R010')" +
" GROUP BY TranID,GroupID";
            
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }//////
                 else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Full Loan Payment"))
        {
           try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\Full Payment.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            String sql="select TranID,AccountID,BranchID,stmtref,custno,Createdby FROM transactn " +
" WHERE valuedate BETWEEN '"+SelectedDate+"' and '"+SelectedDate2+"' and TranID='101' and stmtref='Closed loans'" ;
            
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(FileNotFoundException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
                     else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Disbursement-Detail"))
        {
           try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\Disbursement-Detail.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            String sql="SELECT TranID,Clients.CustNo,lastname+' '+Middlename+' '+FirstName name,GroupID,sum(Amount) Amount FROM" +
"      transactn INNER JOIN clients  on clients.custno=transactn.custno" +
" WHERE valuedate BETWEEN '"+SelectedDate+"' and '"+SelectedDate2+"' and (TranID='010' or TranID='R010')" +
" GROUP BY TranID,Clients.CustNo,lastname+' '+Middlename+' '+FirstName,GroupID";
            
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("DailyTransaction"))
        {
           try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\DailyTransaction.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
            String sql="SELECT  * FROM transactn WHERE valuedate BETWEEN  '"+SelectedDate+"' and '"+SelectedDate2+"' ";

 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
         else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("DailyTransaction-Summary"))
        {
           try
 {InputStream in = new FileInputStream(new File("C:\\Reports\\DailyTransaction-Summary.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
         String sql=   "SELECT TranID,GroupID,sum(Amount) Amount FROM     transactn"  +
" INNER JOIN clients  on clients.custno=transactn.custno WHERE  " +

"     valuedate BETWEEN '"+SelectedDate+"' and '"+SelectedDate2+"'" +
" GROUP BY TranID,GroupID";
            
 
        this.displayReport(in,sql,"fromdate",SelectedDate,"todate",SelectedDate2,"","");
 }
 catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
      else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Balance"))
        {
           Balances rpt = new    Balances();
           rpt.companyname=companyname;
           rpt.compshortname=compshortname;
           rpt.ses_date=ses_date;
           rpt.setVisible(true);
           
        }
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Fieldprint"))
        {
           FieldPrint rpt = new    FieldPrint();
               rpt.companyname=companyname;
           rpt.compshortname=compshortname;
           rpt.ses_date=ses_date;
           rpt.setVisible(true);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Loan Balance by LoanOfficer")){
             jDateChooser2.setEnabled(false);
                       try
                      {
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Loan Balance by LoanOfficer.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
    String sql="select Custno,AccountName,abs(OutstandingBal) as PrinBal,abs(OutstandingBal*interestPercent) PrinPlusIntBal,loanproduct,groupname,PrimaryOfficerID from Loans l" +
" inner join groups  g on l.groupid=g.groupid " +
" where Status='Active' " +
" order by PrimaryOfficerID,groupname ";

 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
 
        }//
                else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Suspicious Disbursement")){
             jDateChooser2.setEnabled(false);
                       try
                      {
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Suspicious Disbursement.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
String sql="select distinct CustNo,loanID,AccountName,disbursedDate,OutstandingBal,instalment from loans" +
" where LoanID not in(" +
" SELECT AccountID FROM Transactn" +
" WHERE valueDate between '"+SelectedDate+"' and getdate())";

 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
 
        }
       
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Loan Balance")){
             jDateChooser2.setEnabled(false);
                       try
                      {
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Loan Balance.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
                      String sql="select Custno,AccountName,abs(OutstandingBal) as PrinBal,abs(OutstandingBal*interestPercent) PrinPlusIntBal,loanproduct,groupname,PrimaryOfficerID from Loans l " +
" inner join groups  g on l.groupid=g.groupid " +
" where Status='Active' " +
" order by PrimaryOfficerID,LoanProduct,groupname ";

 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
        }
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Savings Balance by LoanOfficer")){
             jDateChooser2.setEnabled(false);
                       try
                      {
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Savings Balance by LoanOfficer.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
             String sql="select Custno,AccountName,RunningBal,productID,groupname,PrimaryOfficerID from deposit l " +
" inner join groups  g on l.groupid=g.groupid " +
" where Status='Active' " +
" order by PrimaryOfficerID";
                       
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
 
        }
else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Savings Balance by Product")){
             jDateChooser2.setEnabled(false);
                       try
                      {
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Savings Balance by Product.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
                      String sql=" select Custno,AccountName,RunningBal,productID,groupname,PrimaryOfficerID from deposit l " +
" inner join groups  g on l.groupid=g.groupid " +
" where Status='Active' " +
" order by ProductID ";

 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
 
        }
        else if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Members and Borrowers")){
             jDateChooser2.setEnabled(false);
                       try
                      {
                      InputStream in = new FileInputStream(new File("C:\\Reports\\Members and Borrowers.jrxml"));
            //JasperDesign jd= JRXmlLoader.load(in);
            
                                 String sql= "select count(distinct Custno) 'Members',PrimaryOfficerID,'Savings' ProductID " +
" from Deposit d left outer join Groups g on g.GroupID=d.GroupID " +
"where status='Active'  " +
"group by PrimaryOfficerID " +
"union all " +
"select count(distinct Custno) 'Members',PrimaryOfficerID,'Loans' ProductID  " +
" from Loans l  left outer join Groups g on g.GroupID=l.GroupID " +
"where status='Active'   " +
"group by PrimaryOfficerID";

 
                     this.displayReport(in,sql,"fromdate",SelectedDate,"","","","");
                       }
                        catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
 
        }
    }//GEN-LAST:event_jButtonReportsActionPerformed

    private void jTextFieldgroupidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldgroupidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldgroupidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonReports;
    public javax.swing.JComboBox jComboBoxRpt;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldgroupid;
    // End of variables declaration//GEN-END:variables

String ses_date,companyname,compshortname;
public void displayReport(InputStream report,String sql,String paraname1,String paravalue1,String paraname2,String paravalue2,String paraname3,String paravalue3){
     try{
    JasperDesign jd= JRXmlLoader.load(report);
 
            JRDesignQuery newQuery= new JRDesignQuery();
           newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr= JasperCompileManager.compileReport(jd);
            HashMap para= new HashMap();
             para.put("Compname",companyname); 
             //JOptionPane.showMessageDialog(rootPane, companyname);
            if(!paravalue1.isEmpty()){
             para.put(paraname1,paravalue1);    
            }
            if(!paravalue2.isEmpty()){
           para.put(paraname2,paravalue2);   
            }
            if(!paravalue3.isEmpty()){
           para.put(paraname3,paravalue3);   
            }
            JasperPrint j=JasperFillManager.fillReport(jr, para, glob.getConnect());
            
          
            JasperViewer.viewReport(j,false);
     }
     catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
            
            
            
            
             
            
            

}
}
