/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.io.FileOutputStream;
import java.io.InputStream;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.poi.hssf.usermodel.HSSFDataFormat;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
//import org.apache.commons.digester.Digester;


/**
 *
 * @author LAPO MFB
 */
public class ReportsExtxlsx extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    public ReportsExtxlsx() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxRpt = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jButtonReports = new javax.swing.JButton();
        jTextFieldgroupid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Report Control");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setForeground(new java.awt.Color(0, 204, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mfbtrans/imagesreport.png"))); // NOI18N

        jLabel2.setText("Select Report Type");

        jComboBoxRpt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FieldPrint", "SAVERS", "Outside Meeting" }));
        jComboBoxRpt.setAutoscrolls(true);
        jComboBoxRpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRptActionPerformed(evt);
            }
        });

        jLabel3.setText("Start Date");

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setEnabled(false);

        jDateChooser2.setDateFormatString("yyyy-MM-dd");
        jDateChooser2.setEnabled(false);

        jLabel4.setText("End Date");

        jButtonReports.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonReports.setText("Display");
        jButtonReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReportsActionPerformed(evt);
            }
        });

        jTextFieldgroupid.setEnabled(false);
        jTextFieldgroupid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldgroupidActionPerformed(evt);
            }
        });

        jLabel5.setText("GroupID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldgroupid, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(143, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxRpt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jButtonReports, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxRpt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldgroupid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButtonReports, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
Global glob = new Global();
    private void jComboBoxRptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRptActionPerformed

        Date cdate= new Date();
        jDateChooser1.setDate(cdate);
        jDateChooser2.setDate(cdate);
        jDateChooser1.setEnabled(true);
            
        if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Outside Meeting"))
        {
          jDateChooser2.setEnabled(false);
         
        }
      
       
        else if(jComboBoxRpt.getSelectedItem().toString().startsWith("FieldPrint"))
        {
        jTextFieldgroupid.setEnabled(true);
            
            
        }
        else if(jComboBoxRpt.getSelectedItem().toString().startsWith("SAVER"))
        {
        jTextFieldgroupid.setEnabled(true);
            
            
        }        
        else if(jComboBoxRpt.getSelectedItem().toString().contains("DailyTransaction"))
        {
           jDateChooser2.setEnabled(true);   
           jTextFieldgroupid.setEnabled(false);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().contains("Full Loan Payment"))
        {
           jDateChooser2.setEnabled(true);   
           jTextFieldgroupid.setEnabled(false);
        }
        else if(jComboBoxRpt.getSelectedItem().toString().contains("Disbursement"))
        {
           jDateChooser2.setEnabled(true);   
           jTextFieldgroupid.setEnabled(false);
        }
        else{
               jDateChooser2.setEnabled(false); 
        }
       

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxRptActionPerformed

    private void jButtonReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReportsActionPerformed
String dd=jDateChooser1.getDate().toString();
        String m="";
        if(dd.contains("Jan")){m="01";}
        else if(dd.contains("Feb")){m="02";}
         else if(dd.contains("Mar")){m="03";}
         else if(dd.contains("Apr")){m="04";}
         else if(dd.contains("May")){m="05";}
         else if(dd.contains("Jun")){m="06";}
        else if(dd.contains("Jul")){m="07";}
        else if(dd.contains("Aug")){m="08";}
        else if(dd.contains("Sep")){m="09";}
        else if(dd.contains("Oct")){m="10";}
        else if(dd.contains("Nov")){m="11";}
        else if(dd.contains("Dec")){m="12";}
String SelectedDate= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);
if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("Outside Meeting")){
     jTextFieldgroupid.setText("OutsideMeeting@"+SelectedDate);
}
SelectedDate=SelectedDate+" 00:00:00.000";

//JOptionPane.showMessageDialog(rootPane, SelectedDate);
/////////////////getting end date 
 dd=jDateChooser2.getDate().toString();
         m="";
        if(dd.contains("Jan")){m="01";}
        else if(dd.contains("Feb")){m="02";}
         else if(dd.contains("Mar")){m="03";}
         else if(dd.contains("Apr")){m="04";}
         else if(dd.contains("May")){m="05";}
         else if(dd.contains("Jun")){m="06";}
        else if(dd.contains("Jul")){m="07";}
        else if(dd.contains("Aug")){m="08";}
        else if(dd.contains("Sep")){m="09";}
        else if(dd.contains("Oct")){m="10";}
        else if(dd.contains("Nov")){m="11";}
        else if(dd.contains("Dec")){m="12";}
String SelectedDate2= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);
SelectedDate2=SelectedDate2+" 00:00:00.000";
        if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("FieldPrint")||jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("SAVERS"))
        {
            
       
            jTextFieldgroupid.setEnabled(true);
           
              Connection conn=  glob.getConnect();
        
          String query=" SELECT    * " +
"    FROM      (" +
"                  select custno,accountname,isnull([Regular Savings],0) as Savings,regln6, Regln7, Regln8, Midtmln, Speln,isnull(loanid,'NA') loanid,isnull(disbursed,0) disbursed,isnull(repaid,0) repaid,isnull(instalment,0) instalment,isnull(overdue,0) overdue " +
" from Fieldprintview " +
" where groupID='"+jTextFieldgroupid.getText()+"'" +
"              )p " +
"    UNPIVOT  " +
"    (  " +
"        LoanBal FOR LoanProduct  in ([Regln7], [Regln6], [Regln8], [midtmln],[speln]) " +
"    ) unpvt ";
          
          if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("SAVERS")){
              JOptionPane.showMessageDialog(rootPane,query);
          query=query.replaceFirst("regln6", "isnull(regln6,0) regln6");
          
          }
          String loanofficer="Anonymous";
            Statement select;
                try {
                    select = conn.createStatement();
                     ResultSet result= select.executeQuery(query);
                       XSSFWorkbook workbook = new XSSFWorkbook();
                       XSSFSheet sheet = workbook.createSheet(jTextFieldgroupid.getText());
                       //freezing ID and Name columns
                 
                       sheet.createFreezePane(4,1 );  //freezes column 4 and row 1
                       // Protecting the whole sheet
                       sheet.protectSheet("password");
                       //setting column to auto resize width

                                 //formatting
                      CellStyle style = workbook.createCellStyle(); 
                       CellStyle separatorstyle = workbook.createCellStyle(); 
                       CellStyle unlockstyle = workbook.createCellStyle();
                        unlockstyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("#,##0.00"));
                       unlockstyle.setLocked(false);
                       separatorstyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("#,##0.00"));
           
          
            style.setFillBackgroundColor(IndexedColors.DARK_YELLOW.getIndex());  
            style.setFillForegroundColor(IndexedColors.BRIGHT_GREEN.getIndex());  
            style.setFillPattern(FillPatternType.SOLID_FOREGROUND); 
            XSSFFont font = workbook.createFont();
            font.setFontName(HSSFFont.FONT_ARIAL);
            font.setFontHeightInPoints((short)16);
            font.setBold(true);
            style.setFont(font);
           
           
            
           
                       Row row = sheet.createRow(0);
                           //setting rows properties
                           row.setHeight(Short.parseShort("600"));
                          
                           
                             Cell cell0 = row.createCell(1);
                             Cell cell1 = row.createCell(2);
                             Cell cell2 = row.createCell(3);// customer name
                             Cell cell3 = row.createCell(4);//
                             Cell cell4 = row.createCell(5);
                             Cell cell5 = row.createCell(6);
                             Cell cell6 = row.createCell(7);
                             Cell cell7 = row.createCell(8);
                             Cell cell8 = row.createCell(9);
                             Cell cell9 = row.createCell(10);
                             Cell cell10 = row.createCell(11);
                             Cell cell11 = row.createCell(12);
                             Cell cell12 = row.createCell(13);
                             Cell cell13 = row.createCell(14);
                             //setting cell style
                             cell0.setCellStyle(style);
                            
                            cell1.setCellStyle(style);
                             cell2.setCellStyle(style); 
                             cell3.setCellStyle(style);
                             cell4.setCellStyle(style); 
                             cell5.setCellStyle(style);
                             cell6.setCellStyle(style);
                             cell7.setCellStyle(style);
                             cell8.setCellStyle(style);
                             cell9.setCellStyle(style);
                             cell10.setCellStyle(style);
                             cell11.setCellStyle(style);
                             cell12.setCellStyle(style);
                             cell13.setCellStyle(style);
                             // end of style
                             
                             cell0.setCellValue((String) "S/N");
                             cell1.setCellValue((String) "CUSTNO");
                              cell2.setCellValue((String) "CUSTOMER ACCOUNT NAME");
                    cell3.setCellValue((String) "SAVINGS BALANCE");
                    cell4.setCellValue((String) "DEPOSIT AMOUNT");
                    cell5.setCellValue((String) "LOANID");
                    cell6.setCellValue((String) "LOAN PRODUCT");
                    cell7.setCellValue((String) "LOAN BALANCE");
                    cell8.setCellValue((String) "DISBURSED AMOUNT");
                    cell9.setCellValue((String) "REPAID AMOUNT");
                    cell10.setCellValue((String) "INSTALMENT");
                    cell11.setCellValue((String) "OVERDUE");
                    cell12.setCellValue((String) "EXPECTED");
                    cell13.setCellValue((String) "REPAYMENT");
                     int i=0;
                     int I=2; // for formatting, styling and application of formulas
                       // I is the row numbering in excel such as 1,2,3----infinity   
                     while(result.next()){
                       
   
                         
                             
                              
                     
                           
                           row = sheet.createRow(++i);
                         
                             
                          sheet.autoSizeColumn(i);
                                               
                           cell0.setCellStyle(style);
                            //cell1.setCellStyle(style);
                            // cell2.setCellStyle(style); 
                            if(i>1){
                             cell3.setCellStyle(separatorstyle);
   
                             cell4.setCellStyle(unlockstyle); 
                             // cell5.setCellStyle( style);
                             cell7.setCellStyle(separatorstyle);
                             cell8.setCellStyle(separatorstyle);
                             cell9.setCellStyle(separatorstyle);
                             cell10.setCellStyle(separatorstyle);
                             cell12.setCellStyle(separatorstyle);
                             
                             cell13.setCellStyle(unlockstyle);
                                    }
                           //Creating  cells from database //serial no
                              cell0 = row.createCell(1);
                              cell1 = row.createCell(2); //for custno
                            
                              cell2 = row.createCell(3);// customer name
                              
                              cell3 = row.createCell(4);//
                              cell4 = row.createCell(5);
                              cell5 = row.createCell(6);
                              cell6 = row.createCell(7);
                              cell7 = row.createCell(8);
                              cell8 = row.createCell(9);
                              cell9 = row.createCell(10);
                              cell10 = row.createCell(11);
                              cell11 = row.createCell(12);
                              cell12 = row.createCell(13); 
                              cell13 = row.createCell(14);
                              //JOptionPane.showMessageDialog(rootPane, i+" "+result.getBigDecimal("repaid")+", and "+result.getBigDecimal("instalment")); 
                            //if (field instanceof String) {
                            cell0.setCellValue( i+"");
                    cell1.setCellValue((String) result.getString("Custno"));
                    cell2.setCellValue((String) result.getString("Accountname").toUpperCase().trim());
                    cell3.setCellValue((String) thseparate(result.getBigDecimal("Savings").setScale(2, RoundingMode.HALF_UP)));
                    cell4.setCellValue(Double.parseDouble("0.00") );
                    cell5.setCellValue((String) result.getString("loanid"));
                    cell6.setCellValue((String) result.getString("loanproduct").toUpperCase());
                    cell7.setCellValue((String) thseparate(result.getBigDecimal("loanbal").negate().setScale(2, RoundingMode.HALF_UP)));
                    cell8.setCellValue((String) thseparate(result.getBigDecimal("Disbursed").setScale(2, RoundingMode.HALF_UP)));
                    cell9.setCellValue((String) thseparate(result.getBigDecimal("repaid").setScale(2, RoundingMode.HALF_UP)));
                    cell10.setCellValue((String) thseparate(result.getBigDecimal("instalment").setScale(2, RoundingMode.HALF_UP)));
                   
                     if(result.getDouble("overdue")>0)
                    {
                    cell11.setCellValue((String) thseparate(result.getBigDecimal("overdue").setScale(2, RoundingMode.HALF_UP)));
                    }
                    else{
                       cell11.setCellValue("0.00");
                    }
                    
                    
                    if(Math.abs(result.getDouble("loanbal"))>Math.abs(result.getDouble("overdue")))
                    {
                    cell12.setCellFormula("SUM( L"+I+"+M"+I+")");
                    }
                    else{
                     //cell12.setCellFormula("I"+I);
                    cell12.setCellValue( Double.parseDouble(thseparate(result.getBigDecimal("loanbal").negate().setScale(2, RoundingMode.HALF_UP)).replace(",", "")));
                        
                    }
                
                      I=I+1;// increase to the next row
                    cell13.setCellValue(Double.parseDouble("0.00"));
                  

                //} else if (field instanceof Integer) {
                   // cell.setCellValue((Integer) field);
                //}
               
                     }
                     // fill some cells that did'nt format
             cell0.setCellStyle(style);
             cell4.setCellStyle(unlockstyle); 
             cell12.setCellStyle(unlockstyle); 
             //creating total rows
               row = sheet.createRow(++i);
              
               row.setHeight(Short.parseShort("500"));
                          
                           
                             cell0 = row.createCell(1);
                              cell1 = row.createCell(2);
                             cell2 = row.createCell(3);// customer name
                              cell3 = row.createCell(4);//
                              cell4 = row.createCell(5);
                              cell5 = row.createCell(6);
                              cell6 = row.createCell(7);
                             cell7 = row.createCell(8);
                             cell8 = row.createCell(9);
                             cell9 = row.createCell(10);
                              cell10 = row.createCell(11);
                              cell11 = row.createCell(12);
                              cell12 = row.createCell(13);
                              cell13 = row.createCell(14);
                             //setting cell style
                             cell0.setCellStyle(style);
                            
                            cell1.setCellStyle(style);
                             cell2.setCellStyle(style); 
                             cell3.setCellStyle(style);
                             cell4.setCellStyle(style); 
                             cell5.setCellStyle(style);
                             cell6.setCellStyle(style);
                             cell7.setCellStyle(style);
                             cell8.setCellStyle(style);
                             cell9.setCellStyle(style);
                             cell10.setCellStyle(style);
                             cell11.setCellStyle(style);
                             cell12.setCellStyle(separatorstyle);
                             cell13.setCellStyle(style);
                             // end of style
                             //entering cells formulas
                             cell3.setCellFormula("SUM( E2"+":E"+(i)+")"); // saving Bal
                            
                             cell4.setCellFormula("SUM( F2"+":F"+(i)+")");// deposit Amount
                             cell7.setCellFormula("SUM( I2"+":I"+(i)+")");  //loan Bal
                             cell8.setCellFormula("SUM( J2"+":J"+(i)+")"); //disbursed total
                             cell9.setCellFormula("SUM( K2"+":K"+(i)+")"); //repaid total
                             cell10.setCellFormula("SUM( L2"+":L"+(i)+")"); // instalment
                             cell11.setCellFormula("SUM( M2"+":M"+(i)+")");//overdue
                             cell12.setCellFormula("SUM( N2"+":N"+(i)+")");// expected
                             cell13.setCellFormula("SUM( O2"+":O"+(i)+")");// Repayment Amount
                            
            
              
           
                   
                     
                         FileOutputStream outputStream = new FileOutputStream(jTextFieldgroupid.getText()+".xlsx");
            workbook.write(outputStream);
                     
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                                             }
                
           
                  JOptionPane.showMessageDialog(this,"Extracted Successfully"); 

            
            
            }
         if(jComboBoxRpt.getSelectedItem().toString().equalsIgnoreCase("OUTSIDE MEETING")){
            try {
                    
                     
                       XSSFWorkbook workbook = new XSSFWorkbook();
                       XSSFSheet sheet = workbook.createSheet(jTextFieldgroupid.getText());
                       //freezing ID and Name columns
                 
                       sheet.createFreezePane(4,1 );  //freezes column 4 and row 1
                       // Protecting the whole sheet
                       sheet.protectSheet("password");
                       //setting column to auto resize width

                                 //formatting
                      CellStyle style = workbook.createCellStyle(); 
                       CellStyle separatorstyle = workbook.createCellStyle(); 
                       CellStyle unlockstyle = workbook.createCellStyle();
                        unlockstyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("#,##0.00"));
                       unlockstyle.setLocked(false);
                       separatorstyle.setDataFormat(HSSFDataFormat.getBuiltinFormat("#,##0.00"));
           
          
            style.setFillBackgroundColor(IndexedColors.DARK_YELLOW.getIndex());  
            style.setFillForegroundColor(IndexedColors.BRIGHT_GREEN.getIndex());  
            style.setFillPattern(FillPatternType.SOLID_FOREGROUND); 
            XSSFFont font = workbook.createFont();
            font.setFontName(HSSFFont.FONT_ARIAL);
            font.setFontHeightInPoints((short)16);
            font.setBold(true);
            style.setFont(font);
           
           
            
           
                       Row row = sheet.createRow(0);
                           //setting rows properties
                           row.setHeight(Short.parseShort("600"));
                          
                           
                             Cell cell0 = row.createCell(1);
                             Cell cell1 = row.createCell(2);
                             Cell cell2 = row.createCell(3);// customer name
                             Cell cell3 = row.createCell(4);//
                             Cell cell4 = row.createCell(5);
                             Cell cell5 = row.createCell(6);
                             Cell cell6 = row.createCell(7);
                             Cell cell7 = row.createCell(8);
                             Cell cell8 = row.createCell(9);
                             Cell cell9 = row.createCell(10);
                             Cell cell10 = row.createCell(11);
                             Cell cell11 = row.createCell(12);
                             Cell cell12 = row.createCell(13);
                             Cell cell13 = row.createCell(14);
                             //setting cell style
                             cell0.setCellStyle(style);
                            
                            cell1.setCellStyle(style);
                             cell2.setCellStyle(style); 
                             cell3.setCellStyle(style);
                             cell4.setCellStyle(style); 
                             cell5.setCellStyle(style);
                             cell6.setCellStyle(style);
                             cell7.setCellStyle(style);
                             cell8.setCellStyle(style);
                             cell9.setCellStyle(style);
                             cell10.setCellStyle(style);
                             cell11.setCellStyle(style);
                             cell12.setCellStyle(style);
                             cell13.setCellStyle(style);
                             // end of style
                             
                             cell0.setCellValue((String) "S/N");
                             cell1.setCellValue((String) "CUSTNO");
                              cell2.setCellValue((String) "CUSTOMER ACCOUNT NAME");
                    cell3.setCellValue((String) "SAVINGS BALANCE");
                    cell4.setCellValue((String) "DEPOSIT AMOUNT");
                    cell5.setCellValue((String) "LOANID");
                    cell6.setCellValue((String) "LOAN PRODUCT");
                    cell7.setCellValue((String) "LOAN BALANCE");
                    cell8.setCellValue((String) "DISBURSED AMOUNT");
                    cell9.setCellValue((String) "REPAID AMOUNT");
                    cell10.setCellValue((String) "INSTALMENT");
                    cell11.setCellValue((String) "OVERDUE");
                    cell12.setCellValue((String) "EXPECTED");
                    cell13.setCellValue((String) "REPAYMENT");
                     int i=0;
                     int I=2; // for formatting, styling and application of formulas
                       // I is the row numbering in excel such as 1,2,3----infinity   
                     while(i<=30){
                       
   
                         
                             
                              
                     
                           
                           row = sheet.createRow(++i);
                         
                             
                          sheet.autoSizeColumn(i);
                                               
                           cell0.setCellStyle(style);
                            if(i>1){
                            cell1.setCellStyle(unlockstyle);
                             cell2.setCellStyle(unlockstyle); 
                           
                             cell3.setCellStyle(separatorstyle);
   
                             cell4.setCellStyle(unlockstyle); 
                              //cell5.setCellStyle( style);
                             cell6.setCellStyle(unlockstyle);
                             cell8.setCellStyle(separatorstyle);
                             cell9.setCellStyle(separatorstyle);
                             cell10.setCellStyle(separatorstyle);
                             cell12.setCellStyle(separatorstyle);
                             
                             cell13.setCellStyle(unlockstyle);
                                    }
                           //Creating  cells from database //serial no
                              cell0 = row.createCell(1);
                              cell1 = row.createCell(2); //for custno
                            
                              cell2 = row.createCell(3);// customer name
                              
                              cell3 = row.createCell(4);//
                              cell4 = row.createCell(5);
                              cell5 = row.createCell(6);
                              cell6 = row.createCell(7);
                              cell7 = row.createCell(8);
                              cell8 = row.createCell(9);
                              cell9 = row.createCell(10);
                              cell10 = row.createCell(11);
                              cell11 = row.createCell(12);
                              cell12 = row.createCell(13); 
                              cell13 = row.createCell(14);
                              //JOptionPane.showMessageDialog(rootPane, i+" "+result.getBigDecimal("repaid")+", and "+result.getBigDecimal("instalment")); 
                            //if (field instanceof String) {
                            cell0.setCellValue( i+"");
                    cell1.setCellValue((String) "       ");
                    cell2.setCellValue((String) "                ");
                    cell3.setCellValue((String) " ");
                    cell4.setCellValue(Double.parseDouble("0.00") );
                    cell5.setCellValue((String) "   ");
                    cell6.setCellValue((String) "    ");
                    cell7.setCellValue((String) " ");
                    cell8.setCellValue((String) " ");
                    cell9.setCellValue((String) " ");
                    cell10.setCellValue((String) " ");
                   
                    
                       cell11.setCellValue("  ");
                   
                    
                    
                   // if(Math.abs(result.getDouble("loanbal"))>Math.abs(result.getDouble("overdue")))
                   // {
                   // cell12.setCellFormula("SUM( L"+I+"+M"+I+")");
                   // }
                   // else{
                     //cell12.setCellFormula("I"+I);
                    cell12.setCellValue( 0.00);
                        
                   // }
                
                      I=I+1;// increase to the next row
                    cell13.setCellValue(Double.parseDouble("0.00"));
                  

                //} else if (field instanceof Integer) {
                   // cell.setCellValue((Integer) field);
                //}
               
                     }
                     // fill some cells that did'nt format
             cell0.setCellStyle(style);
             cell4.setCellStyle(unlockstyle); 
             cell12.setCellStyle(unlockstyle); 
             //creating total rows
               row = sheet.createRow(++i);
              
               row.setHeight(Short.parseShort("500"));
                          
                           
                             cell0 = row.createCell(1);
                              cell1 = row.createCell(2);
                             cell2 = row.createCell(3);// customer name
                              cell3 = row.createCell(4);//
                              cell4 = row.createCell(5);
                              cell5 = row.createCell(6);
                              cell6 = row.createCell(7);
                             cell7 = row.createCell(8);
                             cell8 = row.createCell(9);
                             cell9 = row.createCell(10);
                              cell10 = row.createCell(11);
                              cell11 = row.createCell(12);
                              cell12 = row.createCell(13);
                              cell13 = row.createCell(14);
                             //setting cell style
                             cell0.setCellStyle(style);
                            
                            cell1.setCellStyle(style);
                             cell2.setCellStyle(style); 
                             cell3.setCellStyle(style);
                             cell4.setCellStyle(style); 
                             cell5.setCellStyle(style);
                             cell6.setCellStyle(style);
                             cell7.setCellStyle(style);
                             cell8.setCellStyle(style);
                             cell9.setCellStyle(style);
                             cell10.setCellStyle(style);
                             cell11.setCellStyle(style);
                             cell12.setCellStyle(separatorstyle);
                             cell13.setCellStyle(style);
                             // end of style
                             //entering cells formulas
                             cell3.setCellFormula("SUM( E2"+":E"+(i)+")"); // saving Bal
                            
                             cell4.setCellFormula("SUM( F2"+":F"+(i)+")");// deposit Amount
                             cell7.setCellFormula("SUM( I2"+":I"+(i)+")");  //loan Bal
                             cell8.setCellFormula("SUM( J2"+":J"+(i)+")"); //disbursed total
                             cell9.setCellFormula("SUM( K2"+":K"+(i)+")"); //repaid total
                             cell10.setCellFormula("SUM( L2"+":L"+(i)+")"); // instalment
                             cell11.setCellFormula("SUM( M2"+":M"+(i)+")");//overdue
                             cell12.setCellFormula("SUM( N2"+":N"+(i)+")");// expected
                             cell13.setCellFormula("SUM( O2"+":O"+(i)+")");// Repayment Amount
                            
            
              
           
                   
                     
                         FileOutputStream outputStream = new FileOutputStream("Outside Meeting"+".xlsx");
            workbook.write(outputStream);
                     
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this,ex.getMessage());
                                             }
                
           
                  JOptionPane.showMessageDialog(this,"Extracted Successfully"); 

  
         }
         
               
      
    }//GEN-LAST:event_jButtonReportsActionPerformed

    private void jTextFieldgroupidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldgroupidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldgroupidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportsExtxlsx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportsExtxlsx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportsExtxlsx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportsExtxlsx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportsExtxlsx().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonReports;
    public javax.swing.JComboBox jComboBoxRpt;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldgroupid;
    // End of variables declaration//GEN-END:variables

String ses_date,companyname,compshortname;
public void displayReport(InputStream report,String sql,String paraname1,String paravalue1,String paraname2,String paravalue2,String paraname3,String paravalue3){
     try{
    JasperDesign jd= JRXmlLoader.load(report);
 
            JRDesignQuery newQuery= new JRDesignQuery();
           newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr= JasperCompileManager.compileReport(jd);
            HashMap para= new HashMap();
             para.put("Compname",companyname); 
             //JOptionPane.showMessageDialog(rootPane, companyname);
            if(!paravalue1.isEmpty()){
             para.put(paraname1,paravalue1);    
            }
            if(!paravalue2.isEmpty()){
           para.put(paraname2,paravalue2);   
            }
            if(!paravalue3.isEmpty()){
           para.put(paraname3,paravalue3);   
            }
            JasperPrint j=JasperFillManager.fillReport(jr, para, glob.getConnect());
            
          
            JasperViewer.viewReport(j,false);
     }
     catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
}

 public String thseparate(BigDecimal amount){
 DecimalFormat formatter = (DecimalFormat) NumberFormat.getInstance(Locale.ENGLISH);
DecimalFormatSymbols symbols = formatter.getDecimalFormatSymbols();

symbols.setGroupingSeparator(',');
formatter.setDecimalFormatSymbols(symbols);
formatter.setMinimumFractionDigits(2);
return formatter.format((amount.setScale(2, RoundingMode.HALF_UP)));    

 }
}
