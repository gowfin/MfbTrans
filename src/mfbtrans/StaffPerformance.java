/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author Emmanuel Ikpe
 */
public class StaffPerformance extends javax.swing.JFrame implements Printable{
@Override
      public int print(Graphics g, PageFormat pf, int page) throws PrinterException { 
        if (page>0){
            return NO_SUCH_PAGE;
        }  
         Graphics2D g2d=(Graphics2D)g;
        int x=(int)pf.getImageableX();
        int y=(int)pf.getImageableY();
        g2d.scale(0.8, 1);
        g2d.translate(x, y);
     jPanelsp.paintAll(g);//does the actual printing
         return PAGE_EXISTS;
    } /**
     * Creates new form Cashposition
     */
    public StaffPerformance() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelsp = new javax.swing.JPanel();
        jLabelMFI = new javax.swing.JLabel();
        jLabeltitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablecp = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Staff Performance report");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelsp.setBackground(new java.awt.Color(255, 255, 255));

        jLabelMFI.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelMFI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMFI.setText("MFI NAME");

        jLabeltitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabeltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabeltitle.setText("MFI NAME");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTablecp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CSO Name", "Loan Balance", "Saving Balance", "Overdue(P+I)", "New Client", "Closed Client", "Total Member", "New Borrower", "Full Payment", "Total Borrower"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablecp.setShowHorizontalLines(isEnabled());
        jTablecp.setShowVerticalLines(isEnabled());
        jScrollPane1.setViewportView(jTablecp);
        if (jTablecp.getColumnModel().getColumnCount() > 0) {
            jTablecp.getColumnModel().getColumn(0).setPreferredWidth(200);
        }

        javax.swing.GroupLayout jPanelspLayout = new javax.swing.GroupLayout(jPanelsp);
        jPanelsp.setLayout(jPanelspLayout);
        jPanelspLayout.setHorizontalGroup(
            jPanelspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelspLayout.createSequentialGroup()
                .addGroup(jPanelspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabeltitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelspLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelMFI, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE))
                    .addGroup(jPanelspLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanelspLayout.setVerticalGroup(
            jPanelspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelspLayout.createSequentialGroup()
                .addComponent(jLabelMFI)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabeltitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Print");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      jLabelMFI.setText(companyname);
      jLabeltitle.setText("Loan/Saving Officers Performance As At "+ses_date.substring(0,10));
      
      String  qcsoperf="select one.primaryofficerid,sum(ISNULL(LoanBal,0)) Loanbal,Sum(ISNULL(DepositBal,0)) DepositBal,ISNULL(OVAPLusInt,0) OVAPLusInt,ISNULL(OVAprinOnly,0) OVAprinOnly,ISNULL(borrower,0) borrower, " +
" ISNULL(saver,0) saver,ISNULL(newclient,0) newclient,ISNULL(closedclient,0)closedclient,ISNULL(NBorrower,0) NBorrower,ISNULL(fullpay,0) fullpay from ( " +
" (select primaryofficerid,SUM(outstandingbal) LoanBal,DepositBal  from loans l inner join " +
" Groups g on l.groupid=g.groupid  inner join (select groupid,SUM(Runningbal) DepositBal from deposit " +
" Group by Groupid) D  " +
" on g.GroupID=D.GroupID  group by PrimaryOfficerID,DepositBal) one   " +
" left outer join " +

" (select PrimaryOfficerID,sum(RepayWithInt)-SUM(servicedInt+ServicedPrin)  " +
" as OVAPLusInt,sum(PrinRepay-ServicedPrin) as OVAprinOnly from Loanschedule ls inner join Loans l on l.LoanID=ls.LoanID inner join " +
" groups on l.groupid=groups.groupid inner join " +
" (select LoanID from Loanschedule " +
" where Status ='not serviced' or Status ='Partial' group by custno,LoanID)  d  on d.LoanID=ls.LoanID " +
" where l.status= 'Active' and date<='"+ses_date.substring(0,10)+"'" +
" group by PrimaryOfficerID  " +
" having sum(PrinRepay-ServicedPrin)>1 ) two on one.PrimaryOfficerID=two.PrimaryOfficerID  " +
" left outer join " +
" ( " +     //borrowers
" select COUNT(distinct custno)borrower,primaryofficerid from loans l " +
" right outer join Groups g on l.GroupID=g.GroupID " +
" where Status='Active' " +
" group by primaryofficerid " +
" ) three on two.PrimaryOfficerID=three.PrimaryOfficerID " +

" left outer join " +
" ( " +  //savers
" select COUNT(distinct custno) saver,primaryofficerid from deposit d " +
" right outer join Groups g on d.GroupID=g.GroupID " +
" where Status='Active' " +
" group by primaryofficerid " +
" ) four on three.PrimaryOfficerID=four.PrimaryOfficerID " +

" left outer join( " +   //new client
" select isnull(COUNT(distinct custno),0) newclient,primaryofficerid from clients d " +
" right outer join Groups g on d.GroupID=g.GroupID  " +
" where Status='Active' and month(DateCreated)=MONTH('"+ses_date+"') " +
" group by primaryofficerid " +

" ) five  on four.PrimaryOfficerID=five.PrimaryOfficerID " +
" left outer join( " + //close client
" select coalesce(COUNT(distinct custno),0) closedclient,primaryofficerid from clients d \n" +
" right outer join Groups g on d.GroupID=g.GroupID  " +
" where Status='Closed' and month(DateCreated)=MONTH('"+ses_date+"') " +
" group by primaryofficerid " +

" ) six  on five.PrimaryOfficerID=six.PrimaryOfficerID " +
" left outer join( " + //new borrower
" select SUM(borrower) NBorrower,primaryofficerid from ( "+
" select Case when  amount >1 then 1 else -1 end borrower,primaryofficerid from transactn d  "+
" left outer join loans c on d.AccountID=c.LoanID inner join Groups g on c.GroupID=g.GroupID "+
" where  tranid in ('010','R010') and valuedate='"+ses_date+"' "+
" group by primaryofficerid,Amount,AccountID) newboro "+
" group by primaryofficerid "+
" ) seven  on four.PrimaryOfficerID=seven.PrimaryOfficerID " +
          //
              " left outer join( " + //new borrower
" select COUNT(AccountID) fullpay,primaryofficerid from transactn d " +
" left outer join loans c on d.AccountID=c.loanid inner join Groups g on c.GroupID=g.GroupID " +
" where  tranid = '101' and valuedate='2019-09-19' and stmtref like'%loans' " +
" group by primaryofficerid,AccountID "+
" ) eight  on four.PrimaryOfficerID=eight.PrimaryOfficerID " +
              //
" ) " +                                         
" Group  by one.PrimaryOfficerID,OVAprinOnly, OVAPLusInt,borrower,saver,newclient,closedclient,NBorrower,fullpay "+
" order by one.PrimaryOfficerID ";
      /*String qOverdue="select PrimaryOfficerID,sum(RepayWithInt)-SUM(servicedInt+ServicedPrin)  " +
" as OVAPLusInt,sum(PrinRepay-ServicedPrin) as OVAprinOnly from Loanschedule ls inner join Loans l on l.LoanID=ls.LoanID right outer join " +
" groups on l.groupid=groups.groupid inner join " +
" (select LoanID from Loanschedule " +
" where Status ='not serviced' or Status ='Partial' group by custno,LoanID)  d  on d.LoanID=ls.LoanID " +
" where l.status= 'Active' and date<='"+ses_date.substring(0,10)+"'  " +
" group by PrimaryOfficerID  " +
" having sum(PrinRepay-ServicedPrin)>1 ";
      String qDepAndLoanBal="select primaryofficerid,SUM(outstandingbal) LoanBal,DepositBal  from loans l inner join " +
" Groups g on l.groupid=g.groupid  inner join (select groupid,SUM(Runningbal) DepositBal from deposit " +
" Group by Groupid) D " +
" on g.GroupID=D.GroupID " +
" group by PrimaryOfficerID,DepositBal";
   
        String qborrower="select COUNT(distinct custno)borrower,primaryofficerid from loans l " +
" right outer join Groups g on l.GroupID=g.GroupID " +
" where Status='Active' " +
" group by primaryofficerid";
      String qSaver="select COUNT(distinct custno) saver,primaryofficerid from deposit d " +
" right outer join Groups g on d.GroupID=g.GroupID " +
" where Status='Active' " +
" group by primaryofficerid";
      String qNewclient="select COUNT(distinct custno) newclient,primaryofficerid from clients d " +
" right outer join Groups g on d.GroupID=g.GroupID " +
" where Status='Active' and month(DateCreated)=MONTH('"+ses_date+"') " +
" group by primaryofficerid";
          String qClosedclient="select COUNT(distinct custno) closedclient,primaryofficerid from clients d " +
" right outer join Groups g on d.GroupID=g.GroupID " +
" where Status='Close' and month(DateCreated)=MONTH('"+ses_date+"') " +
" group by primaryofficerid";
     BigDecimal sum=BigDecimal.ZERO;   
      BigDecimal sum2=BigDecimal.ZERO;  */
      try{
          this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
          Statement stmt=conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY );
           int i=0;
           ResultSet rs;
          //Running for Saving and loan Balance
           /* rs =stmt.executeQuery(qDepAndLoanBal);
          
         while(rs.next()){
            
         jTablecp.getModel().setValueAt(rs.getString("primaryofficerid") , i, 0);
           jTablecp.getModel().setValueAt(rs.getBigDecimal("loanBal").setScale(2, RoundingMode.HALF_UP).negate() , i, 1);
           jTablecp.getModel().setValueAt(rs.getBigDecimal("depositBal").setScale(2, RoundingMode.HALF_UP), i, 2);
           i=i+1;
           sum=sum.add(rs.getBigDecimal("loanBal"));
           sum2=sum2.add(rs.getBigDecimal("depositBal"));
            jTablecp.getModel().setValueAt(sum.setScale(2, RoundingMode.HALF_UP).negate(), 19, 1);
            jTablecp.getModel().setValueAt(sum2.setScale(2, RoundingMode.HALF_UP), 19, 2);
            jTablecp.getModel().setValueAt("  Total  " , 19, 0);
         
         
         }
         
         ///Running for Overdue 
            rs =stmt.executeQuery(qOverdue);
            i=0; 
            sum=BigDecimal.ZERO; 
            sum2=BigDecimal.ZERO;
         while(rs.next()){
            
         jTablecp.getModel().setValueAt(rs.getBigDecimal("OVAPLusInt").setScale(2, RoundingMode.HALF_UP) , i, 3);
         //jTablecp.getModel().setValueAt(rs.getBigDecimal("OVAprinOnly").setScale(2, RoundingMode.HALF_UP) , i, 4);
            sum=sum.add(rs.getBigDecimal("OVAPLusInt"));
           i=i+1;
            jTablecp.getModel().setValueAt(sum.setScale(2, RoundingMode.HALF_UP), 19, 3);
         
         }
         //Running for Membership
         rs =stmt.executeQuery(qSaver);
            i=0; 
             sum=BigDecimal.ZERO; 
         while(rs.next()){
            
         jTablecp.getModel().setValueAt(rs.getString("saver") , i, 6);
         //jTablecp.getModel().setValueAt(rs.getBigDecimal("OVAprinOnly").setScale(2, RoundingMode.HALF_UP) , i, 4);
           
            sum=sum.add(rs.getBigDecimal("saver"));
           i=i+1;
            jTablecp.getModel().setValueAt(sum.setScale(0, RoundingMode.HALF_UP), 19, 6);
         
         }
       //Running for Borrowers
         rs =stmt.executeQuery(qborrower);
            i=0; 
            sum=BigDecimal.ZERO; 
         while(rs.next()){
            
         jTablecp.getModel().setValueAt(rs.getString("borrower") , i, 9);
         //jTablecp.getModel().setValueAt(rs.getBigDecimal("OVAprinOnly").setScale(2, RoundingMode.HALF_UP) , i, 4);
           sum=sum.add(rs.getBigDecimal("borrower"));
           i=i+1;
            jTablecp.getModel().setValueAt(sum.setScale(0, RoundingMode.HALF_UP), 19, 9);
         }
         //Running New Clients
          rs =stmt.executeQuery(qNewclient);
            i=0; 
            sum=BigDecimal.ZERO; 
         while(rs.next()){
            
         jTablecp.getModel().setValueAt(rs.getString("newclient") , i, 4);
         //jTablecp.getModel().setValueAt(rs.getBigDecimal("OVAprinOnly").setScale(2, RoundingMode.HALF_UP) , i, 4);
           
           sum=sum.add(rs.getBigDecimal("newclient"));
           i=i+1;
            jTablecp.getModel().setValueAt(sum.setScale(0, RoundingMode.HALF_UP), 19, 4);
         }
       //Running Closed Clients
          rs =stmt.executeQuery(qClosedclient);
            i=0; 
            sum=BigDecimal.ZERO;
         while(rs.next()){
            
         jTablecp.getModel().setValueAt(rs.getString("closedclient") , i, 5);
         //jTablecp.getModel().setValueAt(rs.getBigDecimal("OVAprinOnly").setScale(2, RoundingMode.HALF_UP) , i, 4);
           
            sum=sum.add(rs.getBigDecimal("closedclient"));
           i=i+1;
            jTablecp.getModel().setValueAt(sum.setScale(0, RoundingMode.HALF_UP), 19, 5);
         } */
           // Running for all
        
         rs =stmt.executeQuery( qcsoperf);
            i=0; 
         BigDecimal   sumLnbal=BigDecimal.ZERO;
         BigDecimal   sumsvbal=BigDecimal.ZERO;
         BigDecimal   sumovdPlint=BigDecimal.ZERO;
         BigDecimal   sumovdPrin=BigDecimal.ZERO;
         BigDecimal   sumborro=BigDecimal.ZERO;
         BigDecimal   sumNborro=BigDecimal.ZERO;
         BigDecimal   sumFpay=BigDecimal.ZERO;
         BigDecimal   sumsaver=BigDecimal.ZERO;
         BigDecimal   sumnclient=BigDecimal.ZERO;
         BigDecimal   sumcclient=BigDecimal.ZERO;
         while(rs.next()){
           jTablecp.getModel().setValueAt(rs.getString("primaryofficerid") , i, 0);
           jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("loanBal").setScale(2, RoundingMode.HALF_UP).negate()) , i, 1);
           jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("depositBal").setScale(2, RoundingMode.HALF_UP)), i, 2);
           jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("OVAPLusInt").setScale(2, RoundingMode.HALF_UP)) , i, 3);
           jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("newclient")).replaceFirst(".00", "") , i, 4);
         
       
           jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("closedclient")).replaceFirst(".00", "")  , i, 5);
           jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("saver")).replaceFirst(".00", "")  , i, 6);
           jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("NBorrower")).replaceFirst(".00", "")  , i, 7);
           jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("fullpay")).replaceFirst(".00", "")  , i, 8);
           
            jTablecp.getModel().setValueAt(thseparate(rs.getBigDecimal("borrower")).replaceFirst(".00", "")  , i, 9);
         //jTablecp.getModel().setValueAt(rs.getBigDecimal("OVAprinOnly").setScale(2, RoundingMode.HALF_UP) , i, 4);
    
            sumLnbal=sumLnbal.add(rs.getBigDecimal("loanbal"));
            sumsvbal=sumsvbal.add(rs.getBigDecimal("depositbal"));
            sumovdPlint=sumovdPlint.add(rs.getBigDecimal("OVAPLusInt"));
            sumovdPrin=sumovdPrin.add(rs.getBigDecimal("OVAprinOnly"));
            sumborro=sumborro.add(rs.getBigDecimal("borrower"));
            sumNborro=sumNborro.add(rs.getBigDecimal("NBorrower"));
            sumFpay=sumFpay.add(rs.getBigDecimal("fullpay"));
            sumsaver=sumsaver.add(rs.getBigDecimal("saver"));
            sumnclient=sumnclient.add(rs.getBigDecimal("newclient"));
           sumcclient=sumcclient.add(rs.getBigDecimal("closedclient"));
            
           i=i+1;
           jTablecp.getModel().setValueAt(" Total ", 19, 0);
            jTablecp.getModel().setValueAt(thseparate(sumLnbal.setScale(0, RoundingMode.HALF_UP).negate()), 19, 1);
            jTablecp.getModel().setValueAt(thseparate(sumsvbal.setScale(0, RoundingMode.HALF_UP)), 19, 2);
            jTablecp.getModel().setValueAt(thseparate(sumovdPlint.setScale(0, RoundingMode.HALF_UP)), 19, 3);
            jTablecp.getModel().setValueAt(thseparate(sumnclient.setScale(0, RoundingMode.HALF_UP)).replaceFirst(".00", "") , 19, 4);
            jTablecp.getModel().setValueAt(thseparate(sumcclient.setScale(0, RoundingMode.HALF_UP)).replaceFirst(".00", "") , 19, 5);
            jTablecp.getModel().setValueAt(thseparate(sumsaver.setScale(0, RoundingMode.HALF_UP)).replaceFirst(".00", "") , 19, 6);
            jTablecp.getModel().setValueAt(thseparate(sumNborro.setScale(0, RoundingMode.HALF_UP)).replaceFirst(".00", "") , 19, 7);
            jTablecp.getModel().setValueAt(thseparate(sumFpay.setScale(0, RoundingMode.HALF_UP)).replaceFirst(".00", "") , 19, 8);
            jTablecp.getModel().setValueAt(thseparate(sumborro.setScale(0, RoundingMode.HALF_UP)).replaceFirst(".00", "") , 19, 9);
         }//end of while
        
      }catch(Exception e){JOptionPane.showMessageDialog(this, e.getMessage());}
      this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
      
      
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PrinterJob job = PrinterJob.getPrinterJob();
        PageFormat format=job.defaultPage();
        format.setOrientation(PageFormat.LANDSCAPE);
       //setting margin using paper
         Paper paper = new Paper();
         double margin = 1;
    paper.setImageableArea(margin, margin, paper.getWidth() - margin * 2, paper.getHeight()
        - margin * 2);
    format.setPaper(paper);
        job.setPrintable(this,format);
        boolean ok =job.printDialog();

        if(ok){
            try {

                job.print();// TODO add your handling code here:
            } catch (PrinterException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }// TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffPerformance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffPerformance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffPerformance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffPerformance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffPerformance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabelMFI;
    private javax.swing.JLabel jLabeltitle;
    private javax.swing.JPanel jPanelsp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablecp;
    // End of variables declaration//GEN-END:variables
Connection conn;
String companyname;
String compshortname;
String ses_date;
public String thseparate(BigDecimal amount){
 DecimalFormat formatter = (DecimalFormat) NumberFormat.getInstance(Locale.ENGLISH);
DecimalFormatSymbols symbols = formatter.getDecimalFormatSymbols();

symbols.setGroupingSeparator(',');
formatter.setDecimalFormatSymbols(symbols);
formatter.setMinimumFractionDigits(2);
return formatter.format((amount.setScale(2, RoundingMode.HALF_UP)));    

 }

}
