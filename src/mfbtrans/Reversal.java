/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.awt.Image;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author Emmanuel
 */
public class Reversal extends javax.swing.JFrame {

    /**
     * Creates new form Payment
     */
    public Reversal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonPost = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldDescription = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldAmount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldAccountID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldReference = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldBalance = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldint = new javax.swing.JTextField();
        jTextFieldprin = new javax.swing.JTextField();
        jTextFieldTrxno = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabelR = new javax.swing.JLabel();
        jComboBoxPayType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldChequeno = new javax.swing.JTextField();
        jLabelChequeNo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Payment Reversal");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButtonPost.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonPost.setMnemonic('P');
        jButtonPost.setText("Reverse");
        jButtonPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPostActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jTextFieldDescription.setEditable(false);
        jTextFieldDescription.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Actual Balance");

        jTextFieldAmount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAmountKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Description");

        jTextFieldAccountID.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Payment Reference");

        jTextFieldReference.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NGN" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("AccountID");

        jTextFieldBalance.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Payment Amount");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Principal");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Interest");

        jTextFieldint.setEditable(false);
        jTextFieldint.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldint.setText("0");
        jTextFieldint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFieldintMouseExited(evt);
            }
        });

        jTextFieldprin.setEditable(false);
        jTextFieldprin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldprin.setText("0");
        jTextFieldprin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFieldprinMouseExited(evt);
            }
        });

        jTextFieldTrxno.setEditable(false);
        jTextFieldTrxno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldTrxno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTrxnoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Trx_no");

        jLabelR.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldReference))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldAccountID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addComponent(jTextFieldTrxno, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldBalance))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldprin, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldint, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelR, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(27, 52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldTrxno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAccountID)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldBalance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldAmount)
                        .addComponent(jComboBox2)
                        .addComponent(jLabelR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldprin, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldint, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        jComboBoxPayType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBoxPayType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Cheque" }));
        jComboBoxPayType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPayTypeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Payment Type");

        jTextFieldChequeno.setVisible(false);
        jTextFieldChequeno.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jLabelChequeNo.setVisible(false);
        jLabelChequeNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelChequeNo.setText("Cheque No:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabelChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldChequeno, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxPayType, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jButtonPost, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxPayType)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonPost, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldChequeno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPostActionPerformed
 //JOptionPane.showMessageDialog(this,ses_date); 

 PreparedStatement pstmt;
 String Smonth,Sday,ID,amount,pamount,intamount,bal,remark="Paid";

 Calendar now=Calendar.getInstance();
        now.getTime();
        int year=now.get(Calendar.YEAR);
        int Omonth=now.get(Calendar.MONTH);//opening as january=0 not 1
        int day=now.get(Calendar.DAY_OF_MONTH);
         int month=Omonth+1;//note month start with january=0 in java
        Smonth=month+"";
        Sday=day+"";
       if(month<10){Smonth="0"+month;}// let it appear as two digit e.g 02
        if(day<10){Sday="0"+day;}
        Smonth=month+"";
   ID=jTextFieldAccountID.getText();
   amount=jTextFieldAmount.getText().replace("-", "");
   pamount=jTextFieldprin.getText();
   intamount=jTextFieldint.getText();
   bal=jTextFieldBalance.getText();
 
   double ovapaid=Double.parseDouble(amount)+Double.parseDouble(bal);
    String qry="";
   //check for full or partial payment or over payment
   //if(Double.parseDouble(amount)>-Double.parseDouble(bal)){
   //   JOptionPane.showMessageDialog(this,"Transaction cancelled" +"\n"+"This Account cannot be Overpaid by "+ovapaid);
   //} 
  // else{
       if(Double.parseDouble(amount)==Double.parseDouble(bal)){
        remark="Serviced";   
       }else{remark="Partially Serviced"; }
       String sqltable="loans";
      
         //Reversal CreditGl and DebitGL
            qry="select CreditGL,DebitGL,Reversed from transactn where TransactionNbr ='"+jTextFieldTrxno.getText()+"' and stmtref !='Interest on Repayment'";
            

            // qry="select GLCode,IntGL from product where ProductID like''+(select loanproduct from loans where loanid='"+jTextFieldAccountID.getText()+"')+ '%'";
    
       
  
       
 Global glob = new Global();
Connection conn= glob.getConnect();
String IntGL="31300",GLCode="13101";
String ReversedAlready="0";
try{
Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet current = stmt.executeQuery(qry);
            current.next();
            GLCode=current.getString("CreditGL");
             IntGL=current.getString("DebitGL");
             ReversedAlready=current.getString("Reversed");
                  //JOptionPane.showMessageDialog(this,IntGL+"||"+GLCode);
}
catch(Exception e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
String query1="update glbal set GlbCredit=GlbCredit-"+Double.parseDouble(pamount)+" where CoaNbr='"+ GLCode+"-"+glob.BranchCode+"' and GlbFinyear='C'"
        + " and glbPeriod='"+ses_date.substring(5,7)+"'";
String query1b="update glbal set GlbCredit=GlbCredit-"+Double.parseDouble(intamount)+" where CoaNbr='"+ IntGL+"-"+glob.BranchCode+"' and GlbFinyear='C'"
        + " and glbPeriod='"+ses_date.substring(5,7)+"'";
String query2="update glbal set Glbdebit=Glbdebit-"+Double.parseDouble(amount)+" where CoaNbr='"+tellerControlGl+"' and GlbFinyear='C'"
  + " and glbPeriod='"+ses_date.substring(5,7)+"'";

  //convert amount to negative because you are lessing as below:
double amnt=Double.parseDouble(pamount);
String query3="update loans set OutstandingBal=OutstandingBal-"+amnt+" where loanID='"+ID+"'";
String query4=("insert into transactn (AccountID,tranid,Amount,DebitGL,CreditGL,Runningbal,ValueDate,DateEffective,custNo,StmtRef,BranchID,ChequeNbr,CreatedBy,transactionNbr)"
        + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
String query5a="select count from loanschedule where loanid='"+ID+"' and  remark='P'";
String query5="update loanschedule set status='Not Serviced' where count='"+ repaycount+"'";
String query1d="update glbal set GlbCredit=GlbCredit-"+Double.parseDouble(amount)+" where CoaNbr='"+ GLCode+"-"+glob.BranchCode+"' and GlbFinyear='C'"
        + " and glbPeriod='"+ses_date.substring(5,7)+"'";
String query2d="update glbal set Glbdebit=Glbdebit-"+Double.parseDouble(amount)+" where CoaNbr='"+tellerControlGl+"' and GlbFinyear='C'"
  + " and glbPeriod='"+ses_date.substring(5,7)+"'";
String query1dw="update glbal set GlbCredit=GlbCredit+"+Double.parseDouble(amount)+" where CoaNbr='"+ GLCode+"-"+glob.BranchCode+"' and GlbFinyear='C'"
        + " and glbPeriod='"+ses_date.substring(5,7)+"'";
String query2dw="update glbal set Glbdebit=Glbdebit+"+Double.parseDouble(amount)+" where CoaNbr='"+tellerControlGl+"' and GlbFinyear='C'"
  + " and glbPeriod='"+ses_date.substring(5,7)+"'";

  //convert amount to negative because you are lessing as below:


String query3withdr="update Deposit  set RunningBal=RunningBal+"+amount+" where AccountID='"+ID+"'";
String query3dep="update Deposit  set RunningBal=RunningBal-"+amount+" where AccountID='"+ID+"'";
String query4d=("insert into transactn (AccountID,tranid,Amount,DebitGL,CreditGL,Runningbal,ValueDate,DateEffective,CustNO,StmtRef,BranchID,ChequeNbr,CreatedBy,transactionNbr)"
        + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

  
  //String PayBal=jTablePayment.getModel().getValueAt(jTablePayment.getSelectedRow(),2).toString();
      
    if(desc.equalsIgnoreCase("Repayment") && ReversedAlready.equalsIgnoreCase("0")){/////////////////
    ///////////////////////////////////////////////handling repayment reversal    
 
 
        try{
  
 Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
  qry="select CreditGL,DebitGL,Reversed from transactn where TransactionNbr ='"+jTextFieldTrxno.getText()+"' and stmtref ='Interest on Repayment'";
           
            ResultSet current = stmt.executeQuery(qry);
                     current.next();
                     String incomeGl=current.getString("CreditGL");
                     String loanGl=current.getString("DebitGL");
             current = stmt.executeQuery(query5a);
            current.next();
     int count= current.getInt("count");

 conn.setAutoCommit(false);//for transaction posting
pstmt=conn.prepareStatement(query1);//update loan  portfolio
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query1b);//update interest income
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query2);
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query3);
pstmt.executeUpdate();
//updating for repayment P+I
pstmt=conn.prepareStatement(query4);
pstmt.setString(1,ID);
pstmt.setString(2,"R001");
pstmt.setString(3,"-"+amount);
pstmt.setString(4,IntGL);    
pstmt.setString(5,GLCode);
double curbal=Double.parseDouble(bal)-Double.parseDouble(pamount);
pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
pstmt.setString(9,custno);
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,AccName);
pstmt.setString(12,"");
pstmt.setString(13,userid);
pstmt.setString(14,"R"+jTextFieldTrxno.getText());
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query5);
pstmt.executeUpdate();

//updating for interest
pstmt=conn.prepareStatement(query4);
pstmt.setString(1,ID);
pstmt.setString(2,"R0011");
pstmt.setString(3,"-"+intamount);
pstmt.setString(4,loanGl);
pstmt.setString(5,incomeGl);
pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
pstmt.setString(9,custno);
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,AccName);
pstmt.setString(12,"");
pstmt.setString(13,userid);
pstmt.setString(14,"R"+jTextFieldTrxno.getText());
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query5);
pstmt.executeUpdate();

double PAmt=Double.parseDouble(pamount);
double IAmt=Double.parseDouble(intamount);

while(count>0){//ensures it stops at first rw
  String sqlI="update loanschedule set status='Partially Serviced',servicedint=0 where loanid='"+ID+"' and count="+count+"";  
    String sqlP="update loanschedule set status='Not Serviced',servicedprin=0 where loanid='"+ID+"' and count="+count+"";  
      String sqlR="update loanschedule set remark='P' where loanid='"+ID+"' and count="+count+"";  

query5a="select servicedint,servicedprin from loanschedule where loanid='"+ID+"' and count="+count+"";
             current = stmt.executeQuery(query5a);
            
            current.next();
            double p=current.getDouble("servicedprin");
            double I=current.getDouble("servicedint");
            if (IAmt>0){
              IAmt=IAmt-I;
              
              if(IAmt<0){
                  IAmt=-IAmt;
                 sqlI="update loanschedule set status='Partially Serviced',servicedint="+IAmt+" where loanid='"+ID+"' and count="+count+"";  
    
              }else{
            sqlI="update loanschedule set status='Partially Serviced',servicedint=0.00 where loanid='"+ID+"' and count="+count+"";  
  
              }
              pstmt=conn.prepareStatement(sqlI);
           pstmt.executeUpdate();
           pstmt=conn.prepareStatement(sqlR);
           pstmt.executeUpdate();
            }
            if (PAmt>0){
              PAmt=PAmt-p; 
              if(PAmt<0){
                  
                  
                  PAmt=-PAmt;
                 sqlP="update loanschedule set status='Serviced',servicedprin="+PAmt+" where loanid='"+ID+"' and count="+count+"";  
       sqlR="update loanschedule set remark='P' where loanid='"+ID+"' and count="+count+"";  

              }else{
              sqlP="update loanschedule set status='Serviced',servicedprin=0.00 where loanid='"+ID+"' and count="+count+"";  
   sqlR="update loanschedule set remark='U' where loanid='"+ID+"' and count="+count+"";  

            }
               pstmt=conn.prepareStatement(sqlP);
           pstmt.executeUpdate();
            pstmt=conn.prepareStatement(sqlR);
           pstmt.executeUpdate();
            }

count=count-1;
repaycount=repaycount-1;//subtrate to move upwards i.e 3,2,1 pattern and then reverse 
}
count=count+1;// go back to last count
 String  sqlR="update loanschedule set remark='P' where loanid='"+ID+"' and count="+count+"";  
pstmt=conn.prepareStatement(sqlR);
           pstmt.executeUpdate();// to always mark end point with "P"
           
           //Mark as Reversed
pstmt=conn.prepareStatement("update transactn set Reversed='1' where transactionNbr like'%"+jTextFieldTrxno.getText()+"'");
pstmt.executeUpdate();
         conn.commit();//transaction saved
         conn.close();
 JOptionPane.showMessageDialog(this,"Done");
}
   
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
try{conn.rollback();}catch(SQLException sqx){//throw new Exception.("Roll back failed: "+sqx.getMessage();)
JOptionPane.showMessageDialog(this, e.getMessage());
}
}
    }
    else if(desc.equalsIgnoreCase("Deposit")&& ReversedAlready.equalsIgnoreCase("0")){/////////////////////////////////
        /////////////////////Deposit Reversal
        try{
 
   
 conn.setAutoCommit(false);//for transaction posting

pstmt=conn.prepareStatement(query1d);
pstmt.executeUpdate();
 
pstmt=conn.prepareStatement(query2d);
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query3dep);
pstmt.executeUpdate();
 
pstmt=conn.prepareStatement(query4d);
pstmt.setString(1,ID);
pstmt.setString(2,"R002");
pstmt.setString(3,"-"+jTextFieldAmount.getText());
pstmt.setString(4,tellerControlGl);
pstmt.setString(5,GLCode);
Double curbal=Double.parseDouble(bal)-Double.parseDouble(jTextFieldAmount.getText());
pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
pstmt.setString(9,custno);
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,AccName);
pstmt.setString(12,"");
pstmt.setString(13,userid);
pstmt.setString(14,"R"+jTextFieldTrxno.getText());
pstmt.executeUpdate();
//Mark as Reversed
pstmt=conn.prepareStatement("update transactn set Reversed='1' where transactionNbr like'%"+jTextFieldTrxno.getText()+"'");
pstmt.executeUpdate();
         conn.commit();//transaction saved
         conn.close();
 JOptionPane.showMessageDialog(this,"Done");
}
   
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
try{conn.rollback();}catch(SQLException sqx){//throw new Exception.("Roll back failed: "+sqx.getMessage();)
JOptionPane.showMessageDialog(this, e.getMessage());
}
}
        
    }
    else if(desc.equalsIgnoreCase("Withdrawal")&& ReversedAlready.equalsIgnoreCase("0")){///////////////////////////
        /////////////////Withdrawal Reversal
  
     try{
   
 conn.setAutoCommit(false);//for transaction posting

pstmt=conn.prepareStatement(query1dw);

pstmt.executeUpdate();

pstmt=conn.prepareStatement(query2dw);
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query3withdr);
pstmt.executeUpdate();
 
pstmt=conn.prepareStatement(query4d);
pstmt.setString(1,ID);
pstmt.setString(2,"R005");
pstmt.setString(3,"-"+jTextFieldAmount.getText());
pstmt.setString(4,IntGL);
pstmt.setString(5,GLCode);
Double curbal=Double.parseDouble(bal)+Double.parseDouble(jTextFieldAmount.getText());
pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
pstmt.setString(9,custno);
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,AccName);
pstmt.setString(12,"");
pstmt.setString(13,userid);
pstmt.setString(14,"R"+jTextFieldTrxno.getText());
pstmt.executeUpdate();
////mark as reversed
pstmt=conn.prepareStatement("update transactn set Reversed='1' where transactionNbr like'%"+jTextFieldTrxno.getText()+"'");
pstmt.executeUpdate();




         conn.commit();//transaction saved
         conn.close();
 JOptionPane.showMessageDialog(this,"Done");
}
      
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
try{conn.rollback();}catch(SQLException sqx){//throw new Exception.("Roll back failed: "+sqx.getMessage();)
JOptionPane.showMessageDialog(this, e.getMessage());
}   
     
    }
     
    }///end of else if for withdr
    else if(desc.equalsIgnoreCase("Disbursement")&& ReversedAlready.equalsIgnoreCase("0")){/////////////////////////////////
        /////////////////////Disbursement Reversal
       
        String sqlloansched="update loanschedule set servicedPrin=PrinRepay,servicedint=intrepay,status='cancel' where loanid='"+jTextFieldAccountID.getText()+"'";
        String sqlloans="update loans set status='cancel' where loanid='"+jTextFieldAccountID.getText()+"'";
        String sqlupdateCash="update glbal set GlbDebit=GlbDebit+"+Double.parseDouble(jTextFieldAmount.getText())+" where CoaNbr='"+tellerControlGl+"' and GlbFinyear='C'"
        + " and glbPeriod='"+ses_date.substring(5,7)+"'";
        GLCode="";
        try{
            double repayamnt=0.00;
 String sqlcheckrepay="select sum(servicedPrin+servicedint) RepaidAlready from loanschedule where loanid='"+jTextFieldAccountID.getText()+"'";
   Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
   ResultSet current = stmt.executeQuery(qry);
            current.next();
            GLCode=current.getString("CreditGl");
             IntGL=current.getString("DebitGL");
             //JOptionPane.showMessageDialog(rootPane, qry+ "  "+GLCode);   
             String sqlUpdateGLloans="update glbal set GlbCredit=GlbCredit+"+Double.parseDouble(jTextFieldAmount.getText())+" where CoaNbr='"+GLCode+"-"+glob.BranchCode+"' and GlbFinyear='C'"
  + " and glbPeriod='"+ses_date.substring(5,7)+"'";//ses_date.substring(5,7) is the session month

            
             current = stmt.executeQuery(sqlcheckrepay);
            
            if(current.next()){
                repayamnt=current.getDouble("RepaidAlready");
            }
   if(repayamnt<1) {//beginning of reversal            
 conn.setAutoCommit(false);//for transaction posting

pstmt=conn.prepareStatement(sqlloansched);
pstmt.executeUpdate();
 
pstmt=conn.prepareStatement(sqlloans);
pstmt.executeUpdate();
pstmt=conn.prepareStatement(sqlupdateCash);
pstmt.executeUpdate();

 pstmt=conn.prepareStatement(sqlUpdateGLloans);
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query4d);
pstmt.setString(1,ID);
pstmt.setString(2,"R010");
pstmt.setString(3,"-"+jTextFieldAmount.getText());
pstmt.setString(4,IntGL);
pstmt.setString(5,tellerControlGl);
//Double curbal=Double.parseDouble(bal)-Double.parseDouble(jTextFieldAmount.getText());
pstmt.setString(6,jTextFieldAmount.getText());
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
pstmt.setString(9,custno);
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,"");
pstmt.setString(12,"");
pstmt.setString(13,userid);
pstmt.setString(14,"R"+jTextFieldTrxno.getText());
pstmt.executeUpdate();
//mark as reversed
pstmt=conn.prepareStatement("update transactn set Reversed='1' where transactionNbr like'%"+jTextFieldTrxno.getText()+"'");
pstmt.executeUpdate();


         conn.commit();//transaction saved
         conn.close();
 JOptionPane.showMessageDialog(this,"Done");
  }//end of reversal 
}
   
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
try{conn.rollback();}catch(SQLException sqx){//throw new Exception.("Roll back failed: "+sqx.getMessage();)
JOptionPane.showMessageDialog(this, e.getMessage());
}
}
           
    }///end of if disbursement
    else{
        JOptionPane.showMessageDialog(rootPane, "This Transaction cannot be Reversed \n Please contact your Support");
    }
    this.setVisible(false);
   

    }//GEN-LAST:event_jButtonPostActionPerformed

    private void jComboBoxPayTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPayTypeActionPerformed
if (jComboBoxPayType.getSelectedItem().toString().equalsIgnoreCase("Cheque")) {
jTextFieldChequeno.setVisible(true); 
jLabelChequeNo.setVisible(true);
jTextFieldReference.setText(jTextFieldReference.getText().replace("cash", "Cheque"));
}
else{
jTextFieldChequeno.setVisible(false); 
jLabelChequeNo.setVisible(false);
jTextFieldReference.setText(jTextFieldReference.getText().replace("Cheque", "Cash"));
}// TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPayTypeActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
if(jTextFieldTrxno.getText().isEmpty()||jTextFieldTrxno.getText().equalsIgnoreCase("")){
    jButtonPost.setEnabled(false);
}
          
    }//GEN-LAST:event_formWindowOpened

    private void jTextFieldprinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldprinMouseExited
 
    }//GEN-LAST:event_jTextFieldprinMouseExited

    private void jTextFieldintMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldintMouseExited
 BigDecimal Amnt= BigDecimal.valueOf(Double.parseDouble(jTextFieldAmount.getText())).setScale(2, RoundingMode.HALF_UP);
 BigDecimal intrt= BigDecimal.valueOf(Double.parseDouble(jTextFieldint.getText())).setScale(2, RoundingMode.HALF_UP);
        jTextFieldprin.setText(Amnt.subtract(intrt)+"");              // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldintMouseExited

    private void jTextFieldAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAmountKeyTyped
if(jTextFieldAmount.getText().startsWith("-")){
    jLabelR.setText("Format error");
       jLabelR.setVisible(true);
       jButtonPost.setEnabled(false);
}else{
     jLabelR.setVisible(false);
     jButtonPost.setEnabled(true);
}
    }//GEN-LAST:event_jTextFieldAmountKeyTyped

    private void jTextFieldTrxnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTrxnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTrxnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reversal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reversal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reversal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reversal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reversal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPost;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBoxPayType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelChequeNo;
    private javax.swing.JLabel jLabelR;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField jTextFieldAccountID;
    public javax.swing.JTextField jTextFieldAmount;
    public javax.swing.JTextField jTextFieldBalance;
    public javax.swing.JTextField jTextFieldChequeno;
    public javax.swing.JTextField jTextFieldDescription;
    public javax.swing.JTextField jTextFieldReference;
    public javax.swing.JTextField jTextFieldTrxno;
    public javax.swing.JTextField jTextFieldint;
    public javax.swing.JTextField jTextFieldprin;
    // End of variables declaration//GEN-END:variables

public double prinRepay,interest,Amount;
boolean halfrepay=false,IntOnly=false;;
int repaycount,hands,complethand=0;
String userid,desc;
String tellerControlGl;
String ses_date,companyname,compshortname;
String custno;
String AccName;
}
