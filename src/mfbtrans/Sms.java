/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.URL;
import java.net.URLConnection;
import javax.swing.SwingUtilities;

/**
 *
 * @author LAPO MFB
 */
public class Sms extends javax.swing.JFrame {
 
    /**
     * Creates new form Sms
     */
    
public String postXMLData(String xmldata, String urlpath){
    String result = "";
    try {
    URL myurl = new URL(urlpath);
    URLConnection urlconn = myurl.openConnection();
     
    urlconn.setRequestProperty("Content-Type", "text/xml");
    urlconn.setDoOutput(true);
    urlconn.setDoInput(true);
    urlconn.connect();
     
    //Create a writer to the url
    PrintWriter pw = new PrintWriter(urlconn.getOutputStream());
    pw.write(xmldata, 0, xmldata.length());
    pw.close();
     
    //Create a reader for the output of the connection
    BufferedReader reader = new BufferedReader(new InputStreamReader(urlconn.getInputStream()));
    String line = reader.readLine();
    while (line != null) {
    result = result + line + "\n";
    line = reader.readLine();
    }
    } catch (Exception e) {
    e.printStackTrace();
    }
    return result;
    }
     
    public void setGsmno(String[] num){
        recipients=num;
    
    }
    public void setsendername(String name){
        sendername=name;
       
    }
    public void setmsg(String msg){
        message=msg;
       
    }
     public void sendSms(String num,String sender,String msg){
      String recipients = num;
        String xmlrecipients = "";
        String username = "emm4christ@yahoo.com";
        String apikey = "2984bafe643db514fe33c4f051e82be7ae0ff0d8"; 
        String sendername = sender;
        String message = msg;
        String flash = "0";
        String theoutput = "";
        String randmsgid = Double.toString(Math.random());
        //for( int i =0; i < recipients.length; i++ ){
            xmlrecipients += "<gsm><msidn>"+ recipients + "</msidn><msgid>" + randmsgid + "_" + 0 + "</msgid>" + "</gsm>";
        //}
        String xmlrequest =
                "<SMS>\n"
                + "<auth>"
                + "<username>" + username + "</username>\n"
                + "<apikey>" + apikey + "</apikey>\n"
                + "</auth>\n"
                + "<message>"
                + "<sender>" + sendername + "</sender>\n"
                + "<messagetext>" + message + "</messagetext>\n"
                + "<flash>" + flash + "</flash>\n"
                + "</message>\n"
                + "<recipients>\n"
                + xmlrecipients
                + "</recipients>\n"
                + "</SMS>";
        
        String theurl = "http://api.ebulksms.com:8080/sendsms.xml";
        Sms requester = new Sms();
        theoutput = requester.postXMLData(xmlrequest, theurl);
       // if(theoutput.contains("100")){
       //     System.out.println("100");
       // }
       // else{
       //     System.out.println(theoutput);
       // }
    
    }
    String[] recipients = {"", ""};
    String sendername = "Helping Hands";
    String message = "";
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SMS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public  void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 
    String xmlrecipients = "";
    String username = "emm4christ@yahoo.com";
    String apikey = "3fc94e9932ac2d4f135b9fdefd28e61f5ae8209d";
    String flash = "0";
    String theoutput = "";
    String randmsgid = Double.toString(Math.random());
    for( int i =0; i < recipients.length; i++ ){
    xmlrecipients += "<gsm><msidn>"+ recipients[i] + "</msidn><msgid>" + randmsgid + "_" + i + "</msgid>" + "</gsm>";
    }
    String xmlrequest =
    "<SMS>\n"
    + "<auth>"
    + "<username>" + username + "</username>\n"
    + "<apikey>" + apikey + "</apikey>\n"
    + "</auth>\n"
    + "<message>"
    + "<sender>" + sendername + "</sender>\n"
    + "<messagetext>" + message + "</messagetext>\n"
    + "<flash>" + flash + "</flash>\n"
    + "</message>\n"
    + "<recipients>\n"
    + xmlrecipients
    + "</recipients>\n"
    + "</SMS>";
    String theurl = "http://api.ebulksms.com:8080/sendsms.xml";
    Sms requester = new Sms();
    theoutput = requester.postXMLData(xmlrequest, theurl);
    if(theoutput.contains("100")){
    System.out.println("100");
    }
    else{
    System.out.println(theoutput);
    }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
String ses_date,companyname,compshortname;

}
