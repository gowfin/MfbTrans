/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mfbtrans;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Emmanuel
 */
public class DualPayment extends javax.swing.JFrame {

    /**
     * Creates new form Payment
     */
    public DualPayment() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonPost = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldDescription = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldAmount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPayID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldReference = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldBalance = new javax.swing.JTextField();
        jComboBoxBank = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldint = new javax.swing.JTextField();
        jTextFieldprin = new javax.swing.JTextField();
        jButtonCal = new javax.swing.JButton();
        jTextFieldBalance2 = new javax.swing.JLabel();
        jRadioButtonSkip = new javax.swing.JRadioButton();
        jSpinner1 = new javax.swing.JSpinner();
        jButtonadd = new javax.swing.JButton();
        jRadioButtonIgnore = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabelTotal = new javax.swing.JLabel();
        jLabelChequeNo2 = new javax.swing.JLabel();
        jTextFieldDepAmount = new javax.swing.JTextField();
        jLabelChequeNo = new javax.swing.JLabel();
        jComboBoxPayType = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jButtonPost1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dual Posting");
        setAlwaysOnTop(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButtonPost.setMnemonic('P');
        jButtonPost.setText("Post");
        jButtonPost.setEnabled(false);
        jButtonPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPostActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jTextFieldDescription.setEditable(false);
        jTextFieldDescription.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Actual Balance");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Bank");

        jTextFieldAmount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextFieldAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldAmount.setText("0.0");
        jTextFieldAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldAmountFocusLost(evt);
            }
        });
        jTextFieldAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAmountActionPerformed(evt);
            }
        });
        jTextFieldAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAmountKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAmountKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Description");

        jTextFieldPayID.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Payment Reference");

        jTextFieldReference.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NGN" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("AccountID");

        jTextFieldBalance.setEditable(false);

        jComboBoxBank.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jComboBoxBank.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Zenith Bank", "First Bank", "FCMB", "Diamond", "Standard Chartered Bank", "ECOBank", "Sterling", "Skye", "Fidelity Bank", "Wema", "UBA", "Interconnectal", "Unity" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Payment Amount");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Principal");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Interest");

        jTextFieldint.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextFieldint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFieldintMouseExited(evt);
            }
        });
        jTextFieldint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldintKeyPressed(evt);
            }
        });

        jTextFieldprin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextFieldprin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextFieldprinMouseExited(evt);
            }
        });
        jTextFieldprin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldprinKeyPressed(evt);
            }
        });

        jButtonCal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonCal.setText("Calculate");
        jButtonCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalActionPerformed(evt);
            }
        });
        jButtonCal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonCalKeyPressed(evt);
            }
        });

        jTextFieldBalance2.setText("Balwithint");

        jRadioButtonSkip.setText("Skip Interest");
        jRadioButtonSkip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSkipActionPerformed(evt);
            }
        });

        jSpinner1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSpinner1MouseClicked(evt);
            }
        });
        jSpinner1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSpinner1PropertyChange(evt);
            }
        });
        jSpinner1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jSpinner1KeyTyped(evt);
            }
        });

        jButtonadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddActionPerformed(evt);
            }
        });

        jRadioButtonIgnore.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButtonIgnore.setText("Ignore Fra");
        jRadioButtonIgnore.setBorder(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true), "Savings Deposit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabelChequeNo.setVisible(false);
        jLabelTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTotal.setText("0.00");

        jLabelChequeNo.setVisible(false);
        jLabelChequeNo2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelChequeNo2.setText("Total Amount:");

        jTextFieldDepAmount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextFieldDepAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDepAmount.setText("0.00");
        jTextFieldDepAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDepAmountKeyReleased(evt);
            }
        });

        jLabelChequeNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelChequeNo.setText("XXX.XX");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldDepAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelChequeNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabelChequeNo))
                            .addComponent(jLabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 96, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldDepAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelChequeNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelChequeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldReference, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBoxBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButtonSkip))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jTextFieldDescription))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jTextFieldBalance2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldPayID, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(2, 2, 2)
                                                .addComponent(jButtonadd, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jTextFieldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jRadioButtonIgnore))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jTextFieldprin, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldint, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCal)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPayID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldBalance2)
                    .addComponent(jRadioButtonIgnore))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldint, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonCal))
                            .addComponent(jTextFieldprin, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxBank)
                            .addComponent(jRadioButtonSkip)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonadd, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jComboBoxPayType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBoxPayType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Cheque" }));
        jComboBoxPayType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPayTypeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Payment Type");

        jButtonPost1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jButtonPost1.setMnemonic('P');
        jButtonPost1.setText("POST");
        jButtonPost1.setBorder(null);
        jButtonPost1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPost1ActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxPayType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonPost, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPost1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonPost1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxPayType, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonPost))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPostActionPerformed

      
 PreparedStatement pstmt;
 String Smonth,Sday,ID,amount,pamount,intamount,bal,remark="Paid";
 Calendar now=Calendar.getInstance();
        now.getTime();
        int year=now.get(Calendar.YEAR);
        int Omonth=now.get(Calendar.MONTH);//opening as january=0 not 1
        int day=now.get(Calendar.DAY_OF_MONTH);
         int month=Omonth+1;//note month start with january=0 in java
        Smonth=month+"";
        Sday=day+"";
       if(month<10){Smonth="0"+month;}// let it appear as two digit e.g 02
        if(day<10){Sday="0"+day;}
        Smonth=month+"";
   ID=jTextFieldPayID.getText();
   amount=jTextFieldAmount.getText().toString();
   pamount=jTextFieldprin.getText();
   intamount=jTextFieldint.getText();
   bal=jTextFieldBalance.getText();
   double ovapaid=Double.parseDouble(amount)+Double.parseDouble(bal);
   //check for full or partial payment or over payment
   if(Double.parseDouble(amount)>-(Double.parseDouble(bal)*1.24)){
      JOptionPane.showMessageDialog(this,"Transaction cancelled" +"\n"+"This Account cannot be Overpaid by "+ovapaid);
   } 
   else{
       if(Double.parseDouble(amount)==Double.parseDouble(bal)){
        remark="Serviced";   
       }else{remark="Partially Serviced"; }
       Double RunningAmount=Double.parseDouble(amount);
       while(RunningAmount>=(prinRepay+interest)){ ;
       
       RunningAmount=RunningAmount-(prinRepay+interest);
       complethand=complethand+1;
       }
       if(RunningAmount<=interest){
       IntOnly=true;    
       }
        
 Global glob = new Global();
Connection conn= glob.getConnect();
String query1="update glbal set GlbCredit=GlbCredit+"+Double.parseDouble(pamount)+" where CoaNbr='13101-547' and GlbFinyear='C'"
        + " and glbPeriod='"+Smonth+"'";
String query1b="update glbal set GlbCredit=GlbCredit+"+Double.parseDouble(intamount)+" where CoaNbr='31300' and GlbFinyear='C'"
        + " and glbPeriod='"+Smonth+"'";
String query2="update glbal set Glbdebit=Glbdebit+"+Double.parseDouble(amount)+" where CoaNbr='11102-547' and GlbFinyear='C'"
  + " and glbPeriod='"+Smonth+"'";

  //convert amount to negative because you are lessing as below:
double amnt=Double.parseDouble(pamount);
String query3="update loans set OutstandingBal=OutstandingBal+"+amnt+" where loanID='"+ID+"'";
String query4=("insert into transactn (AccountID,tranid,Amount,DebitGL,CreditGL,Runningbal,ValueDate,DateEffective,custNo,StmtRef,BranchID,ChequeNbr,CreatedBy)"
        + " values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
String query5="update loanschedule set status='Serviced' where count='"+ repaycount+"'";
  
  //String PayBal=jTablePayment.getModel().getValueAt(jTablePayment.getSelectedRow(),2).toString();
   //JOptionPane.showMessageDialog(this,PayBal);     
    
 
        try{
   
 conn.setAutoCommit(false);//for transaction posting
pstmt=conn.prepareStatement(query1);//update loan  portfolio
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query1b);//update interest income
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query2);
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query3);
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query4);
pstmt.setString(1,ID);
pstmt.setString(2,"001");
pstmt.setString(3,amount);
pstmt.setString(4,"11102-547");
pstmt.setString(5,"13101-547");
double curbal=Double.parseDouble(bal)+Double.parseDouble(amount)-Double.parseDouble(intamount);//bal is negative;so plus reduces the bal
pstmt.setString(6,curbal+"");
pstmt.setString(7,year+"-"+Smonth+"-"+Sday);
pstmt.setString(8,year+"-"+Smonth+"-"+Sday);
pstmt.setString(9,jTextFieldPayID.getToolTipText());
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,AccName);
pstmt.setString(12,jComboBoxBank.getSelectedItem().toString());
pstmt.setString(13,userid);
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query5);
pstmt.executeUpdate();

//updating for interest
pstmt=conn.prepareStatement(query4);
pstmt.setString(1,ID);
pstmt.setString(2,"011");
pstmt.setString(3,intamount);
pstmt.setString(4,"11102-547");
pstmt.setString(5,"31300");
pstmt.setString(6,curbal+"");
pstmt.setString(7,year+"-"+Smonth+"-"+Sday);
pstmt.setString(8,year+"-"+Smonth+"-"+Sday);
pstmt.setString(9,jTextFieldPayID.getToolTipText());
pstmt.setString(10,"Interest on Repayment");
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,AccName);
pstmt.setString(12,jComboBoxBank.getSelectedItem().toString());
pstmt.setString(13,userid);
pstmt.executeUpdate();
pstmt=conn.prepareStatement(query5);
pstmt.executeUpdate();

//repaycount=repaycount+1;
hands--;
double Tprin=0,Tint=0;
while(complethand>0){
query5="update loanschedule set status='Serviced',servicedprin=servicedprin+'"+prinRepay+"',"
        + "ServicedInt=ServicedInt+'"+interest+"' where count='"+ repaycount +"'"
        + " and loanID='"+ID+"'";
pstmt=conn.prepareStatement(query5);
pstmt.executeUpdate();
Tprin=Tprin+prinRepay;
Tint=Tint+interest;
complethand=complethand-1;
if(repaycount<25){//if will enable the transaction to be posted if wen schedule is exhausted
repaycount=repaycount+1;
}
}
double halfint,halfprin;
if(halfrepay){
   halfprin=Double.parseDouble(jTextFieldprin.getText())-Tprin;
     halfint=Double.parseDouble(jTextFieldint.getText())-Tint;
 query5="update loanschedule set status='Serviced',servicedprin=servicedprin+'"+halfprin+"',"
        + "ServicedInt=ServicedInt+'"+halfint+"' where count='"+ repaycount +"'"
        + " and loanID='"+ID+"'";
pstmt=conn.prepareStatement(query5);
pstmt.executeUpdate();   
}
         conn.commit();//transaction saved
 JOptionPane.showMessageDialog(this,"Done");
 this.setVisible(false);
}
   
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
try{conn.rollback();}catch(SQLException sqx){//throw new Exception.("Roll back failed: "+sqx.getMessage();)
JOptionPane.showMessageDialog(this, e.getMessage());
}
}this.setVisible(false);
 {         try {
     conn.close();
           } catch (SQLException ex) {
               ;
           }
}  }//finally 
           // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPostActionPerformed

    private void jComboBoxPayTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPayTypeActionPerformed
if (jComboBoxPayType.getSelectedItem().toString().equalsIgnoreCase("Cheque")) {
jTextFieldDepAmount.setVisible(true); 

jTextFieldReference.setText(jTextFieldReference.getText().toString().replace("cash", "Cheque"));
}
else{
 

jTextFieldReference.setText(jTextFieldReference.getText().toString().replace("Cheque", "Cash"));
}// TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPayTypeActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
 
                  jSpinner1.setValue(1);
              try
{
         Date cdate = new SimpleDateFormat("yyyy-MM-dd").parse( ses_date);
        //Date cdate =new Date((Date).parse(ses_date)); 

           jDateChooser1.setDate(cdate); 
}
catch(ParseException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
    }//GEN-LAST:event_formWindowOpened

    private void jTextFieldprinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldprinMouseExited
 BigDecimal Amnt= BigDecimal.valueOf(Double.parseDouble(jTextFieldAmount.getText())).setScale(2, RoundingMode.HALF_UP);
 BigDecimal prin= BigDecimal.valueOf(Double.parseDouble(jTextFieldprin.getText())).setScale(2, RoundingMode.HALF_UP);
 
jTextFieldint.setText(Amnt.subtract(prin)+"");      // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldprinMouseExited

    private void jTextFieldintMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldintMouseExited
 BigDecimal Amnt= BigDecimal.valueOf(Double.parseDouble(jTextFieldAmount.getText())).setScale(2, RoundingMode.HALF_UP);
 BigDecimal intrt= BigDecimal.valueOf(Double.parseDouble(jTextFieldint.getText())).setScale(2, RoundingMode.HALF_UP);
        jTextFieldprin.setText(Amnt.subtract(intrt)+"");              // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldintMouseExited

    private void jTextFieldAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAmountKeyTyped
//jTextFieldint.setText(interest/Amount*Double.parseDouble(jTextFieldAmount.getText())+"");
//jTextFieldprin.setText((Double.parseDouble(jTextFieldAmount.getText())-Double.parseDouble(jTextFieldint.getText()))+"");
// TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAmountKeyTyped

    private void jButtonCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalActionPerformed
tmpAmount=Double.parseDouble(jTextFieldAmount.getText());
//JOptionPane.showMessageDialog(this, interest+" "+Amount);
if(Double.parseDouble(jTextFieldAmount.getText())<=0.0){
    JOptionPane.showMessageDialog(this, "Payment Amount must be greater than ZERO");
    jButtonPost1.setEnabled(false);
}else{
    
    jButtonPost1.setEnabled(true);

        BigDecimal intrt= BigDecimal.valueOf(interest/Amount*Double.parseDouble(jTextFieldAmount.getText()));
        BigDecimal prin= BigDecimal.valueOf(Double.parseDouble(jTextFieldAmount.getText()));
jTextFieldint.setText(intrt.setScale(2, RoundingMode.HALF_UP)+"");
jTextFieldprin.setText((prin.subtract(intrt.setScale(2, RoundingMode.HALF_UP)))+"");

//get the number of loanschedule to be serviced
BigDecimal hans=null;
BigDecimal amt2 = BigDecimal.valueOf(Double.parseDouble(jTextFieldAmount.getText()));


BigDecimal amt = BigDecimal.valueOf(Amount);

hans=amt2.divide(amt, 2, RoundingMode.UP);

BigDecimal remain=amt2.divide(amt, 0, RoundingMode.UP);
//if(hans.subtract(remain).)){halfrepay=true;}
hands=hans.intValue();
}
//JOptionPane.showMessageDialog(this, hands+", "+hans+","+halfrepay+" remain="+remain);
jLabelTotal.setText(Double.parseDouble(jTextFieldAmount.getText())+Double.parseDouble(jTextFieldDepAmount.getText())+"");
    }//GEN-LAST:event_jButtonCalActionPerformed

    private void jButtonPost1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPost1ActionPerformed
String dd=jDateChooser1.getDate().toString();
        String m="";
        if(dd.contains("Jan")){m="01";}
        else if(dd.contains("Feb")){m="02";}
         else if(dd.contains("Mar")){m="03";}
         else if(dd.contains("Apr")){m="04";}
         else if(dd.contains("May")){m="05";}
         else if(dd.contains("Jun")){m="06";}
        else if(dd.contains("Jul")){m="07";}
        else if(dd.contains("Aug")){m="08";}
        else if(dd.contains("Sep")){m="09";}
        else if(dd.contains("Oct")){m="10";}
        else if(dd.contains("Nov")){m="11";}
        else if(dd.contains("Dec")){m="12";}
String SelectedDate= dd.substring(dd.length()-4)+"-"+m+"-"+dd.substring(8,10);
 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
 Date cdate = new Date();
   String strnow=sdf.format(cdate);
String loanGL="13101",IntGL="31300"; 
 Global glob = new Global();
Connection conn= glob.getConnect();
String StrQuery="select GLCode,intGL from Product where productid='"+jTextFieldDescription.getText()+"'";
///Verifying and ensuring the calculate button is clicked
if(!jRadioButtonSkip.isSelected()){
 jButtonCal.doClick();
}
try{
   Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet cur = stmt.executeQuery(StrQuery);
        cur.next();
 loanGL=cur.getString("GLCode")+"-"+glob.BranchCode;
 IntGL=cur.getString("intGL")+"-"+glob.BranchCode;
 
 cur.close();
}
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
}
 String Smonth,Sday,ID,amount,pamount,intamount,bal,remark="Paid";
 //generating transaction number
    Timestamp timestamp = new Timestamp(System.currentTimeMillis());    
        Random rand = new Random(timestamp.getTime());
        int Rnum=rand.nextInt(999999);

 PreparedStatement pstmt;
String year=ses_date.substring(0,4);
        Smonth=ses_date.substring(5,7);
         Sday=ses_date.substring(8,10);

// Getting SMS detail for sending
String SavingGL="13101",IntExpGL="31300"; 

String Q2="Select smscount,Branchname from branchcode";
String StrQuerySavgs="select GLCode,intGL from Product where productid like'"+jTextFieldDescription.getText().toString().substring(0,3)+"%Sav%'";
int SMScount=0;
String Bankname="Gowfin";
try{
   Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet cur = stmt.executeQuery(Q2);
            cur.next();
            SMScount=cur.getInt("smscount");
            Bankname=cur.getString("Branchname");
             cur = stmt.executeQuery(StrQuerySavgs);
                 
        cur.next();
 SavingGL=cur.getString("GLCode")+"-"+BranchCode;
 IntExpGL=cur.getString("intGL")+"-"+BranchCode;;
// JOptionPane.showMessageDialog(rootPane, SavingGL+","+IntExpGL);
    
 cur.close();
}
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
}
     
String amntDep=jTextFieldDepAmount.getText().replaceAll(",", "");
String query3;
String query4;
String IDS="1";
  //String PayBal=jTablePayment.getModel().getValueAt(jTablePayment.getSelectedRow(),2).toString();
       
     if(Double.parseDouble(amntDep)>0){
         try
         {
           
       String getAccIDAndBal="select AccountID,RunningBal from deposit where ProductID='Regular Savings' and CustNo='"+jTextFieldPayID.getToolTipText()+"'";
           Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);

 ResultSet   current = stmt.executeQuery(getAccIDAndBal);
       if(current.next()){
    
 bal=  current.getString("RunningBal");
 IDS=  current.getString("AccountID");
       
        query3="update Deposit  set RunningBal=RunningBal+"+amntDep+" where AccountID='"+IDS+"'";
query4=("insert into transactn (AccountID,tranid,Amount,DebitGL,CreditGL,Runningbal,ValueDate,DateEffective,CustNO,StmtRef,BranchID,ChequeNbr,CreatedBy,transactionNbr)"
        + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
//JOptionPane.showMessageDialog(rootPane, query3);
 //try{
 String tranctno=strnow.substring(2, 4)+strnow.substring(5, 7)+strnow.substring(8,10)+Rnum+"CDP";
  
 conn.setAutoCommit(false);//for transaction posting
 
//pstmt=conn.prepareStatement(query1);
//pstmt.executeUpdate();

//pstmt=conn.prepareStatement(query2);
//pstmt.executeUpdate();
pstmt=conn.prepareStatement(query3);
pstmt.executeUpdate();
 
pstmt=conn.prepareStatement(query4);
pstmt.setString(1,IDS);
pstmt.setString(2,"002");
pstmt.setString(3,amntDep+"");
pstmt.setString(4,tellerControlGl);
pstmt.setString(5,SavingGL);
Double curbal=Double.parseDouble(bal)+Double.parseDouble(amntDep);
pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
//pstmt.setString(8,strnow);
pstmt.setString(9,jTextFieldPayID.getToolTipText());
  String cltname=jTextFieldDescription.getToolTipText();
    if(cltname.length()>25){
     cltname=cltname.substring(0,25);
  }
pstmt.setString(10,"Savings Deposit by cash");
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,jTextFieldDescription.getToolTipText());
pstmt.setString(12,jComboBoxBank.getSelectedItem().toString());
pstmt.setString(13,userid);
pstmt.setString(14,tranctno);
pstmt.executeUpdate();
         //conn.commit();//transaction saved 
     
         //saving sms to smshist
          String[] pid=null;
         String glno;
  
    if(jTextFieldDescription.getText().contains(" ")){
       pid=  jTextFieldDescription.getText().split("\\s+");
       glno=pid[0].substring(0,3);
       //JOptionPane.showMessageDialog(rootPane, glno);
    }else
    {
     glno=  jTextFieldDescription.getText();   
    }
  
        
// JOptionPane.showMessageDialog(this,"Done");
        //}
        //catch(Exception e){JOptionPane.showMessageDialog(this,e.getMessage());}
       
       }
       else{
           JOptionPane.showMessageDialog(this,"No Regular Savings created for this clients \n"
                   + " Deposit will not be posted.You May Post it separately ");
          }
           }
     catch( HeadlessException | NumberFormatException | SQLException e){JOptionPane.showMessageDialog(rootPane, e.getMessage());}
     }
   
       
// end of deposit Posting
 

 
  //String strnow=sdf.format(ses_date);
  
       
        
   ID=jTextFieldPayID.getText();
   amount=jTextFieldAmount.getText();
   pamount=jTextFieldprin.getText();
   intamount=jTextFieldint.getText();
   bal=jTextFieldBalance.getText();
   double ovapaid=Double.parseDouble(amount)+Double.parseDouble(jTextFieldBalance2.getText());
   //check for full or partial payment or over payment
   if(Double.parseDouble(amount)>-(Double.parseDouble(jTextFieldBalance2.getText())) && jRadioButtonIgnore.isSelected()==false ){
      JOptionPane.showMessageDialog(this,"Transaction cancelled" +"\n"+"This Account cannot be Overpaid by "+BigDecimal.valueOf(ovapaid).setScale(2, RoundingMode.HALF_UP));
   } 
   else if(Math.abs(ovapaid)>10 && ovapaid>1 ){ JOptionPane.showMessageDialog(this,"Transaction cancelled" +"\n"+"This Account cannot be Overpaid by "+BigDecimal.valueOf(ovapaid).setScale(2, RoundingMode.HALF_UP)+"\n Difference too big to ignore");
}
   else{
       if(Double.parseDouble(amount)==Double.parseDouble(bal)){
        remark="Serviced";   
       }else{remark="Partially Serviced"; }
       
       
 
        

//String query1="update glbal set GlbCredit=GlbCredit+"+Double.parseDouble(pamount)+" where CoaNbr='"+loanGL+"' and GlbFinyear='C'"
 //       + " and glbPeriod='"+ses_date.substring(5,7)+"'";
//String query1b="update glbal set GlbCredit=GlbCredit+"+Double.parseDouble(intamount)+" where CoaNbr='"+IntGL+"' and GlbFinyear='C'"
//        + " and glbPeriod='"+ses_date.substring(5,7)+"'";
//String query2="update glbal set Glbdebit=Glbdebit+"+Double.parseDouble(amount)+" where CoaNbr='"+tellerControlGl+"' and GlbFinyear='C'"
//  + " and glbPeriod='"+ses_date.substring(5,7)+"'";

  //convert amount to negative because you are lessing as below:
double amnt=Double.parseDouble(pamount);
 query3="update loans set OutstandingBal=OutstandingBal+"+BigDecimal.valueOf(amnt).setScale(2, RoundingMode.HALF_UP)+" where loanID='"+ID+"'";
 query4=("insert into transactn (AccountID,tranid,Amount,DebitGL,CreditGL,Runningbal,ValueDate,DateEffective,custNo,StmtRef,BranchID,ChequeNbr,CreatedBy,transactionNbr)"
        + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

  
  //String PayBal=jTablePayment.getModel().getValueAt(jTablePayment.getSelectedRow(),2).toString();
   //JOptionPane.showMessageDialog(this,PayBal);     
    
 
        try{
   
String tranctno=strnow.substring(2, 4)+strnow.substring(5, 7)+strnow.substring(8,10)+Rnum+"LRP";
strnow=SelectedDate;
 conn.setAutoCommit(false);//for transaction posting
//pstmt=conn.prepareStatement(query1);//update loan  portfolio
//pstmt.executeUpdate();
if(Double.parseDouble(intamount)!=0.0){

   // pstmt=conn.prepareStatement(query1b);//update interest income
    //pstmt.executeUpdate();
           }
//pstmt=conn.prepareStatement(query2);
//pstmt.executeUpdate();
if(Math.abs(ovapaid)<5) {query3="update loans set OutstandingBal= 0.00 where loanID='"+ID+"'";}
pstmt=conn.prepareStatement(query3);
pstmt.executeUpdate();

pstmt=conn.prepareStatement(query4);
pstmt.setString(1,ID);
pstmt.setString(2,"001");
pstmt.setString(3,amount);
pstmt.setString(4,tellerControlGl);
pstmt.setString(5,loanGL);

 double curbal=Double.parseDouble(bal)+Double.parseDouble(amount)-Double.parseDouble(intamount);//bal is negative;so plus reduces the bal

if(Math.abs(ovapaid)<5)curbal=0.00;
pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
//pstmt.setString(8,strnow);
pstmt.setString(9,jTextFieldPayID.getToolTipText());
pstmt.setString(10,jTextFieldReference.getText());
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,AccName);
pstmt.setString(12,jComboBoxBank.getSelectedItem().toString());
pstmt.setString(13,userid);
pstmt.setString(14,tranctno);
pstmt.executeUpdate();


//updating for interest
if(Double.parseDouble(intamount)!=0.0){
pstmt=conn.prepareStatement(query4);
pstmt.setString(1,ID);
pstmt.setString(2,"011");
pstmt.setString(3,intamount);
pstmt.setString(4,loanGL);
pstmt.setString(5,IntGL);
pstmt.setString(6,curbal+"");
pstmt.setString(7,ses_date);
pstmt.setString(8,ses_date);
//pstmt.setString(8,strnow);
pstmt.setString(9,jTextFieldPayID.getToolTipText());
pstmt.setString(10,"Interest on Repayment");
//JOptionPane.showMessageDialog(this,jTextFieldDescription.getToolTipText());
pstmt.setString(11,AccName);
pstmt.setString(12,jComboBoxBank.getSelectedItem().toString());
pstmt.setString(13,userid);
pstmt.setString(14,tranctno);
pstmt.executeUpdate();
}
double AmountD=Double.parseDouble(amount);
String query5="";
String qq="";
//JOptionPane.showMessageDialog(this,repaycount);
  if(Double.parseDouble(intamount)==0.0) {AmountD=AmountD+(AmountD*(SkipInt))/(AmountD-SkipInt);
  BigDecimal BdAmount=BigDecimal.valueOf(AmountD);
  AmountD=BdAmount.setScale(2, RoundingMode.HALF_UP).doubleValue();
  //JOptionPane.showMessageDialog(this,AmountD);
  
  }          
while(AmountD>0 ){
 String query55="select * from loanschedule where remark='P' and loanID='"+ID+"'";
Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            ResultSet current = stmt.executeQuery(query55);
        current.next();
        //check for presence of partial or none serviced condition
Double PplusInt,PrinNonserv,IntNonserv;
int count;
if(current.getString("status").equalsIgnoreCase("Partial")){
    PplusInt=current.getDouble("PrinRepay")-current.getDouble("servicedPrin")+current.getDouble("intRepay")-current.getDouble("servicedint");
PrinNonserv=current.getDouble("PrinRepay")-current.getDouble("servicedPrin");
IntNonserv=current.getDouble("intRepay")-current.getDouble("servicedInt");
count=current.getInt("count");//remain in thesame schedule,do not go next
}
else{PplusInt=current.getDouble("PrinRepay")+current.getDouble("intRepay");
PrinNonserv=current.getDouble("PrinRepay");
IntNonserv=current.getDouble("intRepay");
count=current.getInt("count");
}
if(AmountD>=PplusInt){
  query5="update loanschedule set status='Serviced',servicedprin=servicedprin+'"+PrinNonserv+"',"
        + "ServicedInt=ServicedInt+'"+IntNonserv+"',remark='D' where count='"+count +"'"
        + " and loanID='"+ID+"'";
  //check for last schedule item to avoid errors of updating unexisting row
  if(current.getDouble("RunningBal")>(current.getDouble("RepayWithInt")+1)){
 qq="update loanschedule set remark='P' where count='"+(current.getInt("count")+1)+"'";
                        }
  else{
       qq="update loanschedule set remark='P' where count='"+(current.getInt("count"))+"'";

  }
   AmountD=AmountD-PplusInt;
 //JOptionPane.showMessageDialog(this, "Amount= "+AmountD); 
}
else if (AmountD<PplusInt){
    
      if(Double.parseDouble(intamount)==0.0)// takes care of principal repay without interest
          {
               double AmountRInt=IntNonserv*AmountD/PplusInt; // to calculate interest on remaining principal
               AmountRInt=BigDecimal.valueOf(AmountRInt).setScale(2, RoundingMode.HALF_UP).doubleValue();
               AmountD=AmountD-AmountRInt;
       query5="update loanschedule set status='Partial',servicedprin=servicedprin+'"+AmountD+"',"
        + "ServicedInt=ServicedInt+'"+AmountRInt+"',remark='P' where count='"+ (current.getInt("count"))+"'"
        + " and loanID='"+ID+"'";
        
   AmountD=AmountD-PplusInt;
        
    }
      else if(AmountD>IntNonserv){
           double AmountRInt=IntNonserv*AmountD/PplusInt; // to calculate interest on remaining AmountD (principal+interest) 
               AmountRInt=BigDecimal.valueOf(AmountRInt).setScale(2, RoundingMode.HALF_UP).doubleValue();

        double AmountR=AmountD-AmountRInt;
       query5="update loanschedule set status='Partial',servicedprin=servicedprin+'"+AmountR+"',"
        + "ServicedInt=ServicedInt+'"+AmountRInt+"',remark='P' where count='"+ (current.getInt("count"))+"'"
        + " and loanID='"+ID+"'";
        
   AmountD=AmountD-PplusInt;
   
    //JOptionPane.showMessageDialog(this, "Amount= "+AmountD); 
          }
   else{  
        
    query5="update loanschedule set status='Partial',"
        + "ServicedInt=ServicedInt+'"+AmountD+"',remark='P' where count='"+ (current.getInt("count")) +"'"
        + " and loanID='"+ID+"'";
            
 //JOptionPane.showMessageDialog(this, "Amount= "+AmountD); 
    AmountD=0;
    repaycount=repaycount+1;
    }
}
pstmt=conn.prepareStatement(query5);
pstmt.executeUpdate();
   pstmt=conn.prepareStatement(qq);
pstmt.executeUpdate();
      
}  String[] pid=null;
   String glno="REGSAVGS";
    conn.commit();//transaction saved
    if(jTextFieldDescription.getText().contains(" ")){
       pid=  jTextFieldDescription.getText().split("\\s+");
       //glno=pid[0].substring(0,3);
       glno="REGSAVGS";
       JOptionPane.showMessageDialog(rootPane, glno);
    }else
    {
     glno="REGSAVGS";   
    }
      //sending SMS for Repayment
    //sendSMS send = new sendSMS();
     //send.getAcc( "Credit",jTextFieldPayID.getText(), glno,Double.parseDouble(amount), jTextFieldDescription.getText(), year+"-"+Smonth+"-"+Sday+" 00:00:00.000");//getAcc(String trxtype,String acc,String gl, double amount,String text,String sesdate)
     
     //sending SMS for Deposit
     sendSMS send = new sendSMS();
     send.getAcc( "Credit",IDS, glno,Double.parseDouble(amntDep), "Regular Savings", year+"-"+Smonth+"-"+Sday+" 00:00:00.000");//getAcc(String trxtype,String acc,String gl, double amount,String text,String sesdate)
    
 JOptionPane.showMessageDialog(this,"Done");
 this.setVisible(false);
        }
   
catch(Exception e){
    JOptionPane.showMessageDialog(this, e.getMessage());
try{conn.rollback();}catch(SQLException sqx){//throw new Exception.("Roll back failed: "+sqx.getMessage();)
JOptionPane.showMessageDialog(this, e.getMessage());
}
}this.setVisible(false);
   }        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPost1ActionPerformed

    private void jTextFieldAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAmountFocusLost
if(Double.parseDouble(jTextFieldAmount.getText())<=0.0){
    JOptionPane.showMessageDialog(this, "Payment Amount must be greater than ZERO");
    jButtonPost1.setEnabled(false);
}else{
    jButtonCal.doClick();
    jButtonPost1.setEnabled(true);
}
    }//GEN-LAST:event_jTextFieldAmountFocusLost

    private void jRadioButtonSkipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSkipActionPerformed
if(Double.parseDouble(jTextFieldAmount.getText())<=0.0){
    JOptionPane.showMessageDialog(this, "Payment Amount must be greater than ZERO");
    jButtonPost1.setEnabled(false);
}else{jTextFieldprin.setText(jTextFieldAmount.getText());
SkipInt=Double.parseDouble(jTextFieldint.getText());
jTextFieldint.setText("0");
jButtonPost1.setEnabled(true);
}
    }//GEN-LAST:event_jRadioButtonSkipActionPerformed

    private void jTextFieldAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAmountActionPerformed

    private void jSpinner1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinner1MouseClicked
jButtonadd.doClick();
    }//GEN-LAST:event_jSpinner1MouseClicked

    private void jSpinner1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinner1KeyTyped

    }//GEN-LAST:event_jSpinner1KeyTyped

    private void jButtonaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddActionPerformed
if(Double.parseDouble(jSpinner1.getValue().toString())>=0.0){
   BigDecimal Amt= BigDecimal.valueOf(tmpAmount*Double.parseDouble(jSpinner1.getValue().toString()));
        jTextFieldAmount.setText(Amt.setScale(2, RoundingMode.HALF_UP)+"");
}
    }//GEN-LAST:event_jButtonaddActionPerformed

    private void jSpinner1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSpinner1PropertyChange
jButtonadd.doClick();        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner1PropertyChange

    private void jTextFieldAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAmountKeyPressed
if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
    jButtonPost1.doClick();
}        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAmountKeyPressed

    private void jTextFieldintKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldintKeyPressed
if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
    jButtonPost1.doClick();
}           // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldintKeyPressed

    private void jButtonCalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonCalKeyPressed
if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
    jButtonPost1.doClick();
}           // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCalKeyPressed

    private void jTextFieldprinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldprinKeyPressed
if (evt.getKeyCode()==KeyEvent.VK_ENTER ){
    jButtonPost1.doClick();
}           // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldprinKeyPressed

    private void jTextFieldDepAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDepAmountKeyReleased
     //jLabelTotal.setText(Double.parseDouble(jTextFieldAmount.getText())+Double.parseDouble(jTextFieldDepAmount.getText())+"");

    }//GEN-LAST:event_jTextFieldDepAmountKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DualPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DualPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DualPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DualPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DualPayment().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCal;
    private javax.swing.JButton jButtonPost;
    private javax.swing.JButton jButtonPost1;
    private javax.swing.JButton jButtonadd;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBoxBank;
    private javax.swing.JComboBox jComboBoxPayType;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelChequeNo;
    private javax.swing.JLabel jLabelChequeNo2;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonIgnore;
    private javax.swing.JRadioButton jRadioButtonSkip;
    private javax.swing.JSpinner jSpinner1;
    public javax.swing.JTextField jTextFieldAmount;
    public javax.swing.JTextField jTextFieldBalance;
    public javax.swing.JLabel jTextFieldBalance2;
    public javax.swing.JTextField jTextFieldDepAmount;
    public javax.swing.JTextField jTextFieldDescription;
    public javax.swing.JTextField jTextFieldPayID;
    public javax.swing.JTextField jTextFieldReference;
    public javax.swing.JTextField jTextFieldint;
    public javax.swing.JTextField jTextFieldprin;
    // End of variables declaration//GEN-END:variables

public double prinRepay,interest,Amount;
boolean halfrepay=false,IntOnly=false;;
int repaycount,hands,complethand=0;
String AccName="";
String userid,BranchCode;
String tellerControlGl;
double SkipInt=0.0;
double tmpAmount=0.0;
String ses_date,companyname,compshortname;
}
